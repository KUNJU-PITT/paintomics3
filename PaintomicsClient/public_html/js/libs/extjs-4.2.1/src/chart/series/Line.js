Ext.define("Ext.chart.series.Line",{extend:"Ext.chart.series.Cartesian",alternateClassName:["Ext.chart.LineSeries","Ext.chart.LineChart"],requires:["Ext.chart.axis.Axis","Ext.chart.Shape","Ext.draw.Draw","Ext.fx.Anim"],type:"line",alias:"series.line",selectionTolerance:20,showMarkers:true,markerConfig:{},style:{},smooth:false,defaultSmoothness:3,fill:false,constructor:function(config){this.callParent(arguments);var me=this,surface=me.chart.surface,shadow=me.chart.shadow,i,l;config.highlightCfg=Ext.Object.merge({"stroke-width":3},config.highlightCfg);Ext.apply(me,config,{shadowAttributes:[{"stroke-width":6,"stroke-opacity":.05,stroke:"rgb(0, 0, 0)",translate:{x:1,y:1}},{"stroke-width":4,"stroke-opacity":.1,stroke:"rgb(0, 0, 0)",translate:{x:1,y:1}},{"stroke-width":2,"stroke-opacity":.15,stroke:"rgb(0, 0, 0)",translate:{x:1,y:1}}]});me.group=surface.getGroup(me.seriesId);if(me.showMarkers){me.markerGroup=surface.getGroup(me.seriesId+"-markers")}if(shadow){for(i=0,l=me.shadowAttributes.length;i<l;i++){me.shadowGroups.push(surface.getGroup(me.seriesId+"-shadows"+i))}}},shrink:function(xValues,yValues,size){var len=xValues.length,ratio=Math.floor(len/size),i=1,xSum=0,ySum=0,xRes=[+xValues[0]],yRes=[+yValues[0]];for(;i<len;++i){xSum+=+xValues[i]||0;ySum+=+yValues[i]||0;if(i%ratio==0){xRes.push(xSum/ratio);yRes.push(ySum/ratio);xSum=0;ySum=0}}return{x:xRes,y:yRes}},drawSeries:function(){var me=this,chart=me.chart,chartAxes=chart.axes,store=chart.getChartStore(),data=store.data.items,record,storeCount=store.getCount(),surface=me.chart.surface,bbox={},group=me.group,showMarkers=me.showMarkers,markerGroup=me.markerGroup,enableShadows=chart.shadow,shadowGroups=me.shadowGroups,shadowAttributes=me.shadowAttributes,smooth=me.smooth,lnsh=shadowGroups.length,dummyPath=["M"],path=["M"],renderPath=["M"],smoothPath=["M"],markerIndex=chart.markerIndex,axes=[].concat(me.axis),shadowBarAttr,xValues=[],xValueMap={},yValues=[],yValueMap={},onbreak=false,storeIndices=[],markerStyle=Ext.apply({},me.markerStyle),seriesStyle=me.seriesStyle,colorArrayStyle=me.colorArrayStyle,colorArrayLength=colorArrayStyle&&colorArrayStyle.length||0,isNumber=Ext.isNumber,seriesIdx=me.seriesIdx,boundAxes=me.getAxesForXAndYFields(),boundXAxis=boundAxes.xAxis,boundYAxis=boundAxes.yAxis,xAxisType=boundXAxis?chartAxes.get(boundXAxis).type:"",yAxisType=boundYAxis?chartAxes.get(boundYAxis).type:"",shadows,shadow,shindex,fromPath,fill,fillPath,rendererAttributes,x,y,prevX,prevY,firstX,firstY,markerCount,i,j,ln,axis,ends,marker,markerAux,item,xValue,yValue,coords,xScale,yScale,minX,maxX,minY,maxY,line,animation,endMarkerStyle,endLineStyle,type,count,opacity,lineOpacity,fillOpacity,fillDefaultValue;if(me.fireEvent("beforedraw",me)===false){return}if(!storeCount||me.seriesIsHidden){me.hide();me.items=[];if(me.line){me.line.hide(true);if(me.line.shadows){shadows=me.line.shadows;for(j=0,lnsh=shadows.length;j<lnsh;j++){shadow=shadows[j];shadow.hide(true)}}if(me.fillPath){me.fillPath.hide(true)}}me.line=null;me.fillPath=null;return}endMarkerStyle=Ext.apply(markerStyle||{},me.markerConfig,{fill:me.seriesStyle.fill||colorArrayStyle[me.themeIdx%colorArrayStyle.length]});type=endMarkerStyle.type;delete endMarkerStyle.type;endLineStyle=seriesStyle;if(!endLineStyle["stroke-width"]){endLineStyle["stroke-width"]=.5}opacity="opacity"in endLineStyle?endLineStyle.opacity:1;fillDefaultValue="opacity"in endLineStyle?endLineStyle.opacity:.3;lineOpacity="lineOpacity"in endLineStyle?endLineStyle.lineOpacity:opacity;fillOpacity="fillOpacity"in endLineStyle?endLineStyle.fillOpacity:fillDefaultValue;if(markerIndex&&markerGroup&&markerGroup.getCount()){for(i=0;i<markerIndex;i++){marker=markerGroup.getAt(i);markerGroup.remove(marker);markerGroup.add(marker);markerAux=markerGroup.getAt(markerGroup.getCount()-2);marker.setAttributes({x:0,y:0,translate:{x:markerAux.attr.translation.x,y:markerAux.attr.translation.y}},true)}}me.unHighlightItem();me.cleanHighlights();me.setBBox();bbox=me.bbox;me.clipRect=[bbox.x,bbox.y,bbox.width,bbox.height];if(axis=chartAxes.get(boundXAxis)){ends=axis.applyData();minX=ends.from;maxX=ends.to}if(axis=chartAxes.get(boundYAxis)){ends=axis.applyData();minY=ends.from;maxY=ends.to}if(me.xField&&!Ext.isNumber(minX)){axis=me.getMinMaxXValues();minX=axis[0];maxX=axis[1]}if(me.yField&&!Ext.isNumber(minY)){axis=me.getMinMaxYValues();minY=axis[0];maxY=axis[1]}if(isNaN(minX)){minX=0;xScale=bbox.width/(storeCount-1||1)}else{xScale=bbox.width/(maxX-minX||storeCount-1||1)}if(isNaN(minY)){minY=0;yScale=bbox.height/(storeCount-1||1)}else{yScale=bbox.height/(maxY-minY||storeCount-1||1)}for(i=0,ln=data.length;i<ln;i++){record=data[i];xValue=record.get(me.xField);if(xAxisType=="Time"&&typeof xValue=="string"){xValue=Date.parse(xValue)}if(typeof xValue=="string"||typeof xValue=="object"&&!Ext.isDate(xValue)||boundXAxis&&chartAxes.get(boundXAxis)&&chartAxes.get(boundXAxis).type=="Category"){if(xValue in xValueMap){xValue=xValueMap[xValue]}else{xValue=xValueMap[xValue]=i}}yValue=record.get(me.yField);if(yAxisType=="Time"&&typeof yValue=="string"){yValue=Date.parse(yValue)}if(typeof yValue=="undefined"||typeof yValue=="string"&&!yValue){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("[Ext.chart.series.Line]  Skipping a store element with an undefined value at ",record,xValue,yValue)}continue}if(typeof yValue=="string"||typeof yValue=="object"&&!Ext.isDate(yValue)||boundYAxis&&chartAxes.get(boundYAxis)&&chartAxes.get(boundYAxis).type=="Category"){yValue=i}storeIndices.push(i);xValues.push(xValue);yValues.push(yValue)}ln=xValues.length;if(ln>bbox.width){coords=me.shrink(xValues,yValues,bbox.width);xValues=coords.x;yValues=coords.y}me.items=[];count=0;ln=xValues.length;for(i=0;i<ln;i++){xValue=xValues[i];yValue=yValues[i];if(yValue===false){if(path.length==1){path=[]}onbreak=true;me.items.push(false);continue}else{x=(bbox.x+(xValue-minX)*xScale).toFixed(2);y=(bbox.y+bbox.height-(yValue-minY)*yScale).toFixed(2);if(onbreak){onbreak=false;path.push("M")}path=path.concat([x,y])}if(typeof firstY=="undefined"&&typeof y!="undefined"){firstY=y;firstX=x}if(!me.line||chart.resizing){dummyPath=dummyPath.concat([x,bbox.y+bbox.height/2])}if(chart.animate&&chart.resizing&&me.line){me.line.setAttributes({path:dummyPath,opacity:lineOpacity},true);if(me.fillPath){me.fillPath.setAttributes({path:dummyPath,opacity:fillOpacity},true)}if(me.line.shadows){shadows=me.line.shadows;for(j=0,lnsh=shadows.length;j<lnsh;j++){shadow=shadows[j];shadow.setAttributes({path:dummyPath},true)}}}if(showMarkers){marker=markerGroup.getAt(count++);if(!marker){marker=Ext.chart.Shape[type](surface,Ext.apply({group:[group,markerGroup],x:0,y:0,translate:{x:+(prevX||x),y:prevY||bbox.y+bbox.height/2},value:'"'+xValue+", "+yValue+'"',zIndex:4e3},endMarkerStyle));marker._to={translate:{x:+x,y:+y}}}else{marker.setAttributes({value:'"'+xValue+", "+yValue+'"',x:0,y:0,hidden:false},true);marker._to={translate:{x:+x,y:+y}}}}me.items.push({series:me,value:[xValue,yValue],point:[x,y],sprite:marker,storeItem:store.getAt(storeIndices[i])});prevX=x;prevY=y}if(path.length<=1){return}if(me.smooth){smoothPath=Ext.draw.Draw.smooth(path,isNumber(smooth)?smooth:me.defaultSmoothness)}renderPath=smooth?smoothPath:path;if(chart.markerIndex&&me.previousPath){fromPath=me.previousPath;if(!smooth){Ext.Array.erase(fromPath,1,2)}}else{fromPath=path}if(!me.line){me.line=surface.add(Ext.apply({type:"path",group:group,path:dummyPath,stroke:endLineStyle.stroke||endLineStyle.fill},endLineStyle||{}));me;me.line.setAttributes({opacity:lineOpacity},true);if(enableShadows){me.line.setAttributes(Ext.apply({},me.shadowOptions),true)}me.line.setAttributes({fill:"none",zIndex:3e3});if(!endLineStyle.stroke&&colorArrayLength){me.line.setAttributes({stroke:colorArrayStyle[me.themeIdx%colorArrayLength]},true)}if(enableShadows){shadows=me.line.shadows=[];for(shindex=0;shindex<lnsh;shindex++){shadowBarAttr=shadowAttributes[shindex];shadowBarAttr=Ext.apply({},shadowBarAttr,{path:dummyPath});shadow=surface.add(Ext.apply({},{type:"path",group:shadowGroups[shindex]},shadowBarAttr));shadows.push(shadow)}}}if(me.fill){fillPath=renderPath.concat([["L",x,bbox.y+bbox.height],["L",firstX,bbox.y+bbox.height],["L",firstX,firstY]]);if(!me.fillPath){me.fillPath=surface.add({group:group,type:"path",fill:endLineStyle.fill||colorArrayStyle[me.themeIdx%colorArrayLength],path:dummyPath})}}markerCount=showMarkers&&markerGroup.getCount();if(chart.animate){fill=me.fill;line=me.line;rendererAttributes=me.renderer(line,false,{path:renderPath},i,store);Ext.apply(rendererAttributes,endLineStyle||{},{stroke:endLineStyle.stroke||endLineStyle.fill});delete rendererAttributes.fill;line.show(true);if(chart.markerIndex&&me.previousPath){me.animation=animation=me.onAnimate(line,{to:rendererAttributes,from:{path:fromPath}})}else{me.animation=animation=me.onAnimate(line,{to:rendererAttributes})}if(enableShadows){shadows=line.shadows;for(j=0;j<lnsh;j++){shadows[j].show(true);if(chart.markerIndex&&me.previousPath){me.onAnimate(shadows[j],{to:{path:renderPath},from:{path:fromPath}})}else{me.onAnimate(shadows[j],{to:{path:renderPath}})}}}if(fill){me.fillPath.show(true);me.onAnimate(me.fillPath,{to:Ext.apply({},{path:fillPath,fill:endLineStyle.fill||colorArrayStyle[me.themeIdx%colorArrayLength],"stroke-width":0,opacity:fillOpacity},endLineStyle||{})})}if(showMarkers){count=0;for(i=0;i<ln;i++){if(me.items[i]){item=markerGroup.getAt(count++);if(item){rendererAttributes=me.renderer(item,store.getAt(i),item._to,i,store);me.onAnimate(item,{to:Ext.applyIf(rendererAttributes,endMarkerStyle||{})});item.show(true)}}}for(;count<markerCount;count++){item=markerGroup.getAt(count);item.hide(true)}}}else{rendererAttributes=me.renderer(me.line,false,{path:renderPath,hidden:false},i,store);Ext.apply(rendererAttributes,endLineStyle||{},{stroke:endLineStyle.stroke||endLineStyle.fill});delete rendererAttributes.fill;me.line.setAttributes(rendererAttributes,true);me.line.setAttributes({opacity:lineOpacity},true);if(enableShadows){shadows=me.line.shadows;for(j=0;j<lnsh;j++){shadows[j].setAttributes({path:renderPath,hidden:false},true)}}if(me.fill){me.fillPath.setAttributes({path:fillPath,hidden:false,opacity:fillOpacity},true)}if(showMarkers){count=0;for(i=0;i<ln;i++){if(me.items[i]){item=markerGroup.getAt(count++);if(item){rendererAttributes=me.renderer(item,store.getAt(i),item._to,i,store);item.setAttributes(Ext.apply(endMarkerStyle||{},rendererAttributes||{}),true);if(!item.attr.hidden){item.show(true)}}}}for(;count<markerCount;count++){item=markerGroup.getAt(count);item.hide(true)}}}if(chart.markerIndex){if(me.smooth){Ext.Array.erase(path,1,2)}else{Ext.Array.splice(path,1,0,path[1],path[2])}me.previousPath=path}me.renderLabels();me.renderCallouts();me.fireEvent("draw",me)},onCreateLabel:function(storeItem,item,i,display){var me=this,group=me.labelsGroup,config=me.label,bbox=me.bbox,endLabelStyle=Ext.apply({},config,me.seriesLabelStyle||{});return me.chart.surface.add(Ext.apply({type:"text","text-anchor":"middle",group:group,x:Number(item.point[0]),y:bbox.y+bbox.height/2},endLabelStyle||{}))},onPlaceLabel:function(label,storeItem,item,i,display,animate,index){var me=this,chart=me.chart,resizing=chart.resizing,config=me.label,format=config.renderer,field=config.field,bbox=me.bbox,x=Number(item.point[0]),y=Number(item.point[1]),radius=item.sprite.attr.radius,labelBox,markerBox,width,height,xOffset,yOffset;label.setAttributes({text:format(storeItem.get(field),label,storeItem,item,i,display,animate,index),hidden:true},true);markerBox=item.sprite.getBBox();markerBox.width=markerBox.width||radius*2;markerBox.height=markerBox.height||radius*2;labelBox=label.getBBox();width=labelBox.width/2;height=labelBox.height/2;if(display=="rotate"){xOffset=markerBox.width/2+width+height/2;if(x+xOffset+width>bbox.x+bbox.width){x-=xOffset}else{x+=xOffset}label.setAttributes({rotation:{x:x,y:y,degrees:-45}},true)}else if(display=="under"||display=="over"){label.setAttributes({rotation:{degrees:0}},true);if(x<bbox.x+width){x=bbox.x+width}else if(x+width>bbox.x+bbox.width){x=bbox.x+bbox.width-width}yOffset=markerBox.height/2+height;y=y+(display=="over"?-yOffset:yOffset);if(y<bbox.y+height){y+=2*yOffset}else if(y+height>bbox.y+bbox.height){y-=2*yOffset}}if(me.chart.animate&&!me.chart.resizing){label.show(true);me.onAnimate(label,{to:{x:x,y:y}})}else{label.setAttributes({x:x,y:y},true);if(resizing&&me.animation){me.animation.on("afteranimate",function(){label.show(true)})}else{label.show(true)}}},highlightItem:function(){var me=this,line=me.line;me.callParent(arguments);if(line&&!me.highlighted){if(!("__strokeWidth"in line)){line.__strokeWidth=parseFloat(line.attr["stroke-width"])||0}if(line.__anim){line.__anim.paused=true}line.__anim=new Ext.fx.Anim({target:line,to:{"stroke-width":line.__strokeWidth+3}});me.highlighted=true}},unHighlightItem:function(){var me=this,line=me.line,width;me.callParent(arguments);if(line&&me.highlighted){width=line.__strokeWidth||parseFloat(line.attr["stroke-width"])||0;line.__anim=new Ext.fx.Anim({target:line,to:{"stroke-width":width}});me.highlighted=false}},onPlaceCallout:function(callout,storeItem,item,i,display,animate,index){if(!display){return}var me=this,chart=me.chart,surface=chart.surface,resizing=chart.resizing,config=me.callouts,items=me.items,prev=i==0?false:items[i-1].point,next=i==items.length-1?false:items[i+1].point,cur=[+item.point[0],+item.point[1]],dir,norm,normal,a,aprev,anext,offsetFromViz=config.offsetFromViz||30,offsetToSide=config.offsetToSide||10,offsetBox=config.offsetBox||3,boxx,boxy,boxw,boxh,p,clipRect=me.clipRect,bbox={width:config.styles.width||10,height:config.styles.height||10},x,y;if(!prev){prev=cur}if(!next){next=cur}a=(next[1]-prev[1])/(next[0]-prev[0]);aprev=(cur[1]-prev[1])/(cur[0]-prev[0]);anext=(next[1]-cur[1])/(next[0]-cur[0]);norm=Math.sqrt(1+a*a);dir=[1/norm,a/norm];normal=[-dir[1],dir[0]];if(aprev>0&&anext<0&&normal[1]<0||aprev<0&&anext>0&&normal[1]>0){normal[0]*=-1;normal[1]*=-1}else if(Math.abs(aprev)<Math.abs(anext)&&normal[0]<0||Math.abs(aprev)>Math.abs(anext)&&normal[0]>0){normal[0]*=-1;normal[1]*=-1}x=cur[0]+normal[0]*offsetFromViz;y=cur[1]+normal[1]*offsetFromViz;boxx=x+(normal[0]>0?0:-(bbox.width+2*offsetBox));boxy=y-bbox.height/2-offsetBox;boxw=bbox.width+2*offsetBox;boxh=bbox.height+2*offsetBox;if(boxx<clipRect[0]||boxx+boxw>clipRect[0]+clipRect[2]){normal[0]*=-1}if(boxy<clipRect[1]||boxy+boxh>clipRect[1]+clipRect[3]){normal[1]*=-1}x=cur[0]+normal[0]*offsetFromViz;y=cur[1]+normal[1]*offsetFromViz;boxx=x+(normal[0]>0?0:-(bbox.width+2*offsetBox));boxy=y-bbox.height/2-offsetBox;boxw=bbox.width+2*offsetBox;boxh=bbox.height+2*offsetBox;if(chart.animate){me.onAnimate(callout.lines,{to:{path:["M",cur[0],cur[1],"L",x,y,"Z"]}});if(callout.panel){callout.panel.setPosition(boxx,boxy,true)}}else{callout.lines.setAttributes({path:["M",cur[0],cur[1],"L",x,y,"Z"]},true);if(callout.panel){callout.panel.setPosition(boxx,boxy)}}for(p in callout){callout[p].show(true)}},isItemInPoint:function(x,y,item,i){var me=this,items=me.items,tolerance=me.selectionTolerance,result=null,prevItem,nextItem,prevPoint,nextPoint,ln,x1,y1,x2,y2,xIntersect,yIntersect,dist1,dist2,dist,midx,midy,sqrt=Math.sqrt,abs=Math.abs;nextItem=items[i];prevItem=i&&items[i-1];if(i>=ln){prevItem=items[ln-1]}prevPoint=prevItem&&prevItem.point;nextPoint=nextItem&&nextItem.point;x1=prevItem?prevPoint[0]:nextPoint[0]-tolerance;y1=prevItem?prevPoint[1]:nextPoint[1];x2=nextItem?nextPoint[0]:prevPoint[0]+tolerance;y2=nextItem?nextPoint[1]:prevPoint[1];dist1=sqrt((x-x1)*(x-x1)+(y-y1)*(y-y1));dist2=sqrt((x-x2)*(x-x2)+(y-y2)*(y-y2));dist=Math.min(dist1,dist2);if(dist<=tolerance){return dist==dist1?prevItem:nextItem}return false},toggleAll:function(show){var me=this,i,ln,shadow,shadows;if(!show){Ext.chart.series.Cartesian.prototype.hideAll.call(me)}else{Ext.chart.series.Cartesian.prototype.showAll.call(me)}if(me.line){me.line.setAttributes({hidden:!show},true);if(me.line.shadows){for(i=0,shadows=me.line.shadows,ln=shadows.length;i<ln;i++){shadow=shadows[i];shadow.setAttributes({hidden:!show},true)}}}if(me.fillPath){me.fillPath.setAttributes({hidden:!show},true)}},hideAll:function(){this.toggleAll(false)},showAll:function(){this.toggleAll(true)}});