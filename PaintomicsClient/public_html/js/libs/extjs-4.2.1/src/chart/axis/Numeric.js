Ext.define("Ext.chart.axis.Numeric",{extend:"Ext.chart.axis.Axis",alternateClassName:"Ext.chart.NumericAxis",type:"Numeric",isNumericAxis:true,alias:"axis.numeric",uses:["Ext.data.Store"],constructor:function(config){var me=this,hasLabel=!!(config.label&&config.label.renderer),label;me.callParent([config]);label=me.label;if(config.constrain==null){me.constrain=config.minimum!=null&&config.maximum!=null}if(!hasLabel){label.renderer=function(v){return me.roundToDecimal(v,me.decimals)}}},roundToDecimal:function(v,dec){var val=Math.pow(10,dec||0);return Math.round(v*val)/val},minimum:NaN,maximum:NaN,constrain:true,decimals:2,scale:"linear",doConstrain:function(){var me=this,chart=me.chart,store=chart.getChartStore(),items=store.data.items,d,dLen,record,series=chart.series.items,fields=me.fields,ln=fields.length,range=me.calcEnds(),min=range.from,max=range.to,i,l,useAcum=false,value,data=[],addRecord;for(d=0,dLen=items.length;d<dLen;d++){addRecord=true;record=items[d];for(i=0;i<ln;i++){value=record.get(fields[i]);if(me.type=="Time"&&typeof value=="string"){value=Date.parse(value)}if(+value<+min){addRecord=false;break}if(+value>+max){addRecord=false;break}}if(addRecord){data.push(record)}}chart.setSubStore(new Ext.data.Store({model:store.model,data:data}))},position:"left",adjustMaximumByMajorUnit:false,adjustMinimumByMajorUnit:false,processView:function(){var me=this,chart=me.chart,series=chart.series.items,i,l;for(i=0,l=series.length;i<l;i++){if(series[i].stacked){delete me.minimum;delete me.maximum;me.constrain=false;break}}if(me.constrain){me.doConstrain()}},applyData:function(){this.callParent();return this.calcEnds()}});