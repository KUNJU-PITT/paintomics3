Ext.define("Ext.chart.axis.Category",{extend:"Ext.chart.axis.Axis",alternateClassName:"Ext.chart.CategoryAxis",alias:"axis.category",categoryNames:null,calculateCategoryCount:false,doConstrain:function(){var me=this,chart=me.chart,store=chart.getChartStore(),items=store.data.items,series=chart.series.items,seriesLength=series.length,data=[],i;for(i=0;i<seriesLength;i++){if(series[i].type==="bar"&&series[i].stacked){return}}for(i=me.minimum;i<me.maximum;i++){data.push(items[i])}chart.setSubStore(new Ext.data.Store({model:store.model,data:data}))},setLabels:function(){var store=this.chart.getChartStore(),data=store.data.items,d,dLen,record,fields=this.fields,ln=fields.length,labels,name,i;labels=this.labels=[];for(d=0,dLen=data.length;d<dLen;d++){record=data[d];for(i=0;i<ln;i++){name=record.get(fields[i]);if(Ext.Array.indexOf(labels,name)>-1){Ext.log.warn("Duplicate category in axis, "+name)}labels.push(name)}}},applyData:function(){this.callParent();this.setLabels();var count=this.chart.getChartStore().getCount();return{from:0,to:count-1,power:1,step:1,steps:count-1}}});