Ext.define("Ext.chart.Label",{requires:["Ext.draw.Color"],colorStringRe:/url\s*\(\s*#([^\/)]+)\s*\)/,constructor:function(config){var me=this;me.label=Ext.applyIf(me.label||{},{display:"none",stackedDisplay:"none",color:"#000",field:"name",minMargin:50,font:"11px Helvetica, sans-serif",orientation:"horizontal",renderer:Ext.identityFn});if(me.label.display!=="none"){me.labelsGroup=me.chart.surface.getGroup(me.seriesId+"-labels")}},renderLabels:function(){var me=this,chart=me.chart,gradients=chart.gradients,items=me.items,animate=chart.animate,config=me.label,display=config.display,stackedDisplay=config.stackedDisplay,format=config.renderer,color=config.color,field=[].concat(config.field),group=me.labelsGroup,groupLength=(group||0)&&group.length,store=me.chart.getChartStore(),len=store.getCount(),itemLength=(items||0)&&items.length,ratio=itemLength/len,gradientsCount=(gradients||0)&&gradients.length,Color=Ext.draw.Color,hides=[],gradient,i,count,groupIndex,index,j,k,colorStopTotal,colorStopIndex,colorStop,item,label,storeItem,sprite,spriteColor,spriteBrightness,labelColor,colorString,total,totalPositive,totalNegative,topText,bottomText;if(display=="none"||!group){return}if(itemLength==0){while(groupLength--){hides.push(groupLength)}}else{for(i=0,count=0,groupIndex=0;i<len;i++){index=0;for(j=0;j<ratio;j++){item=items[count];label=group.getAt(groupIndex);storeItem=store.getAt(i);while(this.__excludes&&this.__excludes[index]){index++}if(!item&&label){label.hide(true);groupIndex++}if(item&&field[j]){if(!label){label=me.onCreateLabel(storeItem,item,i,display);if(!label){break}}label.setAttributes({fill:String(color)},true);me.onPlaceLabel(label,storeItem,item,i,display,animate,index);groupIndex++;if(config.contrast&&item.sprite){sprite=item.sprite;if(animate&&sprite._endStyle){colorString=sprite._endStyle.fill}else if(animate&&sprite._to){colorString=sprite._to.fill}else{colorString=sprite.attr.fill}colorString=colorString||sprite.attr.fill;spriteColor=Color.fromString(colorString);if(colorString&&!spriteColor){colorString=colorString.match(me.colorStringRe)[1];for(k=0;k<gradientsCount;k++){gradient=gradients[k];if(gradient.id==colorString){colorStop=0;colorStopTotal=0;for(colorStopIndex in gradient.stops){colorStop++;colorStopTotal+=Color.fromString(gradient.stops[colorStopIndex].color).getGrayscale()}spriteBrightness=colorStopTotal/colorStop/255;break}}}else{spriteBrightness=spriteColor.getGrayscale()/255}if(label.isOutside){spriteBrightness=1}labelColor=Color.fromString(label.attr.fill||label.attr.color).getHSL();labelColor[2]=spriteBrightness>.5?.2:.8;label.setAttributes({fill:String(Color.fromHSL.apply({},labelColor))},true)}if(me.stacked&&stackedDisplay&&(item.totalPositiveValues||item.totalNegativeValues)){totalPositive=item.totalPositiveValues||0;totalNegative=item.totalNegativeValues||0;total=totalPositive+totalNegative;if(stackedDisplay=="total"){topText=format(total)}else if(stackedDisplay=="balances"){if(totalPositive==0&&totalNegative==0){topText=format(0)}else{topText=format(totalPositive);bottomText=format(totalNegative)}}if(topText){label=group.getAt(groupIndex);if(!label){label=me.onCreateLabel(storeItem,item,i,"over")}labelColor=Color.fromString(label.attr.color||label.attr.fill).getHSL();label.setAttributes({text:topText,style:config.font,fill:String(Color.fromHSL.apply({},labelColor))},true);me.onPlaceLabel(label,storeItem,item,i,"over",animate,index);groupIndex++}if(bottomText){label=group.getAt(groupIndex);if(!label){label=me.onCreateLabel(storeItem,item,i,"under")}labelColor=Color.fromString(label.attr.color||label.attr.fill).getHSL();label.setAttributes({text:bottomText,style:config.font,fill:String(Color.fromHSL.apply({},labelColor))},true);me.onPlaceLabel(label,storeItem,item,i,"under",animate,index);groupIndex++}}}count++;index++}}groupLength=group.length;while(groupLength>groupIndex){hides.push(groupIndex);groupIndex++}}me.hideLabels(hides)},hideLabels:function(hides){var labelsGroup=this.labelsGroup,hlen=!!hides&&hides.length;if(!labelsGroup){return}if(hlen===false){hlen=labelsGroup.getCount();while(hlen--){labelsGroup.getAt(hlen).hide(true)}}else{while(hlen--){labelsGroup.getAt(hides[hlen]).hide(true)}}}});