Ext.define("Ext.data.NodeStore",{extend:"Ext.data.Store",alias:"store.node",requires:["Ext.data.NodeInterface"],isNodeStore:true,node:null,recursive:false,rootVisible:false,isExpandingOrCollapsing:0,constructor:function(config){var me=this,node;config=config||{};Ext.apply(me,config);if(Ext.isDefined(me.proxy)){Ext.Error.raise("A NodeStore cannot be bound to a proxy. Instead bind it to a record "+"decorated with the NodeInterface by setting the node config.")}me.useModelWarning=false;config.proxy={type:"proxy"};me.callParent([config]);node=me.node;if(node){me.node=null;me.setNode(node)}},getTotalCount:function(){return this.getCount()},setNode:function(node){var me=this;if(me.node&&me.node!=node){me.mun(me.node,{expand:me.onNodeExpand,collapse:me.onNodeCollapse,append:me.onNodeAppend,insert:me.onNodeInsert,bulkremove:me.onBulkRemove,remove:me.onNodeRemove,sort:me.onNodeSort,scope:me});me.node=null}if(node){Ext.data.NodeInterface.decorate(node.self);me.removeAll();if(me.rootVisible){me.add(node)}else if(!node.isExpanded()&&me.treeStore.autoLoad!==false){node.expand()}me.mon(node,{expand:me.onNodeExpand,collapse:me.onNodeCollapse,append:me.onNodeAppend,insert:me.onNodeInsert,bulkremove:me.onBulkRemove,remove:me.onNodeRemove,sort:me.onNodeSort,scope:me});me.node=node;if(node.isExpanded()&&node.isLoaded()){me.onNodeExpand(node,node.childNodes,true)}}},onNodeSort:function(node,childNodes){var me=this;if(me.indexOf(node)!==-1||node===me.node&&!me.rootVisible&&node.isExpanded()){Ext.suspendLayouts();me.onNodeCollapse(node,childNodes,true);me.onNodeExpand(node,childNodes,true);Ext.resumeLayouts(true)}},onNodeExpand:function(parent,records,suppressEvent){var me=this,insertIndex=me.indexOf(parent)+1,toAdd=[];if(!suppressEvent){me.fireEvent("beforeexpand",parent,records,insertIndex)}me.handleNodeExpand(parent,records,toAdd);me.insert(insertIndex,toAdd);if(!suppressEvent){me.fireEvent("expand",parent,records)}},handleNodeExpand:function(parent,records,toAdd){var me=this,ln=records?records.length:0,i,record;if(!me.recursive&&parent!==me.node){return}if(parent!==this.node&&!me.isVisible(parent)){return}if(ln){for(i=0;i<ln;i++){record=records[i];toAdd.push(record);if(record.isExpanded()){if(record.isLoaded()){me.handleNodeExpand(record,record.childNodes,toAdd)}else{record.set("expanded",false);record.expand()}}}}},onBulkRemove:function(parent,childNodes,isMove){this.onNodeCollapse(parent,childNodes,true)},onNodeCollapse:function(parent,records,suppressEvent,callback,scope){var me=this,collapseIndex=me.indexOf(parent)+1,node,lastNodeIndexPlus,sibling,found;if(!me.recursive&&parent!==me.node){return}if(!suppressEvent){me.fireEvent("beforecollapse",parent,records,collapseIndex,callback,scope)}if(records.length&&me.data.contains(records[0])){node=parent;while(node.parentNode){sibling=node.nextSibling;if(sibling){found=true;lastNodeIndexPlus=me.indexOf(sibling);break}else{node=node.parentNode}}if(!found){lastNodeIndexPlus=me.getCount()}me.removeAt(collapseIndex,lastNodeIndexPlus-collapseIndex)}if(!suppressEvent){me.fireEvent("collapse",parent,records,collapseIndex)}},onNodeAppend:function(parent,node,index){var me=this,refNode,sibling;if(me.isVisible(node)){if(index===0){refNode=parent}else{sibling=node.previousSibling;while(sibling.isExpanded()&&sibling.lastChild){sibling=sibling.lastChild}refNode=sibling}me.insert(me.indexOf(refNode)+1,node);if(!node.isLeaf()&&node.isExpanded()){if(node.isLoaded()){me.onNodeExpand(node,node.childNodes,true)}else if(!me.treeStore.fillCount){node.set("expanded",false);node.expand()}}}},onNodeInsert:function(parent,node,refNode){var me=this,index=this.indexOf(refNode);if(index!=-1&&me.isVisible(node)){me.insert(index,node);if(!node.isLeaf()&&node.isExpanded()){if(node.isLoaded()){me.onNodeExpand(node,node.childNodes,true)}else{node.set("expanded",false);node.expand()}}}},onNodeRemove:function(parent,node,isMove){var me=this;if(me.indexOf(node)!=-1){if(!node.isLeaf()&&node.isExpanded()){node.parentNode=node.removeContext.parentNode;node.nextSibling=node.removeContext.nextSibling;me.onNodeCollapse(node,node.childNodes,true);node.parentNode=node.nextSibling=null}me.remove(node)}},isVisible:function(node){var parent=node.parentNode;while(parent){if(parent===this.node&&parent.data.expanded){return true}if(!parent.data.expanded){return false}parent=parent.parentNode}return false}});