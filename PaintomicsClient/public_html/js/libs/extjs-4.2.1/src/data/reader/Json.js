Ext.define("Ext.data.reader.Json",{extend:"Ext.data.reader.Reader",alternateClassName:"Ext.data.JsonReader",alias:"reader.json",root:"",metaProperty:"metaData",useSimpleAccessors:false,readRecords:function(data){var me=this,meta;if(me.getMeta){meta=me.getMeta(data);if(meta){me.onMetaChange(meta)}}else if(data.metaData){me.onMetaChange(data.metaData)}me.jsonData=data;return me.callParent([data])},getResponseData:function(response){var data,error;try{data=Ext.decode(response.responseText);return this.readRecords(data)}catch(ex){error=new Ext.data.ResultSet({total:0,count:0,records:[],success:false,message:ex.message});this.fireEvent("exception",this,response,error);Ext.Logger.warn("Unable to parse the JSON returned by the server");return error}},buildExtractors:function(){var me=this,metaProp=me.metaProperty;me.callParent(arguments);if(me.root){me.getRoot=me.createAccessor(me.root)}else{me.getRoot=Ext.identityFn}if(metaProp){me.getMeta=me.createAccessor(metaProp)}},extractData:function(root){var recordName=this.record,data=[],length,i;if(recordName){length=root.length;if(!length&&Ext.isObject(root)){length=1;root=[root]}for(i=0;i<length;i++){data[i]=root[i][recordName]}}else{data=root}return this.callParent([data])},createAccessor:function(){var re=/[\[\.]/;return function(expr){if(Ext.isEmpty(expr)){return Ext.emptyFn}if(Ext.isFunction(expr)){return expr}if(this.useSimpleAccessors!==true){var i=String(expr).search(re);if(i>=0){return Ext.functionFactory("obj","return obj"+(i>0?".":"")+expr)}}return function(obj){return obj[expr]}}}(),createFieldAccessExpression:function(){var re=/[\[\.]/;return function(field,fieldVarName,dataName){var mapping=field.mapping,hasMap=mapping||mapping===0,map=hasMap?mapping:field.name,result,operatorIndex;if(mapping===false){return}if(typeof map==="function"){result=fieldVarName+".mapping("+dataName+", this)"}else if(this.useSimpleAccessors===true||(operatorIndex=String(map).search(re))<0){if(!hasMap||isNaN(map)){map='"'+map+'"'}result=dataName+"["+map+"]"}else if(operatorIndex===0){result=dataName+map}else{var parts=map.split("."),len=parts.length,i=1,tempResult=dataName+"."+parts[0],buffer=[tempResult];for(;i<len;i++){tempResult+="."+parts[i];buffer.push(tempResult)}result=buffer.join(" && ")}return result}}()});