Ext.define("Ext.data.reader.Reader",{requires:["Ext.data.ResultSet","Ext.XTemplate"],alternateClassName:["Ext.data.Reader","Ext.data.DataReader"],mixins:{observable:"Ext.util.Observable"},totalProperty:"total",successProperty:"success",root:"",implicitIncludes:true,readRecordsOnFailure:true,isReader:true,applyDefaults:true,lastFieldGeneration:null,constructor:function(config){var me=this;me.mixins.observable.constructor.call(me,config);me.fieldCount=0;me.model=Ext.ModelManager.getModel(me.model);if(me.model&&me.model.prototype.fields){me.buildExtractors()}this.addEvents("exception")},setModel:function(model,setOnProxy){var me=this;me.model=Ext.ModelManager.getModel(model);if(model){me.buildExtractors(true)}if(setOnProxy&&me.proxy){me.proxy.setModel(me.model,true)}},read:function(response){var data;if(response){data=response.responseText?this.getResponseData(response):this.readRecords(response)}return data||this.nullResultSet},readRecords:function(data){var me=this,success,recordCount,records,root,total,value,message;if(me.lastFieldGeneration!==me.model.prototype.fields.generation){me.buildExtractors(true)}me.rawData=data;data=me.getData(data);success=true;recordCount=0;records=[];if(me.successProperty){value=me.getSuccess(data);if(value===false||value==="false"){success=false}}if(me.messageProperty){message=me.getMessage(data)}if(me.readRecordsOnFailure||success){root=Ext.isArray(data)?data:me.getRoot(data);if(root){total=root.length}if(me.totalProperty){value=parseInt(me.getTotal(data),10);if(!isNaN(value)){total=value}}if(root){records=me.extractData(root);recordCount=records.length}}return new Ext.data.ResultSet({total:total||recordCount,count:recordCount,records:records,success:success,message:message})},extractData:function(root){var me=this,Model=me.model,length=root.length,records=new Array(length),convertedValues,node,record,i;if(!root.length&&Ext.isObject(root)){root=[root];length=1}for(i=0;i<length;i++){node=root[i];if(node.isModel){records[i]=node}else{records[i]=record=new Model(undefined,me.getId(node),node,convertedValues={});record.phantom=false;me.convertRecordData(convertedValues,node,record);if(me.implicitIncludes&&record.associations.length){me.readAssociated(record,node)}}}return records},readAssociated:function(record,data){var associations=record.associations.items,i=0,length=associations.length,association,associationData,proxy,reader;for(;i<length;i++){association=associations[i];associationData=this.getAssociatedDataRoot(data,association.associationKeyFunction||association.associationKey||association.name);if(associationData){reader=association.getReader();if(!reader){proxy=association.associatedModel.getProxy();if(proxy){reader=proxy.getReader()}else{reader=new this.constructor({model:association.associatedName})}}association.read(record,reader,associationData)}}},getAssociatedDataRoot:function(data,associationName){if(Ext.isFunction(associationName)){return associationName(data)}return data[associationName]},getFields:function(){return this.model.prototype.fields.items},getData:Ext.identityFn,getRoot:Ext.identityFn,getResponseData:function(response){Ext.Error.raise("getResponseData must be implemented in the Ext.data.reader.Reader subclass")},onMetaChange:function(meta){var me=this,fields=meta.fields||me.getFields(),newModel,clientIdProperty;me.metaData=meta;me.root=meta.root||me.root;me.idProperty=meta.idProperty||me.idProperty;me.totalProperty=meta.totalProperty||me.totalProperty;me.successProperty=meta.successProperty||me.successProperty;me.messageProperty=meta.messageProperty||me.messageProperty;clientIdProperty=meta.clientIdProperty;if(me.model){me.model.setFields(fields,me.idProperty,clientIdProperty);me.setModel(me.model,true)}else{newModel=Ext.define("Ext.data.reader.Json-Model"+Ext.id(),{extend:"Ext.data.Model",fields:fields,clientIdProperty:clientIdProperty});if(me.idProperty){newModel.idProperty=me.idProperty}me.setModel(newModel,true)}},getIdProperty:function(){var idField=this.model.prototype.idField,idProperty=this.idProperty;if(!idProperty&&idField&&(idProperty=idField.mapping)==null){idProperty=idField.name}return idProperty},buildExtractors:function(force){var me=this,idProp=me.getIdProperty(),totalProp=me.totalProperty,successProp=me.successProperty,messageProp=me.messageProperty,accessor;if(force===true){delete me.convertRecordData}if(me.convertRecordData){return}if(totalProp){me.getTotal=me.createAccessor(totalProp)}if(successProp){me.getSuccess=me.createAccessor(successProp)}if(messageProp){me.getMessage=me.createAccessor(messageProp)}if(idProp){accessor=me.createAccessor(idProp);me.getId=function(record){var id=accessor.call(me,record);return id===undefined||id===""?null:id}}else{me.getId=function(){return null}}me.convertRecordData=me.buildRecordDataExtractor();me.lastFieldGeneration=me.model.prototype.fields.generation},recordDataExtractorTemplate:["var me = this\n","    ,fields = me.model.prototype.fields\n","    ,value\n","    ,internalId\n",'<tpl for="fields">','    ,__field{#} = fields.map["{name}"]\n',"</tpl>",";\n","return function(dest, source, record) {\n",'<tpl for="fields">','{% var fieldAccessExpression =  this.createFieldAccessExpression(values, "__field" + xindex, "source");',"   if (fieldAccessExpression) { %}",'    value = {[ this.createFieldAccessExpression(values, "__field" + xindex, "source") ]};\n','<tpl if="hasCustomConvert">','    dest["{name}"] = value === undefined ? __field{#}.convert(__field{#}.defaultValue, record) : __field{#}.convert(value, record);\n','<tpl elseif="defaultValue !== undefined">',"    if (value === undefined) {\n","        if (me.applyDefaults) {\n",'<tpl if="convert">','            dest["{name}"] = __field{#}.convert(__field{#}.defaultValue, record);\n',"<tpl else>",'            dest["{name}"] = __field{#}.defaultValue\n',"</tpl>","        };\n","    } else {\n",'<tpl if="convert">','        dest["{name}"] = __field{#}.convert(value, record);\n',"<tpl else>",'        dest["{name}"] = value;\n',"</tpl>","    };\n","<tpl else>","    if (value !== undefined) {\n",'<tpl if="convert">','        dest["{name}"] = __field{#}.convert(value, record);\n',"<tpl else>",'        dest["{name}"] = value;\n',"</tpl>","    }\n","</tpl>","{% } else { %}",'<tpl if="defaultValue !== undefined">','<tpl if="convert">','    dest["{name}"] = __field{#}.convert(__field{#}.defaultValue, record);\n',"<tpl else>",'    dest["{name}"] = __field{#}.defaultValue\n',"</tpl>","</tpl>","{% } %}","</tpl>",'<tpl if="clientIdProp">','    if (record && (internalId = {[ this.createFieldAccessExpression({mapping: values.clientIdProp}, null, "source") ]})) {\n','        record.{["internalId"]} = internalId;\n',"    }\n","</tpl>","};"],buildRecordDataExtractor:function(){var me=this,modelProto=me.model.prototype,templateData={clientIdProp:modelProto.clientIdProperty,fields:modelProto.fields.items};me.recordDataExtractorTemplate.createFieldAccessExpression=function(){return me.createFieldAccessExpression.apply(me,arguments)};return Ext.functionFactory(me.recordDataExtractorTemplate.apply(templateData)).call(me)},destroyReader:function(){var me=this;delete me.proxy;delete me.model;delete me.convertRecordData;delete me.getId;delete me.getTotal;delete me.getSuccess;delete me.getMessage}},function(){var proto=this.prototype;Ext.apply(proto,{nullResultSet:new Ext.data.ResultSet({total:0,count:0,records:[],success:true,message:""}),recordDataExtractorTemplate:new Ext.XTemplate(proto.recordDataExtractorTemplate)})});