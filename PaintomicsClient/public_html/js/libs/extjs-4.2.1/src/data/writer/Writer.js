Ext.define("Ext.data.writer.Writer",{alias:"writer.base",alternateClassName:["Ext.data.DataWriter","Ext.data.Writer"],writeAllFields:true,nameProperty:"name",writeRecordId:true,isWriter:true,constructor:function(config){Ext.apply(this,config)},write:function(request){var operation=request.operation,records=operation.records||[],len=records.length,i=0,data=[];for(;i<len;i++){data.push(this.getRecordData(records[i],operation))}return this.writeRecords(request,data)},getRecordData:function(record,operation){var isPhantom=record.phantom===true,writeAll=this.writeAllFields||isPhantom,fields=record.fields,fieldItems=fields.items,data={},clientIdProperty=record.clientIdProperty,changes,field,key,mappedIdProperty,f,fLen;if(writeAll){fLen=fieldItems.length;for(f=0;f<fLen;f++){field=fieldItems[f];if(field.persist){this.writeValue(data,field,record)}}}else{changes=record.getChanges();for(key in changes){if(changes.hasOwnProperty(key)){field=fields.get(key);if(field.persist){this.writeValue(data,field,record)}}}}if(isPhantom){if(clientIdProperty&&operation&&operation.records.length>1){data[clientIdProperty]=record.internalId}}else if(this.writeRecordId){mappedIdProperty=fields.get(record.idProperty)[this.nameProperty]||record.idProperty;data[mappedIdProperty]=record.getId()}return data},writeValue:function(data,field,record){var name=field[this.nameProperty],dateFormat=this.dateFormat||field.dateWriteFormat||field.dateFormat,value=record.get(field.name);if(name==null){name=field.name}if(field.serialize){data[name]=field.serialize(value,record)}else if(field.type===Ext.data.Types.DATE&&dateFormat&&Ext.isDate(value)){data[name]=Ext.Date.format(value,dateFormat)}else{data[name]=value}}});