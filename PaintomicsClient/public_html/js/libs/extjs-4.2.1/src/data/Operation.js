Ext.define("Ext.data.Operation",{synchronous:true,action:undefined,filters:undefined,sorters:undefined,groupers:undefined,start:undefined,limit:undefined,batch:undefined,callback:undefined,scope:undefined,started:false,running:false,complete:false,success:undefined,exception:false,error:undefined,actionCommitRecordsRe:/^(?:create|update)$/i,actionSkipSyncRe:/^destroy$/i,constructor:function(config){Ext.apply(this,config||{})},commitRecords:function(serverRecords){var me=this,commitRecords=me.actionCommitRecordsRe.test(me.action),mc,index,clientRecords,serverRec,clientRec,i,len,modifiedFields,recordModifiedFields;if(!me.actionSkipSyncRe.test(me.action)){clientRecords=me.records;if(clientRecords&&clientRecords.length){if(commitRecords){recordModifiedFields=[]}if(clientRecords.length>1){if(me.action=="update"||clientRecords[0].clientIdProperty){mc=new Ext.util.MixedCollection;mc.addAll(serverRecords);for(index=clientRecords.length;index--;){clientRec=clientRecords[index];serverRec=mc.findBy(me.matchClientRec,clientRec);modifiedFields=clientRec.copyFrom(serverRec);if(commitRecords){recordModifiedFields.push(modifiedFields)}}}else{for(i=0,len=clientRecords.length;i<len;++i){clientRec=clientRecords[i];serverRec=serverRecords[i];if(clientRec&&serverRec){modifiedFields=me.updateRecord(clientRec,serverRec);if(commitRecords){recordModifiedFields.push(modifiedFields)}}}}}else{modifiedFields=me.updateRecord(clientRecords[0],serverRecords[0]);if(commitRecords){recordModifiedFields[0]=modifiedFields}}if(commitRecords){for(index=clientRecords.length;index--;){clientRecords[index].commit(false,recordModifiedFields[index])}}}}},updateRecord:function(clientRec,serverRec){if(serverRec&&(clientRec.phantom||clientRec.getId()===serverRec.getId())){return clientRec.copyFrom(serverRec)}return[]},matchClientRec:function(record){var clientRec=this,clientRecordId=clientRec.getId();if(clientRecordId&&record.getId()===clientRecordId){return true}return record.internalId===clientRec.internalId},setStarted:function(){this.started=true;this.running=true},setCompleted:function(){this.complete=true;this.running=false},setSuccessful:function(){this.success=true},setException:function(error){this.exception=true;this.success=false;this.running=false;this.error=error},hasException:function(){return this.exception===true},getError:function(){return this.error},getRecords:function(){var resultSet=this.getResultSet();return this.records||(resultSet?resultSet.records:null)},getResultSet:function(){return this.resultSet},isStarted:function(){return this.started===true},isRunning:function(){return this.running===true},isComplete:function(){return this.complete===true},wasSuccessful:function(){return this.isComplete()&&this.success===true},setBatch:function(batch){this.batch=batch},allowWrite:function(){return this.action!="read"}});