Ext.define("Ext.data.Model",{alternateClassName:"Ext.data.Record",mixins:{observable:"Ext.util.Observable"},requires:["Ext.ModelManager","Ext.data.IdGenerator","Ext.data.Field","Ext.data.Errors","Ext.data.Operation","Ext.data.validations","Ext.util.MixedCollection"],compareConvertFields:function(f1,f2){var f1SpecialConvert=f1.convert&&f1.type&&f1.convert!==f1.type.convert,f2SpecialConvert=f2.convert&&f2.type&&f2.convert!==f2.type.convert;if(f1SpecialConvert&&!f2SpecialConvert){return 1}if(!f1SpecialConvert&&f2SpecialConvert){return-1}return 0},itemNameFn:function(item){return item.name},onClassExtended:function(cls,data,hooks){var onBeforeClassCreated=hooks.onBeforeCreated;hooks.onBeforeCreated=function(cls,data){var me=this,name=Ext.getClassName(cls),prototype=cls.prototype,superCls=cls.prototype.superclass,validations=data.validations||[],fields=data.fields||[],field,associationsConfigs=data.associations||[],addAssociations=function(items,type){var i=0,len,item;if(items){items=Ext.Array.from(items);for(len=items.length;i<len;++i){item=items[i];if(!Ext.isObject(item)){item={model:item}}item.type=type;associationsConfigs.push(item)}}},idgen=data.idgen,fieldsMixedCollection=new Ext.util.MixedCollection(false,prototype.itemNameFn),associationsMixedCollection=new Ext.util.MixedCollection(false,prototype.itemNameFn),superValidations=superCls.validations,superFields=superCls.fields,superAssociations=superCls.associations,associationConfig,i,ln,dependencies=[],idProperty="idProperty"in data?data.idProperty:prototype.idProperty,idField=idProperty?idProperty.isField?idProperty:new Ext.data.Field(idProperty):null,idFieldDefined=false,onFieldAddReplace=function(arg0,arg1,arg2){var newField,pos;if(fieldsMixedCollection.events.add.firing){pos=arg0;newField=arg1}else{newField=arg2;pos=arg1.originalIndex}newField.originalIndex=pos;if(idField&&(newField.mapping&&newField.mapping===idField.mapping||newField.name===idField.name)){prototype.idField=newField;idFieldDefined=true;newField.defaultValue=undefined}},clsProxy=data.proxy,fieldConvertSortFn=function(){fieldsMixedCollection.sortBy(prototype.compareConvertFields)};cls.modelName=name;prototype.modelName=name;if(superValidations){validations=superValidations.concat(validations)}data.validations=validations;if(superFields){fields=superFields.items.concat(fields)}fieldsMixedCollection.on({add:onFieldAddReplace,replace:onFieldAddReplace});for(i=0,ln=fields.length;i<ln;++i){field=fields[i];fieldsMixedCollection.add(field.isField?field:new Ext.data.Field(field))}if(idField&&!idFieldDefined){prototype.idField=idField;idField.defaultValue=undefined;fieldsMixedCollection.add(idField)}fieldConvertSortFn();fieldsMixedCollection.on({add:fieldConvertSortFn,replace:fieldConvertSortFn});data.fields=fieldsMixedCollection;if(idgen){data.idgen=Ext.data.IdGenerator.get(idgen)}addAssociations(data.belongsTo,"belongsTo");delete data.belongsTo;addAssociations(data.hasMany,"hasMany");delete data.hasMany;addAssociations(data.hasOne,"hasOne");delete data.hasOne;if(superAssociations){associationsConfigs=superAssociations.items.concat(associationsConfigs)}for(i=0,ln=associationsConfigs.length;i<ln;++i){dependencies.push("association."+associationsConfigs[i].type.toLowerCase())}if(clsProxy){if(!clsProxy.isProxy){dependencies.push("proxy."+(clsProxy.type||clsProxy))}}else if(!cls.prototype.proxy){cls.prototype.proxy=cls.prototype.defaultProxyType;dependencies.push("proxy."+cls.prototype.defaultProxyType)}Ext.require(dependencies,function(){Ext.ModelManager.registerType(name,cls);for(i=0,ln=associationsConfigs.length;i<ln;++i){associationConfig=associationsConfigs[i];if(associationConfig.isAssociation){associationConfig=Ext.applyIf({ownerModel:name,associatedModel:associationConfig.model},associationConfig.initialConfig)}else{Ext.apply(associationConfig,{ownerModel:name,associatedModel:associationConfig.model})}if(Ext.ModelManager.getModel(associationConfig.model)===undefined){Ext.ModelManager.registerDeferredAssociation(associationConfig)}else{associationsMixedCollection.add(Ext.data.association.Association.create(associationConfig))}}data.associations=associationsMixedCollection;onBeforeClassCreated.call(me,cls,data,hooks);if(clsProxy&&clsProxy.isProxy){cls.setProxy(clsProxy)}Ext.ModelManager.onModelDefined(cls)})}},inheritableStatics:{setProxy:function(proxy){if(!proxy.isProxy){if(typeof proxy=="string"){proxy={type:proxy}}proxy=Ext.createByAlias("proxy."+proxy.type,proxy)}proxy.setModel(this);this.proxy=this.prototype.proxy=proxy;return proxy},getProxy:function(){var proxy=this.proxy;if(!proxy){proxy=this.prototype.proxy;if(proxy.isProxy){proxy=proxy.clone()}return this.setProxy(proxy)}return proxy},setFields:function(fields,idProperty,clientIdProperty){var me=this,newField,idField,idFieldDefined=false,proto=me.prototype,prototypeFields=proto.fields,superFields=proto.superclass.fields,len,i;if(idProperty){proto.idProperty=idProperty;idField=idProperty.isField?idProperty:new Ext.data.Field(idProperty)}if(clientIdProperty){proto.clientIdProperty=clientIdProperty}if(prototypeFields){prototypeFields.clear()}else{prototypeFields=me.prototype.fields=new Ext.util.MixedCollection(false,function(field){return field.name})}if(superFields){fields=superFields.items.concat(fields)}for(i=0,len=fields.length;i<len;i++){newField=new Ext.data.Field(fields[i]);if(idField&&(newField.mapping&&newField.mapping===idField.mapping||newField.name===idField.name)){idFieldDefined=true;newField.defaultValue=undefined}prototypeFields.add(newField)}if(idField&&!idFieldDefined){idField.defaultValue=undefined;prototypeFields.add(idField)}me.fields=prototypeFields;return prototypeFields},getFields:function(){return this.prototype.fields.items},load:function(id,config){config=Ext.apply({},config);config=Ext.applyIf(config,{action:"read",id:id});var operation=new Ext.data.Operation(config),scope=config.scope||this,callback;callback=function(operation){var record=null,success=operation.wasSuccessful();if(success){record=operation.getRecords()[0];if(!record.hasId()){record.setId(id)}Ext.callback(config.success,scope,[record,operation])}else{Ext.callback(config.failure,scope,[record,operation])}Ext.callback(config.callback,scope,[record,operation,success])};this.getProxy().read(operation,callback,this)}},statics:{PREFIX:"ext-record",AUTO_ID:1,EDIT:"edit",REJECT:"reject",COMMIT:"commit",id:function(rec){var id=[this.PREFIX,"-",this.AUTO_ID++].join("");rec.phantom=true;rec.internalId=id;return id}},idgen:{isGenerator:true,type:"default",generate:function(){return null},getRecId:function(rec){return rec.modelName+"-"+rec.internalId}},editing:false,dirty:false,persistenceProperty:"data",evented:false,isModel:true,phantom:false,idProperty:"id",clientIdProperty:null,defaultProxyType:"ajax",emptyData:[],constructor:function(data,id,raw,convertedData){var me=this,passedId=id||id===0,hasId,fields,length,field,name,value,newId,persistenceProperty,idProperty=me.idProperty,idField=me.idField,i;me.raw=raw||data;me.modified={};if(me.persistenceProperty!=="data"){Ext.log.warn(this.$className,"The persistenceProperty will be deprecated, all data will be stored in the underlying data property.")}persistenceProperty=me[me.persistenceProperty]=convertedData||{};me.data=me[me.persistenceProperty];me.mixins.observable.constructor.call(me);if(!convertedData){if(data){if(!passedId&&idProperty){id=data[idProperty];hasId=id||id===0}}else{data=me.emptyData}fields=me.fields.items;length=fields.length;i=0;if(Ext.isArray(data)){for(;i<length;i++){field=fields[i];name=field.name;value=data[field.originalIndex];if(value===undefined){value=field.defaultValue}if(field.convert){value=field.convert(value,me)}if(value!==undefined){persistenceProperty[name]=value}}}else{for(;i<length;i++){field=fields[i];name=field.name;value=data[name];if(value===undefined){value=field.defaultValue}if(field.convert){value=field.convert(value,me)}if(value!==undefined){persistenceProperty[name]=value}}}}me.stores=[];if(passedId){hasId=true;persistenceProperty[idProperty]=idField&&idField.convert?idField.convert(id):id}else if(!hasId){newId=me.idgen.generate();if(newId!=null){me.preventInternalUpdate=true;me.setId(newId);delete me.preventInternalUpdate}}me.internalId=hasId?id:Ext.data.Model.id(me);if(typeof me.init=="function"){me.init()}me.id=me.idgen.getRecId(me)},get:function(field){return this[this.persistenceProperty][field]},_singleProp:{},set:function(fieldName,newValue){var me=this,data=me[me.persistenceProperty],fields=me.fields,modified=me.modified,single=typeof fieldName=="string",currentValue,field,idChanged,key,modifiedFieldNames,name,oldId,newId,value,values;if(single){values=me._singleProp;values[fieldName]=newValue}else{values=fieldName}for(name in values){if(values.hasOwnProperty(name)){value=values[name];if(fields&&(field=fields.get(name))&&field.convert){value=field.convert(value,me)}currentValue=data[name];if(me.isEqual(currentValue,value)){continue}data[name]=value;(modifiedFieldNames||(modifiedFieldNames=[])).push(name);if(field&&field.persist){if(modified.hasOwnProperty(name)){if(me.isEqual(modified[name],value)){delete modified[name];me.dirty=false;for(key in modified){if(modified.hasOwnProperty(key)){me.dirty=true;break}}}}else{me.dirty=true;modified[name]=currentValue}}if(name==me.idProperty){idChanged=true;oldId=currentValue;newId=value}}}if(single){delete values[fieldName]}if(idChanged){me.changeId(oldId,newId)}if(!me.editing&&modifiedFieldNames){me.afterEdit(modifiedFieldNames)}return modifiedFieldNames||null},copyFrom:function(sourceRecord){var me=this,fields=me.fields.items,fieldCount=fields.length,modifiedFieldNames=[],field,i=0,myData,sourceData,idProperty=me.idProperty,name,value;if(sourceRecord){myData=me[me.persistenceProperty];sourceData=sourceRecord[sourceRecord.persistenceProperty];for(;i<fieldCount;i++){field=fields[i];name=field.name;if(name!=idProperty){value=sourceData[name];if(value!==undefined&&!me.isEqual(myData[name],value)){myData[name]=value;modifiedFieldNames.push(name)}}}if(me.phantom&&!sourceRecord.phantom){me.beginEdit();me.setId(sourceRecord.getId());me.endEdit(true);me.commit(true)}}return modifiedFieldNames},isEqual:function(a,b){if(a instanceof Date&&b instanceof Date){return a.getTime()===b.getTime()}return a===b},beginEdit:function(){var me=this,key,data,o;if(!me.editing){me.editing=true;me.dirtySave=me.dirty;o=me[me.persistenceProperty];data=me.dataSave={};for(key in o){if(o.hasOwnProperty(key)){data[key]=o[key]}}o=me.modified;data=me.modifiedSave={};for(key in o){if(o.hasOwnProperty(key)){data[key]=o[key]}}}},cancelEdit:function(){var me=this;if(me.editing){me.editing=false;me.modified=me.modifiedSave;me[me.persistenceProperty]=me.dataSave;me.dirty=me.dirtySave;me.modifiedSave=me.dataSave=me.dirtySave=null}},endEdit:function(silent,modifiedFieldNames){var me=this,dataSave,changed;silent=silent===true;if(me.editing){me.editing=false;dataSave=me.dataSave;me.modifiedSave=me.dataSave=me.dirtySave=null;if(!silent){if(!modifiedFieldNames){modifiedFieldNames=me.getModifiedFieldNames(dataSave)}changed=me.dirty||modifiedFieldNames.length>0;if(changed){me.afterEdit(modifiedFieldNames)}}}},getModifiedFieldNames:function(saved){var me=this,data=me[me.persistenceProperty],modified=[],key;saved=saved||me.dataSave;for(key in data){if(data.hasOwnProperty(key)){if(!me.isEqual(data[key],saved[key])){modified.push(key)}}}return modified},getChanges:function(){var modified=this.modified,changes={},field;for(field in modified){if(modified.hasOwnProperty(field)){changes[field]=this.get(field)}}return changes},isModified:function(fieldName){return this.modified.hasOwnProperty(fieldName)},setDirty:function(){var me=this,fields=me.fields.items,fLen=fields.length,field,name,f;me.dirty=true;for(f=0;f<fLen;f++){field=fields[f];if(field.persist){name=field.name;me.modified[name]=me.get(name)}}},markDirty:function(){Ext.log.warn("Ext.data.Model: markDirty has been deprecated. Use setDirty instead.");return this.setDirty.apply(this,arguments)},reject:function(silent){var me=this,modified=me.modified,field;for(field in modified){if(modified.hasOwnProperty(field)){if(typeof modified[field]!="function"){me[me.persistenceProperty][field]=modified[field]}}}me.dirty=false;me.editing=false;me.modified={};if(silent!==true){me.afterReject()}},commit:function(silent,modifiedFieldNames){var me=this;me.phantom=me.dirty=me.editing=false;me.modified={};if(silent!==true){me.afterCommit(modifiedFieldNames)}},copy:function(newId){var me=this;return new me.self(me.raw,newId,null,Ext.apply({},me[me.persistenceProperty]))},setProxy:function(proxy){if(!proxy.isProxy){if(typeof proxy==="string"){proxy={type:proxy}}proxy=Ext.createByAlias("proxy."+proxy.type,proxy)}proxy.setModel(this.self);this.proxy=proxy;return proxy},getProxy:function(){return this.hasOwnProperty("proxy")?this.proxy:this.self.getProxy()},validate:function(){var errors=new Ext.data.Errors,validations=this.validations,validators=Ext.data.validations,length,validation,field,valid,type,i;if(validations){length=validations.length;for(i=0;i<length;i++){validation=validations[i];field=validation.field||validation.name;type=validation.type;valid=validators[type](validation,this.get(field));if(!valid){errors.add({field:field,message:validation.message||validators[type+"Message"]})}}}return errors},isValid:function(){return this.validate().isValid()},save:function(options){options=Ext.apply({},options);var me=this,action=me.phantom?"create":"update",scope=options.scope||me,stores=me.stores,i=0,storeCount,store,operation,callback;Ext.apply(options,{records:[me],action:action});operation=new Ext.data.Operation(options);callback=function(operation){var success=operation.wasSuccessful();if(success){for(storeCount=stores.length;i<storeCount;i++){store=stores[i];store.fireEvent("write",store,operation);store.fireEvent("datachanged",store)}Ext.callback(options.success,scope,[me,operation])}else{Ext.callback(options.failure,scope,[me,operation])}Ext.callback(options.callback,scope,[me,operation,success])};me.getProxy()[action](operation,callback,me);return me},destroy:function(options){options=Ext.apply({records:[this],action:"destroy"},options);var me=this,isNotPhantom=me.phantom!==true,scope=options.scope||me,stores,i=0,storeCount,store,args,operation,callback;operation=new Ext.data.Operation(options);callback=function(operation){args=[me,operation];stores=Ext.Array.clone(me.stores);if(operation.wasSuccessful()){for(storeCount=stores.length;i<storeCount;i++){store=stores[i];if(store.remove){store.remove(me,true)}store.fireEvent("bulkremove",store,[me],[store.indexOf(me)],false);if(isNotPhantom){store.fireEvent("write",store,operation)}}me.clearListeners();Ext.callback(options.success,scope,args)}else{Ext.callback(options.failure,scope,args)}Ext.callback(options.callback,scope,args)};if(isNotPhantom){me.getProxy().destroy(operation,callback,me)}else{operation.complete=operation.success=true;operation.resultSet=me.getProxy().reader.nullResultSet;callback(operation)}return me},getId:function(){return this.get(this.idField.name)},getObservableId:function(){return this.id},setId:function(id){this.set(this.idProperty,id)},changeId:function(oldId,newId){var me=this,hasOldId,hasId,oldInternalId;if(!me.preventInternalUpdate){hasOldId=me.hasId(oldId);hasId=me.hasId(newId);oldInternalId=me.internalId;me.phantom=!hasId;if(hasId!==hasOldId||hasId&&hasOldId){me.internalId=hasId?newId:Ext.data.Model.id(me)}me.fireEvent("idchanged",me,oldId,newId,oldInternalId);me.callStore("onIdChanged",oldId,newId,oldInternalId)}},hasId:function(id){if(arguments.length===0){id=this.getId()}return!!(id||id===0)},join:function(store){var me=this;if(!me.stores.length){me.stores[0]=store}else{Ext.Array.include(this.stores,store)}this.store=this.stores[0]},unjoin:function(store){Ext.Array.remove(this.stores,store);this.store=this.stores[0]||null},afterEdit:function(modifiedFieldNames){this.callStore("afterEdit",modifiedFieldNames)},afterReject:function(){this.callStore("afterReject")},afterCommit:function(modifiedFieldNames){this.callStore("afterCommit",modifiedFieldNames)},callStore:function(fn){var args=Ext.Array.clone(arguments),stores=this.stores,i=0,len=stores.length,store;args[0]=this;for(;i<len;++i){store=stores[i];if(store&&Ext.isFunction(store[fn])){store[fn].apply(store,args)}}},getData:function(includeAssociated){var me=this,fields=me.fields.items,fLen=fields.length,data={},name,f;for(f=0;f<fLen;f++){name=fields[f].name;data[name]=me.get(name)}if(includeAssociated===true){Ext.apply(data,me.getAssociatedData())}return data},getAssociatedData:function(){return this.prepareAssociatedData({},1)},prepareAssociatedData:function(seenKeys,depth){var me=this,associations=me.associations.items,associationCount=associations.length,associationData={},toRead=[],toReadKey=[],toReadIndex=[],associatedStore,associatedRecords,associatedRecord,o,index,result,seenDepth,associationId,associatedRecordCount,association,i,j,type,name;for(i=0;i<associationCount;i++){association=associations[i];associationId=association.associationId;seenDepth=seenKeys[associationId];if(seenDepth&&seenDepth!==depth){continue}seenKeys[associationId]=depth;type=association.type;name=association.name;if(type=="hasMany"){associatedStore=me[association.storeName];associationData[name]=[];if(associatedStore&&associatedStore.getCount()>0){associatedRecords=associatedStore.data.items;associatedRecordCount=associatedRecords.length;for(j=0;j<associatedRecordCount;j++){associatedRecord=associatedRecords[j];associationData[name][j]=associatedRecord.getData();toRead.push(associatedRecord);toReadKey.push(name);toReadIndex.push(j)}}}else if(type=="belongsTo"||type=="hasOne"){associatedRecord=me[association.instanceName];if(associatedRecord!==undefined){associationData[name]=associatedRecord.getData();toRead.push(associatedRecord);toReadKey.push(name);toReadIndex.push(-1)}}}for(i=0,associatedRecordCount=toRead.length;i<associatedRecordCount;++i){associatedRecord=toRead[i];o=associationData[toReadKey[i]];index=toReadIndex[i];result=associatedRecord.prepareAssociatedData(seenKeys,depth+1);if(index===-1){Ext.apply(o,result)}else{Ext.apply(o[index],result)}}return associationData}});