Ext.define("Ext.data.proxy.WebStorage",{extend:"Ext.data.proxy.Client",alternateClassName:"Ext.data.WebStorageProxy",requires:["Ext.data.SequentialIdGenerator"],id:undefined,constructor:function(config){this.callParent(arguments);this.cache={};if(this.getStorageObject()===undefined){Ext.Error.raise("Local Storage is not supported in this browser, please use another type of data proxy")}this.id=this.id||(this.store?this.store.storeId:undefined);if(this.id===undefined){Ext.Error.raise("No unique id was provided to the local storage proxy. See Ext.data.proxy.LocalStorage documentation for details")}this.initialize()},create:function(operation,callback,scope){var me=this,records=operation.records,length=records.length,ids=me.getIds(),id,record,i;operation.setStarted();if(me.isHierarchical===undefined){me.isHierarchical=!!records[0].isNode;if(me.isHierarchical){me.getStorageObject().setItem(me.getTreeKey(),true)}}for(i=0;i<length;i++){record=records[i];if(record.phantom){record.phantom=false;id=me.getNextId()}else{id=record.getId()}me.setRecord(record,id);record.commit();ids.push(id)}me.setIds(ids);operation.setCompleted();operation.setSuccessful();if(typeof callback=="function"){callback.call(scope||me,operation)}},read:function(operation,callback,scope){var me=this,records=[],i=0,success=true,Model=me.model,ids,length,record,data,id;operation.setStarted();if(me.isHierarchical){records=me.getTreeData()}else{ids=me.getIds();length=ids.length;id=operation.id;if(id){data=me.getRecord(id);if(data!==null){record=new Model(data,id,data)}if(record){records.push(record)}else{success=false}}else{for(;i<length;i++){id=ids[i];data=me.getRecord(id);records.push(new Model(data,id,data))}}}if(success){operation.setSuccessful()}operation.setCompleted();operation.resultSet=Ext.create("Ext.data.ResultSet",{records:records,total:records.length,loaded:true});if(typeof callback=="function"){callback.call(scope||me,operation)}},update:function(operation,callback,scope){var records=operation.records,length=records.length,ids=this.getIds(),record,id,i;operation.setStarted();for(i=0;i<length;i++){record=records[i];this.setRecord(record);record.commit();id=record.getId();if(id!==undefined&&Ext.Array.indexOf(ids,id)==-1){ids.push(id)}}this.setIds(ids);operation.setCompleted();operation.setSuccessful();if(typeof callback=="function"){callback.call(scope||this,operation)}},destroy:function(operation,callback,scope){var me=this,records=operation.records,ids=me.getIds(),idLength=ids.length,newIds=[],removedHash={},i=records.length,id;operation.setStarted();for(;i--;){Ext.apply(removedHash,me.removeRecord(records[i]))}for(i=0;i<idLength;i++){id=ids[i];if(!removedHash[id]){newIds.push(id)}}me.setIds(newIds);operation.setCompleted();operation.setSuccessful();if(typeof callback=="function"){callback.call(scope||me,operation)}},getRecord:function(id){var me=this,cache=me.cache,data=!cache[id]?Ext.decode(me.getStorageObject().getItem(me.getRecordKey(id))):cache[id];if(!data){return null}cache[id]=data;data[me.model.prototype.idProperty]=id;return data},setRecord:function(record,id){if(id){record.setId(id)}else{id=record.getId()}var me=this,rawData=record.data,data={},model=me.model,fields=model.prototype.fields.items,length=fields.length,i=0,field,name,obj,key;for(;i<length;i++){field=fields[i];name=field.name;if(field.persist){data[name]=rawData[name]}}delete data[me.model.prototype.idProperty];if(record.isNode&&record.get("depth")===1){delete data.parentId}obj=me.getStorageObject();key=me.getRecordKey(id);me.cache[id]=data;obj.removeItem(key);obj.setItem(key,Ext.encode(data))},removeRecord:function(record){var me=this,id=record.getId(),records={},i,childNodes;records[id]=record;me.getStorageObject().removeItem(me.getRecordKey(id));delete me.cache[id];if(record.childNodes){childNodes=record.childNodes;for(i=childNodes.length;i--;){Ext.apply(records,me.removeRecord(childNodes[i]))}}return records},getRecordKey:function(id){if(id.isModel){id=id.getId()}return Ext.String.format("{0}-{1}",this.id,id)},getRecordCounterKey:function(){return Ext.String.format("{0}-counter",this.id)},getTreeKey:function(){return Ext.String.format("{0}-tree",this.id)},getIds:function(){var me=this,ids=(me.getStorageObject().getItem(me.id)||"").split(","),model=me.model,length=ids.length,isString=model.prototype.fields.get(model.prototype.idProperty).type.type==="string",i;if(length==1&&ids[0]===""){ids=[]}else{for(i=0;i<length;i++){ids[i]=isString?ids[i]:+ids[i]}}return ids},setIds:function(ids){var obj=this.getStorageObject(),str=ids.join(",");obj.removeItem(this.id);if(!Ext.isEmpty(str)){obj.setItem(this.id,str)}},getNextId:function(){var me=this,obj=me.getStorageObject(),key=me.getRecordCounterKey(),model=me.model,isString=model.prototype.fields.get(model.prototype.idProperty).type.type==="string",id;id=me.idGenerator.generate();obj.setItem(key,id);if(!isString){id=+id}return id},getTreeData:function(){var me=this,ids=me.getIds(),length=ids.length,records=[],recordHash={},root=[],i=0,Model=me.model,idProperty=Model.prototype.idProperty,rootLength,record,parent,parentId,children,id;for(;i<length;i++){id=ids[i];record=me.getRecord(id);records.push(record);recordHash[id]=record;if(!record.parentId){root.push(record)}}rootLength=root.length;Ext.Array.sort(records,me.sortByParentId);for(i=rootLength;i<length;i++){record=records[i];parentId=record.parentId;if(!parent||parent[idProperty]!==parentId){parent=recordHash[parentId];parent.children=children=[]}children.push(record)}for(i=length;i--;){record=records[i];if(!record.children&&!record.leaf){record.loaded=true}}for(i=rootLength;i--;){record=root[i];root[i]=new Model(record,record[idProperty],record)}return root},sortByParentId:function(node1,node2){return(node1.parentId||0)-(node2.parentId||0)},initialize:function(){var me=this,storageObject=me.getStorageObject(),lastId=+storageObject.getItem(me.getRecordCounterKey());storageObject.setItem(me.id,storageObject.getItem(me.id)||"");if(storageObject.getItem(me.getTreeKey())){me.isHierarchical=true}me.idGenerator=new Ext.data.SequentialIdGenerator({seed:lastId?lastId+1:1})},clear:function(){var me=this,obj=me.getStorageObject(),ids=me.getIds(),len=ids.length,i;for(i=0;i<len;i++){obj.removeItem(me.getRecordKey(ids[i]))}obj.removeItem(me.getRecordCounterKey());obj.removeItem(me.getTreeKey());obj.removeItem(me.id);me.cache={}},getStorageObject:function(){Ext.Error.raise("The getStorageObject function has not been defined in your Ext.data.proxy.WebStorage subclass")}});