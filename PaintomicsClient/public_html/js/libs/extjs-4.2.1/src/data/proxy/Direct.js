Ext.define("Ext.data.proxy.Direct",{extend:"Ext.data.proxy.Server",alternateClassName:"Ext.data.DirectProxy",alias:"proxy.direct",requires:["Ext.direct.Manager"],paramOrder:undefined,paramsAsHash:true,directFn:undefined,paramOrderRe:/[\s,|]/,constructor:function(config){var me=this,paramOrder;me.callParent(arguments);paramOrder=me.paramOrder;if(Ext.isString(paramOrder)){me.paramOrder=paramOrder.split(me.paramOrderRe)}},resolveMethods:function(){var me=this,fn=me.directFn,api=me.api,Manager=Ext.direct.Manager,method;if(fn){method=me.directFn=Manager.parseMethod(fn);if(!Ext.isFunction(method)){Ext.Error.raise("Cannot resolve directFn "+fn)}}else if(api){for(fn in api){if(api.hasOwnProperty(fn)){method=api[fn];api[fn]=Manager.parseMethod(method);if(!Ext.isFunction(api[fn])){Ext.Error.raise("Cannot resolve Direct api "+fn+" method "+method)}}}}me.methodsResolved=true},doRequest:function(operation,callback,scope){var me=this,writer=me.getWriter(),request=me.buildRequest(operation),params=request.params,args=[],fn,method;if(!me.methodsResolved){me.resolveMethods()}fn=me.api[request.action]||me.directFn;if(!fn){Ext.Error.raise("No direct function specified for this proxy")}if(operation.allowWrite()){request=writer.write(request)}if(operation.action=="read"){method=fn.directCfg.method;args=method.getArgs(params,me.paramOrder,me.paramsAsHash)}else{args.push(request.jsonData)}Ext.apply(request,{args:args,directFn:fn});args.push(me.createRequestCallback(request,operation,callback,scope),me);fn.apply(window,args)},applyEncoding:Ext.identityFn,createRequestCallback:function(request,operation,callback,scope){var me=this;return function(data,event){me.processResponse(event.status,operation,request,event,callback,scope)}},extractResponseData:function(response){return Ext.isDefined(response.result)?response.result:response.data},setException:function(operation,response){operation.setException(response.message)},buildUrl:function(){return""}});