Ext.define("Ext.panel.Table",{extend:"Ext.panel.Panel",alias:"widget.tablepanel",uses:["Ext.selection.RowModel","Ext.selection.CellModel","Ext.selection.CheckboxModel","Ext.grid.plugin.BufferedRenderer","Ext.grid.header.Container","Ext.grid.locking.Lockable"],extraBaseCls:Ext.baseCSSPrefix+"grid",extraBodyCls:Ext.baseCSSPrefix+"grid-body",layout:"fit",hasView:false,viewType:null,selType:"rowmodel",scroll:true,deferRowRender:true,sortableColumns:true,enableLocking:false,scrollerOwner:true,enableColumnMove:true,sealedColumns:false,enableColumnResize:true,rowLines:true,colLinesCls:Ext.baseCSSPrefix+"grid-with-col-lines",rowLinesCls:Ext.baseCSSPrefix+"grid-with-row-lines",noRowLinesCls:Ext.baseCSSPrefix+"grid-no-row-lines",hiddenHeaderCtCls:Ext.baseCSSPrefix+"grid-header-ct-hidden",hiddenHeaderCls:Ext.baseCSSPrefix+"grid-header-hidden",resizeMarkerCls:Ext.baseCSSPrefix+"grid-resize-marker",emptyCls:Ext.baseCSSPrefix+"grid-empty",initComponent:function(){if(!this.viewType){Ext.Error.raise("You must specify a viewType config.")}if(this.headers){Ext.Error.raise("The headers config is not supported. Please specify columns instead.")}var me=this,headerCtCfg=me.columns||me.colModel,view,i,len,store=me.store=Ext.data.StoreManager.lookup(me.store||"ext-empty-store"),columns;if(me.columnLines){me.addCls(me.colLinesCls)}me.addCls(me.rowLines?me.rowLinesCls:me.noRowLinesCls);if(!headerCtCfg){Ext.Error.raise("A column configuration must be specified")}if(headerCtCfg instanceof Ext.grid.header.Container){headerCtCfg.isRootHeader=true;me.headerCt=headerCtCfg}else{if(me.enableLocking||me.hasLockedColumns(headerCtCfg)){me.self.mixin("lockable",Ext.grid.locking.Lockable);me.injectLockable()}else{if(Ext.isArray(headerCtCfg)){headerCtCfg={items:headerCtCfg}}Ext.apply(headerCtCfg,{grid:me,forceFit:me.forceFit,sortable:me.sortableColumns,enableColumnMove:me.enableColumnMove,enableColumnResize:me.enableColumnResize,sealed:me.sealedColumns,isRootHeader:true});if(Ext.isDefined(me.enableColumnHide)){headerCtCfg.enableColumnHide=me.enableColumnHide}if(!me.headerCt){me.headerCt=new Ext.grid.header.Container(headerCtCfg)}}}me.columns=me.headerCt.getGridColumns();me.scrollTask=new Ext.util.DelayedTask(me.syncHorizontalScroll,me);me.addEvents("reconfigure","viewready");me.bodyCls=me.bodyCls||"";me.bodyCls+=" "+me.extraBodyCls;me.cls=me.cls||"";me.cls+=" "+me.extraBaseCls;delete me.autoScroll;if(!me.hasView){columns=me.headerCt.getGridColumns();if(store.buffered&&!store.remoteSort){for(i=0,len=columns.length;i<len;i++){columns[i].sortable=false}}if(me.hideHeaders){me.headerCt.height=0;me.headerCt.hiddenHeaders=true;me.headerCt.addCls(me.hiddenHeaderCtCls);me.addCls(me.hiddenHeaderCls);if(Ext.isIEQuirks){me.headerCt.style={display:"none"}}}me.relayHeaderCtEvents(me.headerCt);me.features=me.features||[];if(!Ext.isArray(me.features)){me.features=[me.features]}me.dockedItems=[].concat(me.dockedItems||[]);me.dockedItems.unshift(me.headerCt);me.viewConfig=me.viewConfig||{};view=me.getView();me.items=[view];me.hasView=true;if(!me.hideHeaders){view.on({scroll:{fn:me.onHorizontalScroll,element:"el",scope:me}})}me.bindStore(store,true);me.mon(view,{viewready:me.onViewReady,refresh:me.onRestoreHorzScroll,scope:me})}me.relayEvents(me.view,["beforeitemmousedown","beforeitemmouseup","beforeitemmouseenter","beforeitemmouseleave","beforeitemclick","beforeitemdblclick","beforeitemcontextmenu","itemmousedown","itemmouseup","itemmouseenter","itemmouseleave","itemclick","itemdblclick","itemcontextmenu","beforecellclick","cellclick","beforecelldblclick","celldblclick","beforecellcontextmenu","cellcontextmenu","beforecellmousedown","cellmousedown","beforecellmouseup","cellmouseup","beforecellkeydown","cellkeydown","beforecontainermousedown","beforecontainermouseup","beforecontainermouseover","beforecontainermouseout","beforecontainerclick","beforecontainerdblclick","beforecontainercontextmenu","containermouseup","containermouseover","containermouseout","containerclick","containerdblclick","containercontextmenu","selectionchange","beforeselect","select","beforedeselect","deselect"]);me.callParent(arguments);me.addStateEvents(["columnresize","columnmove","columnhide","columnshow","sortchange","filterchange"]);if(!me.lockable&&me.headerCt){me.headerCt.on("afterlayout",me.onRestoreHorzScroll,me)}},hasLockedColumns:function(columns){var i,len,column;if(Ext.isObject(columns)){columns=columns.items}for(i=0,len=columns.length;i<len;i++){column=columns[i];if(!column.processed&&column.locked){return true}}},relayHeaderCtEvents:function(headerCt){this.relayEvents(headerCt,["columnresize","columnmove","columnhide","columnshow","columnschanged","sortchange","headerclick","headercontextmenu","headertriggerclick"])},getState:function(){var me=this,state=me.callParent(),storeState=me.store.getState();state=me.addPropertyToState(state,"columns",me.headerCt.getColumnsState());if(storeState){state.storeState=storeState}return state},applyState:function(state){var me=this,sorter=state.sort,storeState=state.storeState,store=me.store,columns=state.columns;delete state.columns;me.callParent(arguments);if(columns){me.headerCt.applyColumnsState(columns)}if(sorter){if(store.remoteSort){store.sort({property:sorter.property,direction:sorter.direction,root:sorter.root},null,false)}else{store.sort(sorter.property,sorter.direction)}}else if(storeState){store.applyState(storeState)}},getStore:function(){return this.store},getView:function(){var me=this,sm;if(!me.view){sm=me.getSelectionModel();Ext.widget(Ext.apply({grid:me,deferInitialRefresh:me.deferRowRender!==false,trackOver:me.trackMouseOver!==false,scroll:me.scroll,xtype:me.viewType,store:me.store,headerCt:me.headerCt,columnLines:me.columnLines,rowLines:me.rowLines,selModel:sm,features:me.features,panel:me,emptyText:me.emptyText||""},me.viewConfig));if(me.view.emptyText){me.view.emptyText='<div class="'+me.emptyCls+'">'+me.view.emptyText+"</div>"}me.view.getComponentLayout().headerCt=me.headerCt;me.mon(me.view,{uievent:me.processEvent,scope:me});sm.view=me.view;me.headerCt.view=me.view}return me.view},setAutoScroll:Ext.emptyFn,processEvent:function(type,view,cell,recordIndex,cellIndex,e,record,row){var me=this,header;if(cellIndex!==-1){header=me.columnManager.getColumns()[cellIndex];return header.processEvent.apply(header,arguments)}},determineScrollbars:function(){Ext.log.warn("Obsolete")},invalidateScroller:function(){Ext.log.warn("Obsolete")},scrollByDeltaY:function(yDelta,animate){this.getView().scrollBy(0,yDelta,animate)},scrollByDeltaX:function(xDelta,animate){this.getView().scrollBy(xDelta,0,animate)},afterCollapse:function(){var me=this;me.saveScrollPos();me.saveScrollPos();me.callParent(arguments)},afterExpand:function(){var me=this;me.callParent(arguments);me.restoreScrollPos();me.restoreScrollPos()},saveScrollPos:Ext.emptyFn,restoreScrollPos:Ext.emptyFn,onHeaderResize:function(){this.delayScroll()},onHeaderMove:function(headerCt,header,colsToMove,fromIdx,toIdx){var me=this;if(me.optimizedColumnMove===false){me.view.refresh()}else{me.view.moveColumn(fromIdx,toIdx,colsToMove)}me.delayScroll()},onHeaderHide:function(headerCt,header){this.view.refresh();this.delayScroll()},onHeaderShow:function(headerCt,header){this.view.refresh();this.delayScroll()},delayScroll:function(){var target=this.getScrollTarget().el;if(target){this.scrollTask.delay(10,null,null,[target.dom.scrollLeft])}},onViewReady:function(){this.fireEvent("viewready",this)},onRestoreHorzScroll:function(){var left=this.scrollLeftPos;if(left){this.syncHorizontalScroll(left,true)}},getScrollerOwner:function(){var rootCmp=this;if(!this.scrollerOwner){rootCmp=this.up("[scrollerOwner]")}return rootCmp},getLhsMarker:function(){var me=this;return me.lhsMarker||(me.lhsMarker=Ext.DomHelper.append(me.el,{cls:me.resizeMarkerCls},true))},getRhsMarker:function(){var me=this;return me.rhsMarker||(me.rhsMarker=Ext.DomHelper.append(me.el,{cls:me.resizeMarkerCls},true))},getSelectionModel:function(){var me=this,selModel=me.selModel,applyMode,mode,type;if(!selModel){selModel={};applyMode=true}if(!selModel.events){type=selModel.selType||me.selType;applyMode=!selModel.mode;selModel=me.selModel=Ext.create("selection."+type,selModel)}if(me.simpleSelect){mode="SIMPLE"}else if(me.multiSelect){mode="MULTI"}Ext.applyIf(selModel,{allowDeselect:me.allowDeselect});if(mode&&applyMode){selModel.setSelectionMode(mode)}if(!selModel.hasRelaySetup){me.relayEvents(selModel,["selectionchange","beforeselect","beforedeselect","select","deselect"]);selModel.hasRelaySetup=true}if(me.disableSelection){selModel.locked=true}return selModel},getScrollTarget:function(){var owner=this.getScrollerOwner(),items=owner.query("tableview");return items[1]||items[0]},onHorizontalScroll:function(event,target){this.syncHorizontalScroll(target.scrollLeft)},syncHorizontalScroll:function(left,setBody){var me=this,scrollTarget;setBody=setBody===true;if(me.rendered&&(setBody||left!==me.scrollLeftPos)){if(setBody){scrollTarget=me.getScrollTarget();scrollTarget.el.dom.scrollLeft=left}me.headerCt.el.dom.scrollLeft=left;me.scrollLeftPos=left}},onStoreLoad:Ext.emptyFn,getEditorParent:function(){return this.body},bindStore:function(store,initial){var me=this,view=me.getView(),bufferedStore=store&&store.buffered,bufferedRenderer;me.store=store;bufferedRenderer=me.findPlugin("bufferedrenderer");if(bufferedRenderer){me.verticalScroller=bufferedRenderer;if(bufferedRenderer.store){bufferedRenderer.bindStore(store)}}else if(bufferedStore){me.verticalScroller=bufferedRenderer=me.addPlugin(Ext.apply({ptype:"bufferedrenderer"},me.initialConfig.verticalScroller))}if(view.store!==store){if(initial){view.bindStore(store,false,"dataSource")}else{view.bindStore(store,false)}}me.mon(store,{load:me.onStoreLoad,scope:me});me.storeRelayers=me.relayEvents(store,["filterchange"]);if(bufferedRenderer){me.invalidateScrollerOnRefresh=false}if(me.invalidateScrollerOnRefresh!==undefined){view.preserveScrollOnRefresh=!me.invalidateScrollerOnRefresh}},unbindStore:function(){var me=this,store=me.store;if(store){me.store=null;me.mun(store,{load:me.onStoreLoad,scope:me});Ext.destroy(me.storeRelayers)}},reconfigure:function(store,columns){var me=this,view=me.getView(),originalDeferinitialRefresh,oldStore=me.store,headerCt=me.headerCt,oldColumns=headerCt?headerCt.items.getRange():me.columns;if(columns){columns=Ext.Array.slice(columns)}me.fireEvent("beforereconfigure",me,store,columns,oldStore,oldColumns);if(me.lockable){me.reconfigureLockable(store,columns)}else{Ext.suspendLayouts();if(columns){delete me.scrollLeftPos;headerCt.removeAll();headerCt.add(columns)}if(store&&(store=Ext.StoreManager.lookup(store))!==oldStore){if(me.store){me.unbindStore()}originalDeferinitialRefresh=view.deferInitialRefresh;view.deferInitialRefresh=false;me.bindStore(store);view.deferInitialRefresh=originalDeferinitialRefresh}else{me.getView().refresh()}headerCt.setSortState();Ext.resumeLayouts(true)}me.fireEvent("reconfigure",me,store,columns,oldStore,oldColumns)},beforeDestroy:function(){var task=this.scrollTask;if(task){task.cancel();this.scrollTask=null}this.callParent()},onDestroy:function(){if(this.lockable){this.destroyLockable()}this.callParent()}});