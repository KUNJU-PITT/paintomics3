Ext.define("Ext.panel.Tool",{extend:"Ext.Component",requires:["Ext.tip.QuickTipManager"],alias:"widget.tool",isTool:true,baseCls:Ext.baseCSSPrefix+"tool",disabledCls:Ext.baseCSSPrefix+"tool-disabled",toolPressedCls:Ext.baseCSSPrefix+"tool-pressed",toolOverCls:Ext.baseCSSPrefix+"tool-over",ariaRole:"button",childEls:["toolEl"],renderTpl:['<img role="presentation" id="{id}-toolEl" src="{blank}" class="{baseCls}-img {baseCls}-{type}'+'{childElCls}" role="presentation"/>'],toolOwner:null,tooltipType:"qtip",stopEvent:true,height:15,width:15,_toolTypes:{close:1,collapse:1,down:1,expand:1,gear:1,help:1,left:1,maximize:1,minimize:1,minus:1,next:1,pin:1,plus:1,prev:1,print:1,refresh:1,restore:1,right:1,save:1,search:1,toggle:1,unpin:1,up:1},initComponent:function(){var me=this;me.addEvents("click");if(me.id&&me._toolTypes[me.id]&&Ext.global.console){Ext.global.console.warn("When specifying a tool you should use the type option, the id can conflict now that tool is a Component")}me.type=me.type||me.id;Ext.applyIf(me.renderData,{baseCls:me.baseCls,blank:Ext.BLANK_IMAGE_URL,type:me.type});me.tooltip=me.tooltip||me.qtip;me.callParent()},afterRender:function(){var me=this,attr;me.callParent(arguments);me.el.on({click:me.onClick,mousedown:me.onMouseDown,mouseover:me.onMouseOver,mouseout:me.onMouseOut,scope:me});if(me.tooltip){if(Ext.quickTipsActive&&Ext.isObject(me.tooltip)){Ext.tip.QuickTipManager.register(Ext.apply({target:me.id},me.tooltip))}else{attr=me.tooltipType=="qtip"?"data-qtip":"title";me.el.dom.setAttribute(attr,me.tooltip)}}},getFocusEl:function(){return this.el},setType:function(type){var me=this,oldType=me.type;me.type=type;if(me.rendered){if(oldType){me.toolEl.removeCls(me.baseCls+"-"+oldType)}me.toolEl.addCls(me.baseCls+"-"+type)}else{me.renderData.type=type}return me},onClick:function(e,target){var me=this;if(me.disabled){return false}me.el.removeCls(me.toolPressedCls);me.el.removeCls(me.toolOverCls);if(me.stopEvent!==false){e.stopEvent()}if(me.handler){Ext.callback(me.handler,me.scope||me,[e,target,me.ownerCt,me])}else if(me.callback){Ext.callback(me.callback,me.scope||me,[me.toolOwner||me.ownerCt,me,e])}me.fireEvent("click",me,e);return true},onDestroy:function(){if(Ext.quickTipsActive&&Ext.isObject(this.tooltip)){Ext.tip.QuickTipManager.unregister(this.id)}this.callParent()},onMouseDown:function(){if(this.disabled){return false}this.el.addCls(this.toolPressedCls)},onMouseOver:function(){if(this.disabled){return false}this.el.addCls(this.toolOverCls)},onMouseOut:function(){this.el.removeCls(this.toolOverCls)}});