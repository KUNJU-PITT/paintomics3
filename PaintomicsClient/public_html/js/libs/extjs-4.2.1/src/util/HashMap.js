Ext.define("Ext.util.HashMap",{mixins:{observable:"Ext.util.Observable"},generation:0,constructor:function(config){config=config||{};var me=this,keyFn=config.keyFn;me.initialConfig=config;me.addEvents("add","clear","remove","replace");me.mixins.observable.constructor.call(me,config);me.clear(true);if(keyFn){me.getKey=keyFn}},getCount:function(){return this.length},getData:function(key,value){if(value===undefined){value=key;key=this.getKey(value)}return[key,value]},getKey:function(o){return o.id},add:function(key,value){var me=this;if(arguments.length===1){value=key;key=me.getKey(value)}if(me.containsKey(key)){return me.replace(key,value)}me.map[key]=value;++me.length;me.generation++;if(me.hasListeners.add){me.fireEvent("add",me,key,value)}return value},replace:function(key,value){var me=this,map=me.map,old;if(arguments.length===1){value=key;key=me.getKey(value)}if(!me.containsKey(key)){me.add(key,value)}old=map[key];map[key]=value;me.generation++;if(me.hasListeners.replace){me.fireEvent("replace",me,key,value,old)}return value},remove:function(o){var key=this.findKey(o);if(key!==undefined){return this.removeAtKey(key)}return false},removeAtKey:function(key){var me=this,value;if(me.containsKey(key)){value=me.map[key];delete me.map[key];--me.length;me.generation++;if(me.hasListeners.remove){me.fireEvent("remove",me,key,value)}return true}return false},get:function(key){var map=this.map;return map.hasOwnProperty(key)?map[key]:undefined},clear:function(initial){var me=this;if(initial||me.generation){me.map={};me.length=0;me.generation=initial?0:me.generation+1}if(initial!==true&&me.hasListeners.clear){me.fireEvent("clear",me)}return me},containsKey:function(key){var map=this.map;return map.hasOwnProperty(key)&&map[key]!==undefined},contains:function(value){return this.containsKey(this.findKey(value))},getKeys:function(){return this.getArray(true)},getValues:function(){return this.getArray(false)},getArray:function(isKey){var arr=[],key,map=this.map;for(key in map){if(map.hasOwnProperty(key)){arr.push(isKey?key:map[key])}}return arr},each:function(fn,scope){var items=Ext.apply({},this.map),key,length=this.length;scope=scope||this;for(key in items){if(items.hasOwnProperty(key)){if(fn.call(scope,key,items[key],length)===false){break}}}return this},clone:function(){var hash=new this.self(this.initialConfig),map=this.map,key;hash.suspendEvents();for(key in map){if(map.hasOwnProperty(key)){hash.add(key,map[key])}}hash.resumeEvents();return hash},findKey:function(value){var key,map=this.map;for(key in map){if(map.hasOwnProperty(key)&&map[key]===value){return key}}return undefined}});