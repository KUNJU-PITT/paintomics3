Ext.define("Ext.util.ComponentDragger",{extend:"Ext.dd.DragTracker",autoStart:500,constructor:function(comp,config){this.comp=comp;this.initialConstrainTo=config.constrainTo;this.callParent([config])},onStart:function(e){var me=this,comp=me.comp;me.startPosition=comp.getXY();if(comp.ghost&&!comp.liveDrag){me.proxy=comp.ghost();me.dragTarget=me.proxy.header.el}if(me.constrain||me.constrainDelegate){me.constrainTo=me.calculateConstrainRegion()}if(comp.beginDrag){comp.beginDrag()}},calculateConstrainRegion:function(){var me=this,comp=me.comp,constrainTo=me.initialConstrainTo,constraintInsets=comp.constraintInsets,constrainEl,delegateRegion,elRegion,dragEl=me.proxy?me.proxy.el:comp.el,shadowSize=!me.constrainDelegate&&dragEl.shadow&&comp.constrainShadow&&!dragEl.shadowDisabled?dragEl.shadow.getShadowSize():0;if(!(constrainTo instanceof Ext.util.Region)){constrainEl=Ext.fly(constrainTo);constrainTo=constrainEl.getViewRegion();constrainTo.right=constrainTo.left+constrainEl.dom.clientWidth}else{constrainTo=constrainTo.copy()}if(constraintInsets){constraintInsets=Ext.isObject(constraintInsets)?constraintInsets:Ext.Element.parseBox(constraintInsets);constrainTo.adjust(constraintInsets.top,constraintInsets.right,constraintInsets.bottom,constraintInsets.length)}if(shadowSize){constrainTo.adjust(shadowSize[0],-shadowSize[1],-shadowSize[2],shadowSize[3])}if(!me.constrainDelegate){delegateRegion=Ext.fly(me.dragTarget).getRegion();elRegion=dragEl.getRegion();constrainTo.adjust(delegateRegion.top-elRegion.top,delegateRegion.right-elRegion.right,delegateRegion.bottom-elRegion.bottom,delegateRegion.left-elRegion.left)}return constrainTo},onDrag:function(e){var me=this,comp=me.proxy&&!me.comp.liveDrag?me.proxy:me.comp,offset=me.getOffset(me.constrain||me.constrainDelegate?"dragTarget":null);comp.setPagePosition(me.startPosition[0]+offset[0],me.startPosition[1]+offset[1])},onEnd:function(e){var comp=this.comp;if(comp.isDestroyed||comp.destroying){return}if(this.proxy&&!comp.liveDrag){comp.unghost()}if(comp.endDrag){comp.endDrag()}}});