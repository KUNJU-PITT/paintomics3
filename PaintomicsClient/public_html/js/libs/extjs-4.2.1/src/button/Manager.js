Ext.define("Ext.button.Manager",{singleton:true,alternateClassName:"Ext.ButtonToggleManager",groups:{},pressedButton:null,buttonSelector:"."+Ext.baseCSSPrefix+"btn",init:function(){var me=this;if(!me.initialized){Ext.getDoc().on({keydown:me.onDocumentKeyDown,mouseup:me.onDocumentMouseUp,scope:me});me.initialized=true}},onDocumentKeyDown:function(e){var k=e.getKey(),btn;if(k===e.SPACE||k===e.ENTER){btn=e.getTarget(this.buttonSelector);if(btn){Ext.getCmp(btn.id).onClick(e)}}},onButtonMousedown:function(button,e){var pressed=this.pressedButton;if(pressed){pressed.onMouseUp(e)}this.pressedButton=button},onDocumentMouseUp:function(e){var pressed=this.pressedButton;if(pressed){pressed.onMouseUp(e);this.pressedButton=null}},toggleGroup:function(btn,state){if(state){var g=this.groups[btn.toggleGroup],length=g.length,i;for(i=0;i<length;i++){if(g[i]!==btn){g[i].toggle(false)}}}},register:function(btn){var me=this,groups=this.groups,group=groups[btn.toggleGroup];me.init();if(!btn.toggleGroup){return}if(!group){group=groups[btn.toggleGroup]=[]}group.push(btn);btn.on("toggle",me.toggleGroup,me)},unregister:function(btn){if(!btn.toggleGroup){return}var me=this,group=me.groups[btn.toggleGroup];if(group){Ext.Array.remove(group,btn);btn.un("toggle",me.toggleGroup,me)}},getPressed:function(group){var g=this.groups[group],i=0,len;if(g){for(len=g.length;i<len;i++){if(g[i].pressed===true){return g[i]}}}return null}});