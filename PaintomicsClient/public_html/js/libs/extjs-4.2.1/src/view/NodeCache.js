Ext.define("Ext.view.NodeCache",{constructor:function(view){this.view=view;this.clear();this.el=new Ext.dom.AbstractElement.Fly},clear:function(removeDom){var me=this,elements=this.elements,i,el;if(removeDom){for(i in elements){el=elements[i];el.parentNode.removeChild(el)}}me.elements={};me.count=me.startIndex=0;me.endIndex=-1},fill:function(newElements,startIndex){var me=this,elements=me.elements={},i,len=newElements.length;if(!startIndex){startIndex=0}for(i=0;i<len;i++){elements[startIndex+i]=newElements[i]}me.startIndex=startIndex;me.endIndex=startIndex+len-1;me.count=len;return this},insert:function(insertPoint,nodes){var me=this,elements=me.elements,i,nodeCount=nodes.length;if(me.count){if(insertPoint>me.endIndex+1||insertPoint+nodes.length-1<me.startIndex){Ext.Error.raise("Discontiguous range would result from inserting "+nodes.length+" nodes at "+insertPoint)}if(insertPoint<me.count){for(i=me.endIndex+nodeCount;i>=insertPoint+nodeCount;i--){elements[i]=elements[i-nodeCount];elements[i].setAttribute("data-recordIndex",i)}}me.endIndex=me.endIndex+nodeCount}else{me.startIndex=insertPoint;me.endIndex=insertPoint+nodeCount-1}for(i=0;i<nodeCount;i++,insertPoint++){elements[insertPoint]=nodes[i];elements[insertPoint].setAttribute("data-recordIndex",insertPoint)}me.count+=nodeCount},item:function(index,asDom){var el=this.elements[index],result=null;if(el){result=asDom?this.elements[index]:this.el.attach(this.elements[index])}return result},first:function(asDom){return this.item(this.startIndex,asDom)},last:function(asDom){return this.item(this.endIndex,asDom)},getCount:function(){return this.count},slice:function(start,end){var elements=this.elements,result=[],i;if(arguments.length<2){end=this.endIndex}else{end=Math.min(this.endIndex,end-1)}for(i=start||this.startIndex;i<=end;i++){result.push(elements[i])}return result},replaceElement:function(el,replacement,domReplace){var elements=this.elements,index=typeof el==="number"?el:this.indexOf(el);if(index>-1){replacement=Ext.getDom(replacement);if(domReplace){el=elements[index];el.parentNode.insertBefore(replacement,el);Ext.removeNode(el);replacement.setAttribute("data-recordIndex",index)}this.elements[index]=replacement}return this},indexOf:function(el){var elements=this.elements,index;el=Ext.getDom(el);for(index=this.startIndex;index<=this.endIndex;index++){if(elements[index]===el){return index}}return-1},removeRange:function(start,end,removeDom){var me=this,elements=me.elements,el,i,removeCount,fromPos;if(end===undefined){end=me.count}else{end=Math.min(me.endIndex+1,end+1)}if(!start){start=0}removeCount=end-start;for(i=start,fromPos=end;i<me.endIndex;i++,fromPos++){if(removeDom&&i<end){Ext.removeNode(elements[i])}if(fromPos<=me.endIndex){el=elements[i]=elements[fromPos];el.setAttribute("data-recordIndex",i)}else{delete elements[i]}}me.count-=removeCount;me.endIndex-=removeCount},removeElement:function(keys,removeDom){var me=this,inKeys,key,elements=me.elements,el,deleteCount,keyIndex=0,index,fromIndex;if(Ext.isArray(keys)){inKeys=keys;keys=[];deleteCount=inKeys.length;for(keyIndex=0;keyIndex<deleteCount;keyIndex++){key=inKeys[keyIndex];if(typeof key!=="number"){key=me.indexOf(key)}if(key>=me.startIndex&&key<=me.endIndex){keys[keys.length]=key}}Ext.Array.sort(keys);deleteCount=keys.length}else{if(keys<me.startIndex||keys>me.endIndex){return}deleteCount=1;keys=[keys]}for(index=fromIndex=keys[0],keyIndex=0;index<=me.endIndex;index++,fromIndex++){if(keyIndex<deleteCount&&index===keys[keyIndex]){fromIndex++;keyIndex++;if(removeDom){Ext.removeNode(elements[index])}}if(fromIndex<=me.endIndex&&fromIndex>=me.startIndex){el=elements[index]=elements[fromIndex];el.setAttribute("data-recordIndex",index)}else{delete elements[index]}}me.endIndex-=deleteCount;me.count-=deleteCount},scroll:function(newRecords,direction,removeCount){var me=this,elements=me.elements,recCount=newRecords.length,i,el,removeEnd,newNodes,nodeContainer=me.view.getNodeContainer(),frag=document.createDocumentFragment();if(direction==-1){for(i=me.endIndex-removeCount+1;i<=me.endIndex;i++){el=elements[i];delete elements[i];el.parentNode.removeChild(el)}me.endIndex-=removeCount;newNodes=me.view.bufferRender(newRecords,me.startIndex-=recCount);for(i=0;i<recCount;i++){elements[me.startIndex+i]=newNodes[i];frag.appendChild(newNodes[i])}nodeContainer.insertBefore(frag,nodeContainer.firstChild)}else{removeEnd=me.startIndex+removeCount;for(i=me.startIndex;i<removeEnd;i++){el=elements[i];delete elements[i];el.parentNode.removeChild(el)}me.startIndex=i;newNodes=me.view.bufferRender(newRecords,me.endIndex+1);for(i=0;i<recCount;i++){elements[me.endIndex+=1]=newNodes[i];frag.appendChild(newNodes[i])}nodeContainer.appendChild(frag)}me.count=me.endIndex-me.startIndex+1}});