Ext.define("Ext.view.AbstractView",{extend:"Ext.Component",requires:["Ext.LoadMask","Ext.data.StoreManager","Ext.CompositeElementLite","Ext.DomQuery","Ext.selection.DataViewModel"],mixins:{bindable:"Ext.util.Bindable"},inheritableStatics:{getRecord:function(node){return this.getBoundView(node).getRecord(node)},getBoundView:function(node){return Ext.getCmp(node.boundView)}},deferInitialRefresh:true,itemCls:Ext.baseCSSPrefix+"dataview-item",loadingText:"Loading...",loadMask:true,loadingUseMsg:true,selectedItemCls:Ext.baseCSSPrefix+"item-selected",emptyText:"",deferEmptyText:true,trackOver:false,blockRefresh:false,preserveScrollOnRefresh:false,last:false,triggerEvent:"itemclick",triggerCtEvent:"containerclick",addCmpEvents:function(){},initComponent:function(){var me=this,isDef=Ext.isDefined,itemTpl=me.itemTpl,memberFn={};if(itemTpl){if(Ext.isArray(itemTpl)){itemTpl=itemTpl.join("")}else if(Ext.isObject(itemTpl)){memberFn=Ext.apply(memberFn,itemTpl.initialConfig);itemTpl=itemTpl.html}if(!me.itemSelector){me.itemSelector="."+me.itemCls}itemTpl=Ext.String.format('<tpl for="."><div class="{0}">{1}</div></tpl>',me.itemCls,itemTpl);me.tpl=new Ext.XTemplate(itemTpl,memberFn)}if(!isDef(me.tpl)||!isDef(me.itemSelector)){Ext.Error.raise({sourceClass:"Ext.view.View",tpl:me.tpl,itemSelector:me.itemSelector,msg:"DataView requires both tpl and itemSelector configurations to be defined."})}me.callParent();me.tpl=me.getTpl("tpl");if(isDef(me.overCls)||isDef(me.overClass)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.view.View: Using the deprecated overCls or overClass configuration. Use overItemCls instead.")}me.overItemCls=me.overCls||me.overClass;delete me.overCls;delete me.overClass}if(isDef(me.selectedCls)||isDef(me.selectedClass)){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.view.View: Using the deprecated selectedCls or selectedClass configuration. Use selectedItemCls instead.")}me.selectedItemCls=me.selectedCls||me.selectedClass;delete me.selectedCls;delete me.selectedClass}if(me.overItemCls){me.trackOver=true}me.addEvents("beforerefresh","refresh","viewready","itemupdate","itemadd","itemremove");me.addCmpEvents();me.store=Ext.data.StoreManager.lookup(me.store||"ext-empty-store");if(!me.dataSource){me.dataSource=me.store}me.bindStore(me.dataSource,true,"dataSource");if(!me.all){me.all=new Ext.CompositeElementLite}me.scrollState={top:0,left:0};me.on({scroll:me.onViewScroll,element:"el",scope:me})},onRender:function(){var me=this,mask=me.loadMask,maskStore=me.getMaskStore(),cfg={target:me,msg:me.loadingText,msgCls:me.loadingCls,useMsg:me.loadingUseMsg,store:maskStore};me.callParent(arguments);if(mask&&!maskStore.proxy.isSynchronous){if(Ext.isObject(mask)){cfg=Ext.apply(cfg,mask)}me.loadMask=new Ext.LoadMask(cfg);me.loadMask.on({scope:me,beforeshow:me.onMaskBeforeShow,hide:me.onMaskHide})}},finishRender:function(){var me=this;me.callParent(arguments);if(!me.up("[collapsed],[hidden]")){me.doFirstRefresh(me.dataSource)}},onBoxReady:function(){var me=this;me.callParent(arguments);if(!me.firstRefreshDone){me.doFirstRefresh(me.dataSource)}},getMaskStore:function(){return this.store},onMaskBeforeShow:function(){var me=this,loadingHeight=me.loadingHeight;if(loadingHeight&&loadingHeight>me.getHeight()){me.hasLoadingHeight=true;me.oldMinHeight=me.minHeight;me.minHeight=loadingHeight;me.updateLayout()}},onMaskHide:function(){var me=this;if(!me.destroying&&me.hasLoadingHeight){me.minHeight=me.oldMinHeight;me.updateLayout();delete me.hasLoadingHeight}},beforeRender:function(){this.callParent(arguments);this.getSelectionModel().beforeViewRender(this)},afterRender:function(){this.callParent(arguments);this.getSelectionModel().bindComponent(this)},getSelectionModel:function(){var me=this,mode="SINGLE";if(me.simpleSelect){mode="SIMPLE"}else if(me.multiSelect){mode="MULTI"}if(!me.selModel||!me.selModel.events){me.selModel=new Ext.selection.DataViewModel(Ext.apply({allowDeselect:me.allowDeselect,mode:mode},me.selModel))}if(!me.selModel.hasRelaySetup){me.relayEvents(me.selModel,["selectionchange","beforeselect","beforedeselect","select","deselect","focuschange"]);me.selModel.hasRelaySetup=true}if(me.disableSelection){me.selModel.locked=true}return me.selModel},refresh:function(){var me=this,targetEl,targetParent,oldDisplay,nextSibling,dom,records;if(!me.rendered||me.isDestroyed){return}if(!me.hasListeners.beforerefresh||me.fireEvent("beforerefresh",me)!==false){targetEl=me.getTargetEl();records=me.getViewRange();dom=targetEl.dom;if(!me.preserveScrollOnRefresh){targetParent=dom.parentNode;oldDisplay=dom.style.display;dom.style.display="none";nextSibling=dom.nextSibling;targetParent.removeChild(dom)}if(me.refreshCounter){me.clearViewEl()}else{me.fixedNodes=targetEl.dom.childNodes.length;me.refreshCounter=1}me.tpl.append(targetEl,me.collectData(records,me.all.startIndex));if(records.length<1){if(!this.store.loading&&(!me.deferEmptyText||me.hasFirstRefresh)){Ext.core.DomHelper.insertHtml("beforeEnd",targetEl.dom,me.emptyText)}me.all.clear()}else{me.collectNodes(targetEl.dom);me.updateIndexes(0)}if(me.hasFirstRefresh){if(me.refreshSelmodelOnRefresh!==false){me.selModel.refresh()}else{me.selModel.pruneIf()}}me.hasFirstRefresh=true;if(!me.preserveScrollOnRefresh){targetParent.insertBefore(dom,nextSibling);dom.style.display=oldDisplay}this.refreshSize();me.fireEvent("refresh",me);if(!me.viewReady){me.viewReady=true;me.fireEvent("viewready",me)}}},collectNodes:function(targetEl){this.all.fill(Ext.query(this.getItemSelector(),Ext.getDom(targetEl)),this.all.startIndex)},getViewRange:function(){return this.dataSource.getRange()},refreshSize:function(){var sizeModel=this.getSizeModel();if(sizeModel.height.shrinkWrap||sizeModel.width.shrinkWrap){this.updateLayout()}},clearViewEl:function(){var me=this,el=me.getTargetEl();if(me.fixedNodes){while(el.dom.childNodes[me.fixedNodes]){el.dom.removeChild(el.dom.childNodes[me.fixedNodes])}}else{el.update("")}me.refreshCounter++},onViewScroll:Ext.emptyFn,onIdChanged:Ext.emptyFn,saveScrollState:function(){if(this.rendered){var dom=this.el.dom,state=this.scrollState;state.left=dom.scrollLeft;state.top=dom.scrollTop}},restoreScrollState:function(){if(this.rendered){var dom=this.el.dom,state=this.scrollState;dom.scrollLeft=state.left;dom.scrollTop=state.top}},prepareData:function(data,index,record){var associatedData,attr,hasCopied;if(record){associatedData=record.getAssociatedData();for(attr in associatedData){if(associatedData.hasOwnProperty(attr)){if(!hasCopied){data=Ext.Object.chain(data);hasCopied=true}data[attr]=associatedData[attr]}}}return data},collectData:function(records,startIndex){var data=[],i=0,len=records.length,record;for(;i<len;i++){record=records[i];data[i]=this.prepareData(record.data,startIndex+i,record)}return data},bufferRender:function(records,index){var me=this,div=me.renderBuffer||(me.renderBuffer=document.createElement("div"));me.tpl.overwrite(div,me.collectData(records,index));return Ext.DomQuery.select(me.getItemSelector(),div)},getNodeContainer:function(){return this.getTargetEl()},onUpdate:function(ds,record){var me=this,index,node;if(me.viewReady){index=me.dataSource.indexOf(record);if(index>-1){node=me.bufferRender([record],index)[0];if(me.getNode(record)){me.all.replaceElement(index,node,true);me.updateIndexes(index,index);me.selModel.onUpdate(record);if(me.hasListeners.itemupdate){me.fireEvent("itemupdate",record,index,node)}return node}}}},onAdd:function(store,records,index){var me=this,nodes;if(me.rendered){if(me.all.getCount()===0){me.refresh();nodes=me.all.slice()}else{nodes=me.doAdd(records,index);if(me.refreshSelmodelOnRefresh!==false){me.selModel.refresh()}me.updateIndexes(index);me.refreshSize()}if(me.hasListeners.itemadd){me.fireEvent("itemadd",records,index,nodes)}}},doAdd:function(records,index){var me=this,nodes=me.bufferRender(records,index,true),all=me.all,count=all.getCount(),i,l;if(count===0){for(i=0,l=nodes.length;i<l;i++){this.getNodeContainer().appendChild(nodes[i])}}else if(index<count){if(index===0){all.item(index).insertSibling(nodes,"before",true)}else{all.item(index-1).insertSibling(nodes,"after",true)}}else{all.last().insertSibling(nodes,"after",true)}all.insert(index,nodes);return nodes},onRemove:function(ds,records,indexes){var me=this,fireItemRemove=me.hasListeners.itemremove,i,record,index;if(me.all.getCount()){if(me.dataSource.getCount()===0){if(fireItemRemove){for(i=indexes.length-1;i>=0;--i){me.fireEvent("itemremove",records[i],indexes[i])}}me.refresh()}else{for(i=indexes.length-1;i>=0;--i){record=records[i];index=indexes[i];me.doRemove(record,index);if(fireItemRemove){me.fireEvent("itemremove",record,index)}}me.updateIndexes(indexes[0])}this.refreshSize()}},doRemove:function(record,index){this.all.removeElement(index,true)},refreshNode:function(index){this.onUpdate(this.dataSource,this.dataSource.getAt(index))},updateIndexes:function(startIndex,endIndex){var nodes=this.all.elements,records=this.getViewRange(),i;startIndex=startIndex||0;endIndex=endIndex||(endIndex===0?0:nodes.length-1);for(i=startIndex;i<=endIndex;i++){nodes[i].viewIndex=i;nodes[i].viewRecordId=records[i].internalId;if(!nodes[i].boundView){nodes[i].boundView=this.id}}},getStore:function(){return this.store},bindStore:function(store,initial,propName){var me=this;me.mixins.bindable.bindStore.apply(me,arguments);if(!initial){me.getSelectionModel().bindStore(store)}if(me.componentLayoutCounter){me.doFirstRefresh(store)}},doFirstRefresh:function(store){var me=this;me.firstRefreshDone=true;if(store&&!store.loading){if(me.deferInitialRefresh){me.applyFirstRefresh()}else{me.refresh()}}},applyFirstRefresh:function(){var me=this;if(me.isDestroyed){return}if(me.up("[isCollapsingOrExpanding]")){Ext.Function.defer(me.applyFirstRefresh,100,me)}else{Ext.Function.defer(function(){if(!me.isDestroyed){me.refresh()}},1)}},onUnbindStore:function(store){this.setMaskBind(null)},onBindStore:function(store,initial,propName){this.setMaskBind(store);if(!initial&&propName==="store"){this.bindStore(store,false,"dataSource")}},setMaskBind:function(store){var mask=this.loadMask;if(mask&&mask.bindStore){mask.bindStore(store)}},getStoreListeners:function(){var me=this;return{idchanged:me.onIdChanged,refresh:me.onDataRefresh,add:me.onAdd,bulkremove:me.onRemove,update:me.onUpdate,clear:me.refresh}},onDataRefresh:function(){this.refreshView()},refreshView:function(){var me=this,blockedByAncestor=!me.firstRefreshDone&&(!me.rendered||me.up("[collapsed],[isCollapsingOrExpanding],[hidden]"));if(blockedByAncestor){me.deferInitialRefresh=false}else if(me.blockRefresh!==true){me.firstRefreshDone=true;me.refresh()}},findItemByChild:function(node){return Ext.fly(node).findParent(this.getItemSelector(),this.getTargetEl())},findTargetByEvent:function(e){return e.getTarget(this.getItemSelector(),this.getTargetEl())},getSelectedNodes:function(){var nodes=[],records=this.selModel.getSelection(),ln=records.length,i=0;for(;i<ln;i++){nodes.push(this.getNode(records[i]))}return nodes},getRecords:function(nodes){var records=[],i=0,len=nodes.length,data=this.dataSource.data;for(;i<len;i++){records[records.length]=data.getByKey(nodes[i].viewRecordId)}return records},getRecord:function(node){return this.dataSource.data.getByKey(Ext.getDom(node).viewRecordId)},isSelected:function(node){var r=this.getRecord(node);return this.selModel.isSelected(r)},select:function(records,keepExisting,suppressEvent){this.selModel.select(records,keepExisting,suppressEvent)},deselect:function(records,suppressEvent){this.selModel.deselect(records,suppressEvent)},getNode:function(nodeInfo){if(!nodeInfo&&nodeInfo!==0||!this.rendered){return null}if(Ext.isString(nodeInfo)){return document.getElementById(nodeInfo)}if(Ext.isNumber(nodeInfo)){return this.all.elements[nodeInfo]}if(nodeInfo.isModel){return this.getNodeByRecord(nodeInfo)}return nodeInfo},getNodeByRecord:function(record){var ns=this.all.elements,ln=ns.length,i=0;for(;i<ln;i++){if(ns[i].viewRecordId===record.internalId){return ns[i]}}return null},getNodes:function(start,end){var all=this.all;if(end===undefined){end=all.getCount()}else{end++}return all.slice(start||0,end)},indexOf:function(node){node=this.getNode(node);if(!node&&node!==0){return-1}if(Ext.isNumber(node.viewIndex)){return node.viewIndex}return this.all.indexOf(node)},onDestroy:function(){var me=this;me.all.clear();me.callParent();me.bindStore(null);me.selModel.destroy()},onItemSelect:function(record){var node=this.getNode(record);if(node){Ext.fly(node).addCls(this.selectedItemCls)}},onItemDeselect:function(record){var node=this.getNode(record);if(node){Ext.fly(node).removeCls(this.selectedItemCls)}},getItemSelector:function(){return this.itemSelector}},function(){Ext.deprecate("extjs","4.0",function(){Ext.view.AbstractView.override({getSelectionCount:function(){if(Ext.global.console){Ext.global.console.warn("DataView: getSelectionCount will be removed, please interact with the Ext.selection.DataViewModel")}return this.selModel.getSelection().length},getSelectedRecords:function(){if(Ext.global.console){Ext.global.console.warn("DataView: getSelectedRecords will be removed, please interact with the Ext.selection.DataViewModel")}return this.selModel.getSelection()},select:function(records,keepExisting,supressEvents){if(Ext.global.console){Ext.global.console.warn("DataView: select will be removed, please access select through a DataView's SelectionModel, ie: view.getSelectionModel().select()")}var sm=this.getSelectionModel();return sm.select.apply(sm,arguments)},clearSelections:function(){if(Ext.global.console){Ext.global.console.warn("DataView: clearSelections will be removed, please access deselectAll through DataView's SelectionModel, ie: view.getSelectionModel().deselectAll()")}var sm=this.getSelectionModel();return sm.deselectAll()}})})});