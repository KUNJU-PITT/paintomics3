Ext.define("Ext.layout.container.boxOverflow.None",{alternateClassName:"Ext.layout.boxOverflow.None",constructor:function(layout,config){this.layout=layout;Ext.apply(this,config)},handleOverflow:Ext.emptyFn,clearOverflow:Ext.emptyFn,beginLayout:Ext.emptyFn,beginLayoutCycle:Ext.emptyFn,calculate:function(ownerContext){var me=this,plan=ownerContext.state.boxPlan,overflow;if(plan&&plan.tooNarrow){overflow=me.handleOverflow(ownerContext);if(overflow){if(overflow.reservedSpace){me.layout.publishInnerCtSize(ownerContext,overflow.reservedSpace)}}}else{me.clearOverflow()}},completeLayout:Ext.emptyFn,finishedLayout:function(ownerContext){var me=this,owner=me.layout.owner,hiddens,hiddenCount;if(owner.hasListeners.overflowchange){hiddens=owner.query(">[hidden]");hiddenCount=hiddens.length;if(hiddenCount!==me.lastHiddenCount){owner.fireEvent("overflowchange",me.lastHiddenCount,hiddenCount,hiddens);me.lastHiddenCount=hiddenCount}}},onRemove:Ext.emptyFn,getItem:function(item){return this.layout.owner.getComponent(item)},getOwnerType:function(owner){var type;if(owner.isToolbar){type="toolbar"}else if(owner.isTabBar){type="tabbar"}else if(owner.isMenu){type="menu"}else{type=owner.getXType()}return type},getPrefixConfig:Ext.emptyFn,getSuffixConfig:Ext.emptyFn,getOverflowCls:function(){return""}});