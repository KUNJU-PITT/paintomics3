Ext.define("Ext.layout.container.boxOverflow.Menu",{extend:"Ext.layout.container.boxOverflow.None",requires:["Ext.toolbar.Separator","Ext.button.Button"],alternateClassName:"Ext.layout.boxOverflow.Menu",noItemsMenuText:'<div class="'+Ext.baseCSSPrefix+'toolbar-no-items">(None)</div>',constructor:function(layout){var me=this;me.callParent(arguments);me.triggerButtonCls=me.triggerButtonCls||Ext.baseCSSPrefix+"box-menu-after";me.menuItems=[]},beginLayout:function(ownerContext){this.callParent(arguments);this.clearOverflow(ownerContext)},beginLayoutCycle:function(ownerContext,firstCycle){this.callParent(arguments);if(!firstCycle){this.clearOverflow(ownerContext);this.layout.cacheChildItems(ownerContext)}},onRemove:function(comp){Ext.Array.remove(this.menuItems,comp)},getSuffixConfig:function(){var me=this,layout=me.layout,owner=layout.owner,oid=owner.id;me.menu=new Ext.menu.Menu({listeners:{scope:me,beforeshow:me.beforeMenuShow}});me.menuTrigger=new Ext.button.Button({id:oid+"-menu-trigger",cls:Ext.layout.container.Box.prototype.innerCls+" "+me.triggerButtonCls+" "+Ext.baseCSSPrefix+"toolbar-item",plain:owner.usePlainButtons,ownerCt:owner,ownerLayout:layout,iconCls:Ext.baseCSSPrefix+me.getOwnerType(owner)+"-more-icon",ui:owner instanceof Ext.toolbar.Toolbar?"default-toolbar":"default",menu:me.menu,showEmptyMenu:true,getSplitCls:function(){return""}});return me.menuTrigger.getRenderTree()},getOverflowCls:function(){return Ext.baseCSSPrefix+this.layout.direction+"-box-overflow-body"},handleOverflow:function(ownerContext){var me=this,layout=me.layout,names=layout.names,plan=ownerContext.state.boxPlan,posArgs=[null,null];me.showTrigger(ownerContext);if(me.layout.direction!=="vertical"){posArgs[names.heightIndex]=(plan.maxSize-me.menuTrigger[names.getHeight]())/2;me.menuTrigger.setPosition.apply(me.menuTrigger,posArgs)}return{reservedSpace:me.triggerTotalWidth}},captureChildElements:function(){var me=this,menuTrigger=me.menuTrigger,names=me.layout.names;if(menuTrigger.rendering){menuTrigger.finishRender();me.triggerTotalWidth=menuTrigger[names.getWidth]()+menuTrigger.el.getMargin(names.parallelMargins)}},_asLayoutRoot:{isRoot:true},clearOverflow:function(ownerContext){var me=this,items=me.menuItems,item,i=0,length=items.length,owner=me.layout.owner,asLayoutRoot=me._asLayoutRoot;owner.suspendLayouts();me.captureChildElements();me.hideTrigger();owner.resumeLayouts();for(;i<length;i++){item=items[i];item.suspendLayouts();item.show();item.resumeLayouts(asLayoutRoot)}items.length=0},showTrigger:function(ownerContext){var me=this,layout=me.layout,owner=layout.owner,names=layout.names,startProp=names.x,sizeProp=names.width,plan=ownerContext.state.boxPlan,available=plan.targetSize[sizeProp],childItems=ownerContext.childItems,len=childItems.length,menuTrigger=me.menuTrigger,childContext,comp,i,props;menuTrigger.suspendLayouts();menuTrigger.show();menuTrigger.resumeLayouts(me._asLayoutRoot);available-=me.triggerTotalWidth;owner.suspendLayouts();me.menuItems.length=0;for(i=0;i<len;i++){childContext=childItems[i];props=childContext.props;if(props[startProp]+props[sizeProp]>available){comp=childContext.target;me.menuItems.push(comp);comp.hide()}}owner.resumeLayouts()},hideTrigger:function(){var menuTrigger=this.menuTrigger;if(menuTrigger){menuTrigger.hide()}},beforeMenuShow:function(menu){var me=this,items=me.menuItems,i=0,len=items.length,item,prev,needsSep=function(group,prev){return group.isXType("buttongroup")&&!(prev instanceof Ext.toolbar.Separator)};menu.suspendLayouts();me.clearMenu();menu.removeAll();for(;i<len;i++){item=items[i];if(!i&&item instanceof Ext.toolbar.Separator){continue}if(prev&&(needsSep(item,prev)||needsSep(prev,item))){menu.add("-")}me.addComponentToMenu(menu,item);prev=item}if(menu.items.length<1){menu.add(me.noItemsMenuText)}menu.resumeLayouts()},createMenuConfig:function(component,hideOnClick){var me=this,config=Ext.apply({},component.initialConfig),group=component.toggleGroup;Ext.copyTo(config,component,["iconCls","icon","itemId","disabled","handler","scope","menu","tabIndex"]);Ext.apply(config,{text:component.overflowText||component.text,hideOnClick:hideOnClick,destroyMenu:false,listeners:{}});if(component.isFormField){config.value=component.getValue();config.listeners.change=function(c,newVal,oldVal){component.setValue(newVal)}}else if(group||component.enableToggle){Ext.apply(config,{hideOnClick:false,group:group,checked:component.pressed,handler:function(item,e){component.onClick(e)}})}if(component.isButton&&!component.changeListenersAdded){component.on({textchange:me.onButtonAttrChange,iconchange:me.onButtonAttrChange,toggle:me.onButtonToggle});component.changeListenersAdded=true}delete config.margin;delete config.ownerCt;delete config.xtype;delete config.id;delete config.itemId;return config},onButtonAttrChange:function(btn){var clone=btn.overflowClone;clone.suspendLayouts();clone.setText(btn.text);clone.setIcon(btn.icon);clone.setIconCls(btn.iconCls);clone.resumeLayouts(true)},onButtonToggle:function(btn,state){if(btn.overflowClone.checked!==state){btn.overflowClone.setChecked(state)}},addComponentToMenu:function(menu,component){var me=this,i,items,iLen;if(component instanceof Ext.toolbar.Separator){menu.add("-")}else if(component.isComponent){if(component.isXType("splitbutton")){component.overflowClone=menu.add(me.createMenuConfig(component,true))}else if(component.isXType("button")){component.overflowClone=menu.add(me.createMenuConfig(component,!component.menu))}else if(component.isXType("buttongroup")){items=component.items.items;iLen=items.length;for(i=0;i<iLen;i++){me.addComponentToMenu(menu,items[i])}}else{component.overflowClone=menu.add(Ext.create(Ext.getClassName(component),me.createMenuConfig(component)))}}},clearMenu:function(){var menu=this.menu,items,i,iLen,item;if(menu&&menu.items){items=menu.items.items;iLen=items.length;for(i=0;i<iLen;i++){item=items[i];if(item.setMenu){item.setMenu(null)}}}},destroy:function(){var trigger=this.menuTrigger;if(trigger&&!this.layout.owner.items.contains(trigger)){delete trigger.ownerCt}Ext.destroy(this.menu,trigger)}});