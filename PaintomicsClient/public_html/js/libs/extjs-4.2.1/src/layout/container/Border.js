Ext.define("Ext.layout.container.Border",{extend:"Ext.layout.container.Container",alias:"layout.border",alternateClassName:"Ext.layout.BorderLayout",requires:["Ext.resizer.BorderSplitter","Ext.fx.Anim","Ext.layout.container.border.Region"],targetCls:Ext.baseCSSPrefix+"border-layout-ct",itemCls:[Ext.baseCSSPrefix+"border-item",Ext.baseCSSPrefix+"box-item"],type:"border",isBorderLayout:true,padding:undefined,percentageRe:/(\d+)%/,horzMarginProp:"left",padOnContainerProp:"left",padNotOnContainerProp:"right",axisProps:{horz:{borderBegin:"west",borderEnd:"east",horizontal:true,posProp:"x",sizeProp:"width",sizePropCap:"Width"},vert:{borderBegin:"north",borderEnd:"south",horizontal:false,posProp:"y",sizeProp:"height",sizePropCap:"Height"}},centerRegion:null,manageMargins:true,panelCollapseAnimate:true,panelCollapseMode:"placeholder",regionWeights:{north:20,south:10,center:0,west:-10,east:-20},beginAxis:function(ownerContext,regions,name){var me=this,props=me.axisProps[name],isVert=!props.horizontal,sizeProp=props.sizeProp,totalFlex=0,childItems=ownerContext.childItems,length=childItems.length,center,i,childContext,centerFlex,comp,region,match,size,type,target,placeholder;for(i=0;i<length;++i){childContext=childItems[i];comp=childContext.target;childContext.layoutPos={};if(comp.region){childContext.region=region=comp.region;childContext.isCenter=comp.isCenter;childContext.isHorz=comp.isHorz;childContext.isVert=comp.isVert;childContext.weight=comp.weight||me.regionWeights[region]||0;regions[comp.id]=childContext;if(comp.isCenter){center=childContext;centerFlex=comp.flex;ownerContext.centerRegion=center;continue}if(isVert!==childContext.isVert){continue}childContext.reverseWeighting=region==props.borderEnd;size=comp[sizeProp];type=typeof size;if(!comp.collapsed){if(type=="string"&&(match=me.percentageRe.exec(size))){childContext.percentage=parseInt(match[1],10)}else if(comp.flex){totalFlex+=childContext.flex=comp.flex}}}}if(center){target=center.target;if(placeholder=target.placeholderFor){if(!centerFlex&&isVert===placeholder.collapsedVertical()){centerFlex=0;center.collapseAxis=name}}else if(target.collapsed&&isVert===target.collapsedVertical()){centerFlex=0;center.collapseAxis=name}}if(centerFlex==null){centerFlex=1}totalFlex+=centerFlex;return Ext.apply({before:isVert?"top":"left",totalFlex:totalFlex},props)},beginLayout:function(ownerContext){var me=this,items=me.getLayoutItems(),pad=me.padding,type=typeof pad,padOnContainer=false,childContext,item,length,i,regions,collapseTarget,doShow,hidden,region;if(pad){if(type=="string"||type=="number"){pad=Ext.util.Format.parseBox(pad)}}else{pad=ownerContext.getEl("getTargetEl").getPaddingInfo();padOnContainer=true}ownerContext.outerPad=pad;ownerContext.padOnContainer=padOnContainer;for(i=0,length=items.length;i<length;++i){item=items[i];collapseTarget=me.getSplitterTarget(item);if(collapseTarget){doShow=undefined;hidden=!!item.hidden;if(!collapseTarget.split){if(collapseTarget.isCollapsingOrExpanding){doShow=!!collapseTarget.collapsed}}else if(hidden!==collapseTarget.hidden){doShow=!collapseTarget.hidden}if(doShow){item.show()}else if(doShow===false){item.hide()}}}me.callParent(arguments);items=ownerContext.childItems;length=items.length;regions={};ownerContext.borderAxisHorz=me.beginAxis(ownerContext,regions,"horz");ownerContext.borderAxisVert=me.beginAxis(ownerContext,regions,"vert");for(i=0;i<length;++i){childContext=items[i];collapseTarget=me.getSplitterTarget(childContext.target);if(collapseTarget){region=regions[collapseTarget.id];if(!region){region=ownerContext.getEl(collapseTarget.el,me);region.region=collapseTarget.region}childContext.collapseTarget=collapseTarget=region;childContext.weight=collapseTarget.weight;childContext.reverseWeighting=collapseTarget.reverseWeighting;collapseTarget.splitter=childContext;childContext.isHorz=collapseTarget.isHorz;childContext.isVert=collapseTarget.isVert}}me.sortWeightedItems(items,"reverseWeighting");me.setupSplitterNeighbors(items)},calculate:function(ownerContext){var me=this,containerSize=me.getContainerSize(ownerContext),childItems=ownerContext.childItems,length=childItems.length,horz=ownerContext.borderAxisHorz,vert=ownerContext.borderAxisVert,pad=ownerContext.outerPad,padOnContainer=ownerContext.padOnContainer,i,childContext,childMargins,size,horzPercentTotal,vertPercentTotal;horz.begin=pad[me.padOnContainerProp];vert.begin=pad.top;horzPercentTotal=horz.end=horz.flexSpace=containerSize.width+(padOnContainer?pad[me.padOnContainerProp]:-pad[me.padNotOnContainerProp]);vertPercentTotal=vert.end=vert.flexSpace=containerSize.height+(padOnContainer?pad.top:-pad.bottom);for(i=0;i<length;++i){childContext=childItems[i];childMargins=childContext.getMarginInfo();if(childContext.isHorz||childContext.isCenter){horz.addUnflexed(childMargins.width);horzPercentTotal-=childMargins.width}if(childContext.isVert||childContext.isCenter){vert.addUnflexed(childMargins.height);vertPercentTotal-=childMargins.height}if(!childContext.flex&&!childContext.percentage){if(childContext.isHorz||childContext.isCenter&&childContext.collapseAxis==="horz"){size=childContext.getProp("width");horz.addUnflexed(size);if(childContext.collapseTarget){horzPercentTotal-=size}}else if(childContext.isVert||childContext.isCenter&&childContext.collapseAxis==="vert"){size=childContext.getProp("height");vert.addUnflexed(size);if(childContext.collapseTarget){vertPercentTotal-=size}}}}for(i=0;i<length;++i){childContext=childItems[i];childMargins=childContext.getMarginInfo();if(childContext.percentage){if(childContext.isHorz){size=Math.ceil(horzPercentTotal*childContext.percentage/100);size=childContext.setWidth(size);horz.addUnflexed(size)}else if(childContext.isVert){size=Math.ceil(vertPercentTotal*childContext.percentage/100);size=childContext.setHeight(size);vert.addUnflexed(size)}}}for(i=0;i<length;++i){childContext=childItems[i];if(!childContext.isCenter){me.calculateChildAxis(childContext,horz);me.calculateChildAxis(childContext,vert)}}if(me.finishAxis(ownerContext,vert)+me.finishAxis(ownerContext,horz)<2){me.done=false}else{me.finishPositions(childItems)}},calculateChildAxis:function(childContext,axis){var collapseTarget=childContext.collapseTarget,setSizeMethod="set"+axis.sizePropCap,sizeProp=axis.sizeProp,childMarginSize=childContext.getMarginInfo()[sizeProp],region,isBegin,flex,pos,size;if(collapseTarget){region=collapseTarget.region}else{region=childContext.region;flex=childContext.flex}isBegin=region==axis.borderBegin;if(!isBegin&&region!=axis.borderEnd){childContext[setSizeMethod](axis.end-axis.begin-childMarginSize);pos=axis.begin}else{if(flex){size=Math.ceil(axis.flexSpace*(flex/axis.totalFlex));size=childContext[setSizeMethod](size)}else if(childContext.percentage){size=childContext.peek(sizeProp)}else{size=childContext.getProp(sizeProp)}size+=childMarginSize;if(isBegin){pos=axis.begin;axis.begin+=size}else{axis.end=pos=axis.end-size}}childContext.layoutPos[axis.posProp]=pos},finishAxis:function(ownerContext,axis){var size=axis.end-axis.begin,center=ownerContext.centerRegion;if(center){center["set"+axis.sizePropCap](size-center.getMarginInfo()[axis.sizeProp]);center.layoutPos[axis.posProp]=axis.begin}return Ext.isNumber(size)?1:0},finishPositions:function(childItems){var length=childItems.length,index,childContext,marginProp=this.horzMarginProp;for(index=0;index<length;++index){childContext=childItems[index];childContext.setProp("x",childContext.layoutPos.x+childContext.marginInfo[marginProp]);childContext.setProp("y",childContext.layoutPos.y+childContext.marginInfo.top)}},getLayoutItems:function(){var owner=this.owner,ownerItems=owner&&owner.items&&owner.items.items||[],length=ownerItems.length,items=[],i=0,ownerItem,placeholderFor;for(;i<length;i++){ownerItem=ownerItems[i];placeholderFor=ownerItem.placeholderFor;if(ownerItem.hidden||(!ownerItem.floated||ownerItem.isCollapsingOrExpanding===2)&&!(placeholderFor&&placeholderFor.isCollapsingOrExpanding===2)){items.push(ownerItem)}}return items},getPlaceholder:function(comp){return comp.getPlaceholder&&comp.getPlaceholder()},getSplitterTarget:function(splitter){var collapseTarget=splitter.collapseTarget;if(collapseTarget&&collapseTarget.collapsed){return collapseTarget.placeholder||collapseTarget}return collapseTarget},isItemBoxParent:function(itemContext){return true},isItemShrinkWrap:function(item){return true},insertSplitter:function(item,index,hidden,splitterCfg){var region=item.region,splitter=Ext.apply({xtype:"bordersplitter",collapseTarget:item,id:item.id+"-splitter",hidden:hidden,canResize:item.splitterResize!==false,splitterFor:item},splitterCfg),at=index+(region==="south"||region==="east"?0:1);if(item.collapseMode==="mini"){splitter.collapsedCls=item.collapsedCls}item.splitter=this.owner.add(at,splitter)},onAdd:function(item,index){var me=this,placeholderFor=item.placeholderFor,region=item.region,split,hidden,cfg;me.callParent(arguments);if(region){Ext.apply(item,me.regionFlags[region]);if(item.initBorderRegion){item.initBorderRegion()}if(region==="center"){if(me.centerRegion){Ext.Error.raise("Cannot have multiple center regions in a BorderLayout.")}me.centerRegion=item}else{split=item.split;hidden=!!item.hidden;if(typeof split==="object"){cfg=split;split=true}if((item.isHorz||item.isVert)&&(split||item.collapseMode=="mini")){me.insertSplitter(item,index,hidden||!split,cfg)}}if(!item.hasOwnProperty("collapseMode")){item.collapseMode=me.panelCollapseMode}if(!item.hasOwnProperty("animCollapse")){if(item.collapseMode!=="placeholder"){item.animCollapse=false}else{item.animCollapse=me.panelCollapseAnimate}}}else if(placeholderFor){Ext.apply(item,me.regionFlags[placeholderFor.region]);item.region=placeholderFor.region;item.weight=placeholderFor.weight}},onDestroy:function(){this.centerRegion=null;this.callParent()},onRemove:function(item){var me=this,region=item.region,splitter=item.splitter;if(region){if(item.isCenter){me.centerRegion=null}delete item.isCenter;delete item.isHorz;delete item.isVert;if(splitter){me.owner.doRemove(splitter,true);delete item.splitter}}me.callParent(arguments)},regionMeta:{center:{splitterDelta:0},north:{splitterDelta:1},south:{splitterDelta:-1},west:{splitterDelta:1},east:{splitterDelta:-1}},regionFlags:{center:{isCenter:true,isHorz:false,isVert:false},north:{isCenter:false,isHorz:false,isVert:true,collapseDirection:"top"},south:{isCenter:false,isHorz:false,isVert:true,collapseDirection:"bottom"},west:{isCenter:false,isHorz:true,isVert:false,collapseDirection:"left"},east:{isCenter:false,isHorz:true,isVert:false,collapseDirection:"right"}},setupSplitterNeighbors:function(items){var edgeRegions={},length=items.length,touchedRegions=this.touchedRegions,i,j,center,count,edge,comp,region,splitter,touched;for(i=0;i<length;++i){comp=items[i].target;region=comp.region;if(comp.isCenter){center=comp}else if(region){touched=touchedRegions[region];for(j=0,count=touched.length;j<count;++j){edge=edgeRegions[touched[j]];if(edge){edge.neighbors.push(comp)}}if(comp.placeholderFor){splitter=comp.placeholderFor.splitter}else{splitter=comp.splitter}if(splitter){splitter.neighbors=[]}edgeRegions[region]=splitter}}if(center){touched=touchedRegions.center;for(j=0,count=touched.length;j<count;++j){edge=edgeRegions[touched[j]];if(edge){edge.neighbors.push(center)}}}},touchedRegions:{center:["north","south","east","west"],north:["north","east","west"],south:["south","east","west"],east:["east","north","south"],west:["west","north","south"]},sizePolicies:{vert:{readsWidth:0,readsHeight:1,setsWidth:1,setsHeight:0},horz:{readsWidth:1,readsHeight:0,setsWidth:0,setsHeight:1},flexAll:{readsWidth:0,readsHeight:0,setsWidth:1,setsHeight:1}},getItemSizePolicy:function(item){var me=this,policies=this.sizePolicies,collapseTarget,size,policy,placeholderFor;if(item.isCenter){placeholderFor=item.placeholderFor;if(placeholderFor){if(placeholderFor.collapsedVertical()){return policies.vert}return policies.horz}if(item.collapsed){if(item.collapsedVertical()){return policies.vert}return policies.horz}return policies.flexAll}collapseTarget=item.collapseTarget;if(collapseTarget){return collapseTarget.isVert?policies.vert:policies.horz}if(item.region){if(item.isVert){size=item.height;policy=policies.vert}else{size=item.width;policy=policies.horz}if(item.flex||typeof size=="string"&&me.percentageRe.test(size)){return policies.flexAll}return policy}return me.autoSizePolicy}},function(){var methods={addUnflexed:function(px){this.flexSpace=Math.max(this.flexSpace-px,0)}},props=this.prototype.axisProps;Ext.apply(props.horz,methods);Ext.apply(props.vert,methods)});