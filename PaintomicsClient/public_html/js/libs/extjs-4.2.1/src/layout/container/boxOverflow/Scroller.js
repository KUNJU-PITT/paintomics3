Ext.define("Ext.layout.container.boxOverflow.Scroller",{extend:"Ext.layout.container.boxOverflow.None",requires:["Ext.util.ClickRepeater","Ext.Element"],alternateClassName:"Ext.layout.boxOverflow.Scroller",mixins:{observable:"Ext.util.Observable"},animateScroll:false,scrollIncrement:20,wheelIncrement:10,scrollRepeatInterval:60,scrollDuration:400,scrollerCls:Ext.baseCSSPrefix+"box-scroller",constructor:function(layout,config){var me=this;me.layout=layout;Ext.apply(me,config||{});me.mixins.observable.constructor.call(me);me.addEvents("scroll");me.scrollPosition=0;me.scrollSize=0},getPrefixConfig:function(){var me=this,layout=me.layout,owner=layout.owner,cls;me.initCSSClasses();cls=Ext.layout.container.Box.prototype.innerCls+" "+me.beforeCtCls;if(owner.plain){cls+=" "+me.scrollerCls+"-plain"}return{cls:cls,cn:{id:owner.id+layout.names.beforeScrollerSuffix,cls:me.scrollerCls+" "+me.beforeScrollerCls,style:"display:none"}}},getSuffixConfig:function(){var me=this,layout=me.layout,owner=layout.owner,cls=Ext.layout.container.Box.prototype.innerCls+" "+me.afterCtCls;if(owner.plain){cls+=" "+me.scrollerCls+"-plain"}return{cls:cls,cn:{id:owner.id+layout.names.afterScrollerSuffix,cls:me.scrollerCls+" "+me.afterScrollerCls,style:"display:none"}}},getOverflowCls:function(){return Ext.baseCSSPrefix+this.layout.direction+"-box-overflow-body"},initCSSClasses:function(){var me=this,prefix=Ext.baseCSSPrefix,layout=me.layout,names=layout.names,beforeXName=names.beforeX,afterXName=names.afterX,type=me.getOwnerType(layout.owner);me.beforeCtCls=me.beforeCtCls||prefix+"box-scroller-"+beforeXName;me.afterCtCls=me.afterCtCls||prefix+"box-scroller-"+afterXName;me.beforeScrollerCls=me.beforeScrollerCls||prefix+type+"-scroll-"+beforeXName;me.afterScrollerCls=me.afterScrollerCls||prefix+type+"-scroll-"+afterXName},beginLayout:function(ownerContext){var layout=this.layout;ownerContext.innerCtScrollPos=this.getScrollPosition();this.callParent(arguments)},completeLayout:function(ownerContext){var me=this,plan=ownerContext.state.boxPlan,names=me.layout.names,last;if(plan&&plan.tooNarrow){last=ownerContext.childItems[ownerContext.childItems.length-1];me.scrollSize=last.props[names.x]+last.props[names.width];me.updateScrollButtons()}this.callParent(arguments)},finishedLayout:function(ownerContext){var me=this,layout=me.layout,scrollPos=Math.min(me.getMaxScrollPosition(),ownerContext.innerCtScrollPos);layout.innerCt[layout.names.setScrollLeft](scrollPos)},handleOverflow:function(ownerContext){var me=this,methodName=me.layout.names.getWidth;me.showScrollers();return{reservedSpace:me.beforeCt[methodName]()+me.afterCt[methodName]()}},captureChildElements:function(){var me=this,el=me.layout.owner.el,before,after,hoverCls,pressedSuffix,pressedCls,hoverSuffix;if(!me.beforeCt){hoverSuffix="-hover";pressedSuffix="-pressed";hoverCls=me.scrollerCls+hoverSuffix;pressedCls=me.scrollerCls+pressedSuffix;before=me.beforeScroller=el.getById(me.layout.owner.id+"-before-scroller");after=me.afterScroller=el.getById(me.layout.owner.id+"-after-scroller");me.beforeCt=before.up("");me.afterCt=after.up("");me.createWheelListener();before.addClsOnOver(hoverCls);before.addClsOnOver(me.beforeScrollerCls+hoverSuffix);before.addClsOnClick(pressedCls);before.addClsOnClick(me.beforeScrollerCls+pressedSuffix);after.addClsOnOver(hoverCls);after.addClsOnOver(me.afterScrollerCls+hoverSuffix);after.addClsOnClick(pressedCls);after.addClsOnClick(me.afterScrollerCls+pressedSuffix);before.setVisibilityMode(Ext.Element.DISPLAY);after.setVisibilityMode(Ext.Element.DISPLAY);me.beforeRepeater=new Ext.util.ClickRepeater(before,{interval:me.scrollRepeatInterval,handler:me.scrollLeft,scope:me});me.afterRepeater=new Ext.util.ClickRepeater(after,{interval:me.scrollRepeatInterval,handler:me.scrollRight,scope:me})}},createWheelListener:function(){var me=this;me.layout.innerCt.on({mousewheel:function(e){me.scrollBy(me.getWheelDelta(e)*me.wheelIncrement*-1,false)},stopEvent:true})},getWheelDelta:function(e){return e.getWheelDelta()},clearOverflow:function(){this.hideScrollers()},showScrollers:function(){var me=this;me.captureChildElements();me.beforeScroller.show();me.afterScroller.show();me.layout.owner.addClsWithUI(me.layout.direction==="vertical"?"vertical-scroller":"scroller")},hideScrollers:function(){var me=this;if(me.beforeScroller!==undefined){me.beforeScroller.hide();me.afterScroller.hide();me.layout.owner.removeClsWithUI(me.layout.direction==="vertical"?"vertical-scroller":"scroller")}},destroy:function(){var me=this;Ext.destroy(me.beforeRepeater,me.afterRepeater,me.beforeScroller,me.afterScroller,me.beforeCt,me.afterCt)},scrollBy:function(delta,animate){this.scrollTo(this.getScrollPosition()+delta,animate)},getScrollAnim:function(){return{duration:this.scrollDuration,callback:this.updateScrollButtons,scope:this}},updateScrollButtons:function(){var me=this,beforeMeth,afterMeth,beforeCls,afterCls,disabledCls,suffix="-disabled";if(me.beforeScroller==null||me.afterScroller==null){return}beforeMeth=me.atExtremeBefore()?"addCls":"removeCls";afterMeth=me.atExtremeAfter()?"addCls":"removeCls";disabledCls=me.scrollerCls+suffix;beforeCls=[disabledCls,me.beforeScrollerCls+suffix];afterCls=[disabledCls,me.afterScrollerCls+suffix];me.beforeScroller[beforeMeth](beforeCls);me.afterScroller[afterMeth](afterCls);me.scrolling=false},scrollLeft:function(){this.scrollBy(-this.scrollIncrement,false)},scrollRight:function(){this.scrollBy(this.scrollIncrement,false)},getScrollPosition:function(){var me=this,layout=me.layout,result;if(isNaN(me.scrollPosition)){result=layout.innerCt[layout.names.getScrollLeft]()}else{result=me.scrollPosition}return result},getMaxScrollPosition:function(){var me=this,layout=me.layout,maxScrollPos=me.scrollSize-layout.innerCt[layout.names.getWidth]();return maxScrollPos<0?0:maxScrollPos},atExtremeBefore:function(){return!this.getScrollPosition()},atExtremeAfter:function(){return this.getScrollPosition()>=this.getMaxScrollPosition()},scrollTo:function(position,animate){var me=this,layout=me.layout,names=layout.names,oldPosition=me.getScrollPosition(),newPosition=Ext.Number.constrain(position,0,me.getMaxScrollPosition());if(newPosition!=oldPosition&&!me.scrolling){me.scrollPosition=NaN;if(animate===undefined){animate=me.animateScroll}layout.innerCt[names.scrollTo](names.beforeScrollX,newPosition,animate?me.getScrollAnim():false);if(animate){me.scrolling=true}else{me.updateScrollButtons()}me.fireEvent("scroll",me,newPosition,animate?me.getScrollAnim():false)}},scrollToItem:function(item,animate){var me=this,layout=me.layout,owner=layout.owner,names=layout.names,visibility,box,newPos;item=me.getItem(item);if(item!==undefined){if(item==owner.items.first()){newPos=0}else if(item===owner.items.last()){newPos=me.getMaxScrollPosition()}else{visibility=me.getItemVisibility(item);if(!visibility.fullyVisible){box=item.getBox(false,true);newPos=box[names.x];if(visibility.hiddenEnd){newPos-=me.layout.innerCt[names.getWidth]()-box[names.width]}}}if(newPos!==undefined){me.scrollTo(newPos,animate)}}},getItemVisibility:function(item){var me=this,box=me.getItem(item).getBox(true,true),layout=me.layout,names=layout.names,itemStart=box[names.x],itemEnd=itemStart+box[names.width],scrollStart=me.getScrollPosition(),scrollEnd=scrollStart+layout.innerCt[names.getWidth]();return{hiddenStart:itemStart<scrollStart,hiddenEnd:itemEnd>scrollEnd,fullyVisible:itemStart>scrollStart&&itemEnd<scrollEnd}}});