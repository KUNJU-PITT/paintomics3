Ext.define("Ext.direct.PollingProvider",{extend:"Ext.direct.JsonProvider",alias:"direct.pollingprovider",requires:["Ext.Ajax","Ext.util.DelayedTask"],uses:["Ext.direct.ExceptionEvent","Ext.direct.Manager"],interval:3e3,constructor:function(config){var me=this;me.callParent(arguments);me.addEvents("beforepoll","poll")},isConnected:function(){return!!this.pollTask},connect:function(){var me=this,url=me.url;if(url&&!me.pollTask){me.pollTask=Ext.TaskManager.start({run:me.runPoll,interval:me.interval,scope:me});me.fireEvent("connect",me)}else if(!url){Ext.Error.raise("Error initializing PollingProvider, no url configured.")}},disconnect:function(){var me=this;if(me.pollTask){Ext.TaskManager.stop(me.pollTask);delete me.pollTask;me.fireEvent("disconnect",me)}},runPoll:function(){var me=this,url=me.url;if(me.fireEvent("beforepoll",me)!==false){if(Ext.isFunction(url)){url(me.baseParams)}else{Ext.Ajax.request({url:url,callback:me.onData,scope:me,params:me.baseParams})}me.fireEvent("poll",me)}},onData:function(opt,success,response){var me=this,i,len,events;if(success){events=me.createEvents(response);for(i=0,len=events.length;i<len;++i){me.fireEvent("data",me,events[i])}}else{events=new Ext.direct.ExceptionEvent({data:null,code:Ext.direct.Manager.exceptions.TRANSPORT,message:"Unable to connect to the server.",xhr:response});me.fireEvent("data",me,events)}}});