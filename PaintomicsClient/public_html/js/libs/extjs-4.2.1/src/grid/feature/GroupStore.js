Ext.define("Ext.grid.feature.GroupStore",{extend:"Ext.util.Observable",isStore:true,constructor:function(groupingFeature,store){var me=this;me.superclass.constructor.apply(me,arguments);me.groupingFeature=groupingFeature;me.bindStore(store);me.processStore(store);me.view.dataSource=me},bindStore:function(store){var me=this;if(me.store){Ext.destroy(me.storeListeners);me.store=null}if(store){me.storeListeners=store.on({bulkremove:me.onBulkRemove,add:me.onAdd,update:me.onUpdate,refresh:me.onRefresh,clear:me.onClear,scope:me,destroyable:true});me.store=store}},processStore:function(store){var me=this,groups=store.getGroups(),groupCount=groups.length,i,group,groupPlaceholder,data=me.data,oldGroupCache=me.groupingFeature.groupCache,groupCache=me.groupingFeature.clearGroupCache(),collapseAll=me.groupingFeature.startCollapsed;if(data){data.clear()}else{data=me.data=new Ext.util.MixedCollection(false,Ext.data.Store.recordIdFn)}if(store.getCount()){me.groupingFeature.startCollapsed=false;for(i=0;i<groupCount;i++){group=groups[i];groupCache[group.name]=group;group.isCollapsed=collapseAll||oldGroupCache[group.name]&&oldGroupCache[group.name].isCollapsed;if(group.isCollapsed){group.placeholder=groupPlaceholder=new store.model(null,"group-"+group.name+"-placeholder");groupPlaceholder.set(me.getGroupField(),group.name);groupPlaceholder.rows=groupPlaceholder.children=group.children;groupPlaceholder.isCollapsedPlaceholder=true;data.add(groupPlaceholder)}else{data.insert(me.data.length,group.children)}}}},isCollapsed:function(name){return this.groupingFeature.groupCache[name].isCollapsed},isInCollapsedGroup:function(record){var groupData;if(this.store.isGrouped()&&(groupData=this.groupingFeature.groupCache[record.get(this.getGroupField())])){return groupData.isCollapsed||false}return false},getCount:function(){return this.data.getCount()},getTotalCount:function(){return this.data.getCount()},rangeCached:function(start,end){return end<this.getCount()},getRange:function(start,end,options){var result=this.data.getRange(start,end);if(options&&options.callback){options.callback.call(options.scope||this,result,start,end,options)}return result},getAt:function(index){return this.getRange(index,index)[0]},getById:function(id){return this.store.getById(id)},expandGroup:function(group){var me=this,startIdx;if(typeof group==="string"){group=me.groupingFeature.groupCache[group]}if(group&&group.children.length&&(startIdx=me.indexOf(group.children[0],true,true))!==-1){group.isCollapsed=false;me.isExpandingOrCollapsing=1;me.data.removeAt(startIdx);me.fireEvent("bulkremove",me,[me.getGroupPlaceholder(group)],[startIdx]);me.data.insert(startIdx,group.children);me.fireEvent("add",me,group.children,startIdx);me.fireEvent("groupexpand",me,group);me.isExpandingOrCollapsing=0}},collapseGroup:function(group){var me=this,startIdx,placeholder,i,j,len,removeIndices;if(typeof group==="string"){group=me.groupingFeature.groupCache[group]}if(group&&(len=group.children.length)&&(startIdx=me.indexOf(group.children[0],true))!==-1){group.isCollapsed=true;me.isExpandingOrCollapsing=2;me.data.removeRange(startIdx,len);removeIndices=new Array(len);for(i=0,j=startIdx;i<len;i++,j++){removeIndices[i]=j}me.fireEvent("bulkremove",me,group.children,removeIndices);me.data.insert(startIdx,placeholder=me.getGroupPlaceholder(group));me.fireEvent("add",me,[placeholder],startIdx);me.fireEvent("groupcollapse",me,group);me.isExpandingOrCollapsing=0}},getGroupPlaceholder:function(group){if(!group.placeholder){var groupPlaceholder=group.placeholder=new this.store.model(null,"group-"+group.name+"-placeholder");groupPlaceholder.set(this.getGroupField(),group.name);groupPlaceholder.rows=groupPlaceholder.children=group.children;groupPlaceholder.isCollapsedPlaceholder=true}return group.placeholder},indexOf:function(record,viewOnly,includeCollapsed){var me=this,groups,groupCount,i,group,groupIndex,result=0;if(record&&(includeCollapsed||!me.isInCollapsedGroup(record))){groups=me.store.getGroups();groupCount=groups.length;for(i=0;i<groupCount;i++){group=groups[i];if(group.name===this.store.getGroupString(record)){groupIndex=Ext.Array.indexOf(group.children,record);return result+groupIndex}result+=viewOnly&&me.isCollapsed(group.name)?1:group.children.length}}return-1},indexOfTotal:function(record){var index=record.index;if(index||index===0){return index}return this.istore.ndexOf(record)},onRefresh:function(store){this.processStore(this.store);this.fireEvent("refresh",this)},onBulkRemove:function(store,records,indices){this.processStore(this.store);this.fireEvent("refresh",this)},onClear:function(store,records,startIndex){this.processStore(this.store);this.fireEvent("clear",this)},onAdd:function(store,records,startIndex){this.processStore(this.store);this.fireEvent("refresh",this)},onUpdate:function(store,record,operation,modifiedFieldNames){var me=this,groupInfo=me.groupingFeature.getRecordGroup(record),firstRec,lastRec;if(store.isGrouped()){if(modifiedFieldNames&&Ext.Array.contains(modifiedFieldNames,me.groupingFeature.getGroupField())){return me.onRefresh(me.store)}if(groupInfo.isCollapsed){me.fireEvent("update",me,groupInfo.placeholder)}else{Ext.suspendLayouts();me.fireEvent("update",me,record,operation,modifiedFieldNames);firstRec=groupInfo.children[0];lastRec=groupInfo.children[groupInfo.children.length-1];if(firstRec!==record){me.fireEvent("update",me,firstRec,"edit")}if(lastRec!==record&&lastRec!==firstRec){me.fireEvent("update",me,lastRec,"edit")}Ext.resumeLayouts(true)}}else{me.fireEvent("update",me,record,operation,modifiedFieldNames)}}});