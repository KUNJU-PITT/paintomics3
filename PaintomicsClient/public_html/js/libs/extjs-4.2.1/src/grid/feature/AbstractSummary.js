Ext.define("Ext.grid.feature.AbstractSummary",{extend:"Ext.grid.feature.Feature",alias:"feature.abstractsummary",summaryRowCls:Ext.baseCSSPrefix+"grid-row-summary",summaryTableCls:Ext.plainTableCls+" "+Ext.baseCSSPrefix+"grid-table",summaryRowSelector:"."+Ext.baseCSSPrefix+"grid-row-summary",summaryRowTpl:{before:function(values,out){if(values.record.isSummary){this.summaryFeature.outputSummaryRecord(values.record,values,out);return false}},priority:1e3},showSummaryRow:true,init:function(){var me=this;me.view.summaryFeature=me;me.rowTpl=me.view.self.prototype.rowTpl;me.view.addRowTpl(me.summaryRowTpl).summaryFeature=me},toggleSummaryRow:function(visible){this.showSummaryRow=!!visible},outputSummaryRecord:function(summaryRecord,contextValues,out){var view=contextValues.view,savedRowValues=view.rowValues,columns=contextValues.columns||view.headerCt.getVisibleGridColumns(),colCount=columns.length,i,column,values={view:view,record:summaryRecord,rowStyle:"",rowClasses:[this.summaryRowCls],itemClasses:[],recordIndex:-1,rowId:view.getRowId(summaryRecord),columns:columns};for(i=0;i<colCount;i++){column=columns[i];column.savedRenderer=column.renderer;if(column.summaryRenderer){column.renderer=column.summaryRenderer}else if(!column.summaryType){column.renderer=Ext.emptyFn}if(!column.dataIndex){column.dataIndex=column.id}}view.rowValues=values;view.self.prototype.rowTpl.applyOut(values,out);view.rowValues=savedRowValues;for(i=0;i<colCount;i++){column=columns[i];column.renderer=column.savedRenderer;column.savedRenderer=null}},getSummary:function(store,type,field,group){var records=group.records;if(type){if(Ext.isFunction(type)){return store.getAggregate(type,null,records,[field])}switch(type){case"count":return records.length;case"min":return store.getMin(records,field);case"max":return store.getMax(records,field);case"sum":return store.getSum(records,field);case"average":return store.getAverage(records,field);default:return""}}},generateSummaryData:function(){var me=this,store=me.view.store,groups=store.groups.items,reader=store.proxy.reader,len=groups.length,groupField=me.getGroupField(),data={},lockingPartner=me.lockingPartner,i,group,record,root,summaryRows,hasRemote,convertedSummaryRow,remoteData;if(me.remoteRoot&&reader.rawData){hasRemote=true;remoteData={};root=reader.root;reader.root=me.remoteRoot;reader.buildExtractors(true);summaryRows=reader.getRoot(reader.rawData)||[];len=summaryRows.length;if(!reader.convertRecordData){reader.buildExtractors()}for(i=0;i<len;++i){convertedSummaryRow={};reader.convertRecordData(convertedSummaryRow,summaryRows[i]);remoteData[convertedSummaryRow[groupField]]=convertedSummaryRow}reader.root=root;reader.buildExtractors(true)}for(i=0;i<len;++i){group=groups[i];if(hasRemote||group.isDirty()||!group.hasAggregate()){if(hasRemote){record=me.populateRemoteRecord(group,remoteData)}else{record=me.populateRecord(group)}if(!lockingPartner||me.view.ownerCt===me.view.ownerCt.ownerLockable.normalGrid){group.commit()}}else{record=group.getAggregateRecord()}data[group.key]=record}return data},populateRemoteRecord:function(group,data){var record=group.getAggregateRecord(true),groupData=data[group.key],field;record.beginEdit();for(field in groupData){if(groupData.hasOwnProperty(field)){if(field!==record.idProperty){record.set(field,groupData[field])}}}record.endEdit(true);record.commit(true);return record},populateRecord:function(group){var me=this,view=me.grid.ownerLockable?me.grid.ownerLockable.view:me.view,store=me.view.store,record=group.getAggregateRecord(),columns=view.headerCt.getGridColumns(),len=columns.length,i,column,fieldName;record.beginEdit();for(i=0;i<len;++i){column=columns[i];fieldName=column.dataIndex||column.id;record.set(fieldName,me.getSummary(store,column.summaryType,fieldName,group))}record.endEdit(true);record.commit();return record}});