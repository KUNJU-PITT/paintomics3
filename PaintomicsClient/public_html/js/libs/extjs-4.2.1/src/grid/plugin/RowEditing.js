Ext.define("Ext.grid.plugin.RowEditing",{extend:"Ext.grid.plugin.Editing",alias:"plugin.rowediting",requires:["Ext.grid.RowEditor"],lockableScope:"top",editStyle:"row",autoCancel:true,errorSummary:true,constructor:function(){var me=this;me.callParent(arguments);if(!me.clicksToMoveEditor){me.clicksToMoveEditor=me.clicksToEdit}me.autoCancel=!!me.autoCancel},destroy:function(){Ext.destroy(this.editor);this.callParent(arguments)},startEdit:function(record,columnHeader){var me=this,editor=me.getEditor(),context;if(editor.beforeEdit()!==false){context=me.callParent(arguments);if(context){me.context=context;if(me.lockingPartner){me.lockingPartner.cancelEdit()}editor.startEdit(context.record,context.column,context);return true}}return false},cancelEdit:function(){var me=this;if(me.editing){me.getEditor().cancelEdit();me.callParent(arguments);return}return true},completeEdit:function(){var me=this;if(me.editing&&me.validateEdit()){me.editing=false;me.fireEvent("edit",me,me.context)}},validateEdit:function(){var me=this,editor=me.editor,context=me.context,record=context.record,newValues={},originalValues={},editors=editor.query(">[isFormField]"),e,eLen=editors.length,name,item;for(e=0;e<eLen;e++){item=editors[e];name=item.name;newValues[name]=item.getValue();originalValues[name]=record.get(name)}Ext.apply(context,{newValues:newValues,originalValues:originalValues});return me.callParent(arguments)&&me.getEditor().completeEdit()},getEditor:function(){var me=this;if(!me.editor){me.editor=me.initEditor()}return me.editor},initEditor:function(){return new Ext.grid.RowEditor(this.initEditorConfig())},initEditorConfig:function(){var me=this,grid=me.grid,view=me.view,headerCt=grid.headerCt,btns=["saveBtnText","cancelBtnText","errorsText","dirtyText"],b,bLen=btns.length,cfg={autoCancel:me.autoCancel,errorSummary:me.errorSummary,fields:headerCt.getGridColumns(),hidden:true,view:view,editingPlugin:me},item;for(b=0;b<bLen;b++){item=btns[b];if(Ext.isDefined(me[item])){cfg[item]=me[item]}}return cfg},initEditTriggers:function(){var me=this,view=me.view,moveEditorEvent=me.clicksToMoveEditor===1?"click":"dblclick";me.callParent(arguments);if(me.clicksToMoveEditor!==me.clicksToEdit){me.mon(view,"cell"+moveEditorEvent,me.moveEditorByClick,me)}view.on({render:function(){me.mon(me.grid.headerCt,{scope:me,columnresize:me.onColumnResize,columnhide:me.onColumnHide,columnshow:me.onColumnShow})},single:true})},startEditByClick:function(){var me=this;if(!me.editing||me.clicksToMoveEditor===me.clicksToEdit){me.callParent(arguments)}},moveEditorByClick:function(){var me=this;if(me.editing){me.superclass.onCellClick.apply(me,arguments)}},onColumnAdd:function(ct,column){if(column.isHeader){var me=this,editor;me.initFieldAccessors(column);editor=me.editor;if(editor&&editor.onColumnAdd){editor.onColumnAdd(column)}}},onColumnRemove:function(ct,column){if(column.isHeader){var me=this,editor=me.getEditor();if(editor&&editor.onColumnRemove){editor.onColumnRemove(ct,column)}me.removeFieldAccessors(column)}},onColumnResize:function(ct,column,width){if(column.isHeader){var me=this,editor=me.getEditor();if(editor&&editor.onColumnResize){editor.onColumnResize(column,width)}}},onColumnHide:function(ct,column){var me=this,editor=me.getEditor();if(editor&&editor.onColumnHide){editor.onColumnHide(column)}},onColumnShow:function(ct,column){var me=this,editor=me.getEditor();if(editor&&editor.onColumnShow){editor.onColumnShow(column)}},onColumnMove:function(ct,column,fromIdx,toIdx){var me=this,editor=me.getEditor();me.initFieldAccessors(column);if(editor&&editor.onColumnMove){editor.onColumnMove(column,fromIdx,toIdx)}},setColumnField:function(column,field){var me=this,editor=me.getEditor();editor.removeField(column);me.callParent(arguments);me.getEditor().setField(column)}});