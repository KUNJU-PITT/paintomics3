Ext.define("Ext.grid.RowEditor",{extend:"Ext.form.Panel",alias:"widget.roweditor",requires:["Ext.tip.ToolTip","Ext.util.HashMap","Ext.util.KeyNav","Ext.grid.RowEditorButtons"],saveBtnText:"Update",cancelBtnText:"Cancel",errorsText:"Errors",dirtyText:"You need to commit or cancel your changes",lastScrollLeft:0,lastScrollTop:0,border:false,buttonUI:"default",hideMode:"offsets",initComponent:function(){var me=this,grid=me.editingPlugin.grid,Container=Ext.container.Container;me.cls=Ext.baseCSSPrefix+"grid-editor "+Ext.baseCSSPrefix+"grid-row-editor";me.layout={type:"hbox",align:"middle"};me.lockable=grid.lockable;if(me.lockable){me.items=[me.lockedColumnContainer=new Container({id:grid.id+"-locked-editor-cells",layout:{type:"hbox",align:"middle"},margin:"0 1 0 0"}),me.normalColumnContainer=new Container({flex:1,id:grid.id+"-normal-editor-cells",layout:{type:"hbox",align:"middle"}})]}else{me.lockedColumnContainer=me.normalColumnContainer=me}me.callParent(arguments);if(me.fields){me.addFieldsForColumn(me.fields,true);me.insertColumnEditor(me.fields);delete me.fields}me.mon(me.hierarchyEventSource,{scope:me,show:me.repositionIfVisible});me.getForm().trackResetOnLoad=true},onGridResize:function(){var me=this,clientWidth=me.getClientWidth(),grid=me.editingPlugin.grid,gridBody=grid.body,btns=me.getFloatingButtons();me.setLocalX(gridBody.getOffsetsTo(grid)[0]+gridBody.getBorderWidth("l")-grid.el.getBorderWidth("l"));me.setWidth(clientWidth);btns.setLocalX((clientWidth-btns.getWidth())/2)},onFieldRender:function(field){var me=this,column=field.column;if(column.isVisible()){me.syncFieldWidth(column)}else if(!column.rendered){me.view.headerCt.on({afterlayout:Ext.Function.bind(me.syncFieldWidth,me,[column]),single:true})}},syncFieldWidth:function(column){var field=column.getEditor(),width;field._marginWidth=field._marginWidth||field.el.getMargin("lr");width=column.getWidth()-field._marginWidth;field.setWidth(width);if(field.xtype==="displayfield"){field.inputWidth=width}},onFieldChange:function(){var me=this,form=me.getForm(),valid=form.isValid();if(me.errorSummary&&me.isVisible()){me[valid?"hideToolTip":"showToolTip"]()}me.updateButton(valid);me.isValid=valid},updateButton:function(valid){var buttons=this.floatingButtons;if(buttons){buttons.child("#update").setDisabled(!valid)}else{this.updateButtonDisabled=!valid}},afterRender:function(){var me=this,plugin=me.editingPlugin,grid=plugin.grid,view=grid.lockable?grid.normalGrid.view:grid.view,field;me.callParent(arguments);me.scrollingView=view;me.scrollingViewEl=view.el;view.mon(me.scrollingViewEl,"scroll",me.onViewScroll,me);me.mon(me.el,{click:Ext.emptyFn,stopPropagation:true});me.mon(grid,{resize:me.onGridResize,scope:me});me.el.swallowEvent(["keypress","keydown"]);me.fieldScroller=me.normalColumnContainer.layout.innerCt;me.fieldScroller.dom.style.overflow="hidden";me.fieldScroller.on({scroll:me.onFieldContainerScroll,scope:me});me.keyNav=new Ext.util.KeyNav(me.el,{enter:plugin.completeEdit,esc:plugin.onEscKey,scope:plugin});me.mon(plugin.view,{beforerefresh:me.onBeforeViewRefresh,refresh:me.onViewRefresh,itemremove:me.onViewItemRemove,scope:me});me.preventReposition=true;Ext.Array.each(me.query("[isFormField]"),function(field){if(field.column.isVisible()){me.onColumnShow(field.column)}},me);delete me.preventReposition},onBeforeViewRefresh:function(view){var me=this,viewDom=view.el.dom;if(me.el.dom.parentNode===viewDom){viewDom.removeChild(me.el.dom)}},onViewRefresh:function(view){var me=this,context=me.context,row;if(context&&(row=view.getNode(context.record,true))){context.row=row;me.reposition();if(me.tooltip&&me.tooltip.isVisible()){me.tooltip.setTarget(context.row)}}else{me.editingPlugin.cancelEdit()}},onViewItemRemove:function(record,index){var context=this.context;if(context&&record===context.record){this.editingPlugin.cancelEdit()}},onViewScroll:function(){var me=this,viewEl=me.editingPlugin.view.el,scrollingViewEl=me.scrollingViewEl,scrollTop=scrollingViewEl.dom.scrollTop,scrollLeft=scrollingViewEl.getScrollLeft(),scrollLeftChanged=scrollLeft!==me.lastScrollLeft,scrollTopChanged=scrollTop!==me.lastScrollTop,row;me.lastScrollTop=scrollTop;me.lastScrollLeft=scrollLeft;if(me.isVisible()){row=Ext.getDom(me.context.row.id);if(row&&viewEl.contains(row)){if(scrollTopChanged){me.context.row=row;me.reposition(null,true);if(me.tooltip&&me.tooltip.isVisible()||me.hiddenTip){me.repositionTip()}me.syncEditorClip()}}else{me.setLocalY(-400)}}if(me.rendered&&scrollLeftChanged){me.syncFieldsHorizontalScroll()}},syncFieldsHorizontalScroll:function(){this.fieldScroller.setScrollLeft(this.lastScrollLeft)},onFieldContainerScroll:function(){this.scrollingViewEl.setScrollLeft(this.fieldScroller.getScrollLeft())},onColumnResize:function(column,width){var me=this;if(me.rendered){me.onGridResize();me.onViewScroll();if(!column.isGroupHeader){me.syncFieldWidth(column);me.repositionIfVisible()}}},onColumnHide:function(column){if(!column.isGroupHeader){column.getEditor().hide();this.repositionIfVisible()}},onColumnShow:function(column){var me=this;if(me.rendered&&!column.isGroupHeader){column.getEditor().show();me.syncFieldWidth(column);if(!me.preventReposition){this.repositionIfVisible()}}},onColumnMove:function(column,fromIdx,toIdx){var me=this,i,incr=1,len,field,fieldIdx,fieldContainer=column.isLocked()?me.lockedColumnContainer:me.normalColumnContainer;if(column.isGroupHeader){Ext.suspendLayouts();column=column.getGridColumns();if(toIdx>fromIdx){toIdx--;incr=0}this.addFieldsForColumn(column);for(i=0,len=column.length;i<len;i++,fromIdx+=incr,toIdx+=incr){field=column[i].getEditor();fieldIdx=fieldContainer.items.indexOf(field);if(fieldIdx===-1){fieldContainer.insert(toIdx,field)}else if(fieldIdx!=toIdx){fieldContainer.move(fromIdx,toIdx)}}Ext.resumeLayouts(true)}else{if(toIdx>fromIdx){toIdx--}this.addFieldsForColumn(column);field=column.getEditor();fieldIdx=fieldContainer.items.indexOf(field);if(fieldIdx===-1){fieldContainer.insert(toIdx,field)}else if(fieldIdx!=toIdx){fieldContainer.move(fromIdx,toIdx)}}},onColumnAdd:function(column){if(column.isGroupHeader){column=column.getGridColumns()}this.addFieldsForColumn(column);this.insertColumnEditor(column);this.preventReposition=false},insertColumnEditor:function(column){var me=this,fieldContainer,len,i;if(Ext.isArray(column)){for(i=0,len=column.length;i<len;i++){me.insertColumnEditor(column[i])}return}if(!column.getEditor){return}fieldContainer=column.isLocked()?me.lockedColumnContainer:me.normalColumnContainer;fieldContainer.insert(column.getVisibleIndex(),column.getEditor())},onColumnRemove:function(ct,column){column=column.isGroupHeader?column.getGridColumns():column;this.removeColumnEditor(column)},removeColumnEditor:function(column){var me=this,field,len,i;if(Ext.isArray(column)){for(i=0,len=column.length;i<len;i++){me.removeColumnEditor(column[i])}return}if(column.hasEditor()){field=column.getEditor();if(field&&field.ownerCt){field.ownerCt.remove(field,false)}}},onColumnReplace:function(map,fieldId,column,oldColumn){this.onColumnRemove(oldColumn.ownerCt,oldColumn)},getFloatingButtons:function(){var me=this,btns=me.floatingButtons;if(!btns){me.floatingButtons=btns=new Ext.grid.RowEditorButtons({rowEditor:me})}return btns},repositionIfVisible:function(c){var me=this,view=me.view;if(c&&(c==me||!c.el.isAncestor(view.el))){return}if(me.isVisible()&&view.isVisible(true)){me.reposition()}},getRefOwner:function(){return this.editingPlugin.grid},getRefItems:function(){var me=this,result;if(me.lockable){result=me.lockedColumnContainer.getRefItems();result.push.apply(result,me.normalColumnContainer.getRefItems())}else{result=me.callParent()}result.push.apply(result,me.getFloatingButtons().getRefItems());return result},reposition:function(animateConfig,fromScrollHandler){var me=this,context=me.context,row=context&&Ext.get(context.row),yOffset=0,rowTop,localY,deltaY,afterPosition;if(row&&Ext.isElement(row.dom)){deltaY=me.syncButtonPosition(me.getScrollDelta());if(!me.editingPlugin.grid.rowLines){yOffset=-parseInt(row.first().getStyle("border-bottom-width"))}rowTop=me.calculateLocalRowTop(row);localY=me.calculateEditorTop(rowTop)+yOffset;if(!fromScrollHandler){afterPosition=function(){if(deltaY){me.scrollingViewEl.scrollBy(0,deltaY,true)}me.focusContextCell()}}me.syncEditorClip();if(animateConfig){me.animate(Ext.applyIf({to:{top:localY},duration:animateConfig.duration||125,callback:afterPosition},animateConfig))}else{me.setLocalY(localY);if(afterPosition){afterPosition()}}}},getScrollDelta:function(){var me=this,scrollingViewDom=me.scrollingViewEl.dom,context=me.context,body=me.body,deltaY=0;if(context){deltaY=Ext.fly(context.row).getOffsetsTo(scrollingViewDom)[1]-body.getBorderPadding().beforeY;if(deltaY>0){deltaY=Math.max(deltaY+me.getHeight()+me.floatingButtons.getHeight()-scrollingViewDom.clientHeight-body.getBorderWidth("b"),0)}}return deltaY},calculateLocalRowTop:function(row){var grid=this.editingPlugin.grid;return Ext.fly(row).getOffsetsTo(grid)[1]-grid.el.getBorderWidth("t")+this.lastScrollTop},calculateEditorTop:function(rowTop){return rowTop-this.body.getBorderPadding().beforeY-this.lastScrollTop},getClientWidth:function(){var me=this,grid=me.editingPlugin.grid,result;if(me.lockable){result=grid.lockedGrid.getWidth()+grid.normalGrid.view.el.dom.clientWidth-1}else{result=grid.view.el.dom.clientWidth}return result},getEditor:function(fieldInfo){var me=this;if(Ext.isNumber(fieldInfo)){return me.query("[isFormField]")[fieldInfo]}else if(fieldInfo.isHeader&&!fieldInfo.isGroupHeader){return fieldInfo.getEditor()}},addFieldsForColumn:function(column,initial){var me=this,i,length,field;if(Ext.isArray(column)){for(i=0,length=column.length;i<length;i++){me.addFieldsForColumn(column[i],initial)}return}if(column.getEditor){field=column.getEditor(null,{xtype:"displayfield",getModelData:function(){return null}});if(column.align==="right"){field.fieldStyle="text-align:right"}if(column.xtype==="actioncolumn"){field.fieldCls+=" "+Ext.baseCSSPrefix+"form-action-col-field"}if(me.isVisible()&&me.context){if(field.is("displayfield")){me.renderColumnData(field,me.context.record,column)}else{field.suspendEvents();field.setValue(me.context.record.get(column.dataIndex));field.resumeEvents()}}if(column.hidden){me.onColumnHide(column)}else if(column.rendered&&!initial){me.onColumnShow(column)}}},loadRecord:function(record){var me=this,form=me.getForm(),fields=form.getFields(),items=fields.items,length=items.length,i,displayFields,isValid;for(i=0;i<length;i++){items[i].suspendEvents()}form.loadRecord(record);for(i=0;i<length;i++){items[i].resumeEvents()}isValid=form.isValid();if(me.errorSummary){if(isValid){me.hideToolTip()}else{me.showToolTip()}}me.updateButton(isValid);displayFields=me.query(">displayfield");length=displayFields.length;for(i=0;i<length;i++){me.renderColumnData(displayFields[i],record)}},renderColumnData:function(field,record,activeColumn){var me=this,grid=me.editingPlugin.grid,headerCt=grid.headerCt,view=me.scrollingView,store=view.dataSource,column=activeColumn||field.column,value=record.get(column.dataIndex),renderer=column.editRenderer||column.renderer,metaData,rowIdx,colIdx;if(renderer){metaData={tdCls:"",style:""};rowIdx=store.indexOf(record);colIdx=headerCt.getHeaderIndex(column);value=renderer.call(column.scope||headerCt.ownerCt,value,metaData,record,rowIdx,colIdx,store,view)}field.setRawValue(value);field.resetOriginalValue()},beforeEdit:function(){var me=this,scrollDelta;if(me.isVisible()&&me.errorSummary&&!me.autoCancel&&me.isDirty()){scrollDelta=me.getScrollDelta();if(scrollDelta){me.scrollingViewEl.scrollBy(0,scrollDelta,true)}me.showToolTip();return false}},startEdit:function(record,columnHeader){var me=this,editingPlugin=me.editingPlugin,grid=editingPlugin.grid,context=me.context=editingPlugin.context;if(!me.rendered){me.width=me.getClientWidth();me.render(grid.el,grid.el.dom.firstChild);me.getFloatingButtons().render(me.el);me.onViewScroll()}else{me.syncFieldsHorizontalScroll()}if(me.isVisible()){me.reposition(true)}else{me.show()}me.onGridResize();context.grid.getSelectionModel().select(record);me.loadRecord(record)},syncButtonPosition:function(scrollDelta){var me=this,floatingButtons=me.getFloatingButtons(),scrollingViewElDom=me.scrollingViewEl.dom,overflow=this.getScrollDelta()-(scrollingViewElDom.scrollHeight-scrollingViewElDom.scrollTop-scrollingViewElDom.clientHeight);if(overflow>0){if(!me._buttonsOnTop){floatingButtons.setButtonPosition("top");me._buttonsOnTop=true}scrollDelta=0}else if(me._buttonsOnTop){floatingButtons.setButtonPosition("bottom");me._buttonsOnTop=false}return scrollDelta},syncEditorClip:function(){var me=this,overflow=me.getScrollDelta(),btnHeight;if(overflow){me.isOverflowing=true;btnHeight=me.floatingButtons.getHeight();if(overflow>0){me.clipBottom(Math.max(me.getHeight()-overflow+btnHeight,-btnHeight))}else if(overflow<0){overflow=Math.abs(overflow);me.clipTop(Math.max(overflow,0))}}else if(me.isOverflowing){me.clearClip();me.isOverflowing=false}},focusContextCell:function(){var field=this.getEditor(this.context.column);if(field&&field.focus){field.focus()}},cancelEdit:function(){var me=this,form=me.getForm(),fields=form.getFields(),items=fields.items,length=items.length,i;me.hide();form.clearInvalid();for(i=0;i<length;i++){items[i].suspendEvents()}form.reset();for(i=0;i<length;i++){items[i].resumeEvents()}},completeEdit:function(){var me=this,form=me.getForm();if(!form.isValid()){return false}form.updateRecord(me.context.record);me.hide();return true},onShow:function(){var me=this;me.callParent(arguments);me.reposition()},onHide:function(){var me=this;me.callParent(arguments);if(me.tooltip){me.hideToolTip()}if(me.context){me.context.view.focusRow(me.context.record);me.context=null}},isDirty:function(){var me=this,form=me.getForm();return form.isDirty()},getToolTip:function(){return this.tooltip||(this.tooltip=new Ext.tip.ToolTip({cls:Ext.baseCSSPrefix+"grid-row-editor-errors",title:this.errorsText,autoHide:false,closable:true,closeAction:"disable",anchor:"left",anchorToTarget:false}))},hideToolTip:function(){var me=this,tip=me.getToolTip();if(tip.rendered){tip.disable()}me.hiddenTip=false},showToolTip:function(){var me=this,tip=me.getToolTip();tip.showAt([0,0]);tip.update(me.getErrors());me.repositionTip();tip.enable()},repositionTip:function(){var me=this,tip=me.getToolTip(),context=me.context,row=Ext.get(context.row),viewEl=me.scrollingViewEl,viewHeight=viewEl.dom.clientHeight,viewTop=me.lastScrollTop,viewBottom=viewTop+viewHeight,rowHeight=row.getHeight(),rowTop=row.getOffsetsTo(me.context.view.body)[1],rowBottom=rowTop+rowHeight;if(rowBottom>viewTop&&rowTop<viewBottom){tip.showAt(tip.getAlignToXY(viewEl,"tl-tr",[15,row.getOffsetsTo(viewEl)[1]]));me.hiddenTip=false}else{tip.hide();me.hiddenTip=true}},getErrors:function(){var me=this,errors=[],fields=me.query(">[isFormField]"),length=fields.length,i;for(i=0;i<length;i++){errors=errors.concat(Ext.Array.map(fields[i].getErrors(),me.createErrorListItem))}if(!errors.length&&!me.autoCancel&&me.isDirty()){errors[0]=me.createErrorListItem(me.dirtyText)}return'<ul class="'+Ext.plainListCls+'">'+errors.join("")+"</ul>"},createErrorListItem:function(e){return'<li class="'+Ext.baseCSSPrefix+'grid-row-editor-errors-item">'+e+"</li>"},beforeDestroy:function(){Ext.destroy(this.floatingButtons,this.tooltip);this.callParent()},clipBottom:function(value){this.el.setStyle("clip","rect(-1000px auto "+value+"px auto)")},clipTop:function(value){this.el.setStyle("clip","rect("+value+"px auto 1000px auto)")},clearClip:function(el){this.el.setStyle("clip",Ext.isIE8m||Ext.isIEQuirks?"rect(-1000px auto 1000px auto)":"auto")}});