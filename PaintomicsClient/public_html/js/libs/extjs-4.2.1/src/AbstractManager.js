Ext.define("Ext.AbstractManager",{requires:["Ext.util.HashMap"],typeName:"type",constructor:function(config){Ext.apply(this,config||{});this.all=new Ext.util.HashMap;this.types={}},get:function(id){return this.all.get(id)},register:function(item){var all=this.all,key=all.getKey(item);if(all.containsKey(key)){Ext.Error.raise('Registering duplicate id "'+key+'" with this manager')}this.all.add(item)},unregister:function(item){this.all.remove(item)},registerType:function(type,cls){this.types[type]=cls;cls[this.typeName]=type},isRegistered:function(type){return this.types[type]!==undefined},create:function(config,defaultType){var type=config[this.typeName]||config.type||defaultType,Constructor=this.types[type];if(Constructor===undefined){Ext.Error.raise("The '"+type+"' type has not been registered with this manager")}return new Constructor(config)},onAvailable:function(id,fn,scope){var all=this.all,item,callback;if(all.containsKey(id)){item=all.get(id);fn.call(scope||item,item)}else{callback=function(map,key,item){if(key==id){fn.call(scope||item,item);all.un("add",callback)}};all.on("add",callback)}},each:function(fn,scope){this.all.each(fn,scope||this)},getCount:function(){return this.all.getCount()}});