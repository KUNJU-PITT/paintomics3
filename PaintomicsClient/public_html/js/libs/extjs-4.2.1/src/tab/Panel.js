Ext.define("Ext.tab.Panel",{extend:"Ext.panel.Panel",alias:"widget.tabpanel",alternateClassName:["Ext.TabPanel"],requires:["Ext.layout.container.Card","Ext.tab.Bar"],tabPosition:"top",removePanelHeader:true,plain:false,itemCls:Ext.baseCSSPrefix+"tabpanel-child",minTabWidth:undefined,maxTabWidth:undefined,deferredRender:true,initComponent:function(){var me=this,dockedItems=[].concat(me.dockedItems||[]),activeTab=me.activeTab||(me.activeTab=0),tabPosition=me.tabPosition;me.layout=new Ext.layout.container.Card(Ext.apply({owner:me,deferredRender:me.deferredRender,itemCls:me.itemCls,activeItem:activeTab},me.layout));me.tabBar=new Ext.tab.Bar(Ext.apply({ui:me.ui,dock:me.tabPosition,orientation:tabPosition=="top"||tabPosition=="bottom"?"horizontal":"vertical",plain:me.plain,cardLayout:me.layout,tabPanel:me},me.tabBar));dockedItems.push(me.tabBar);me.dockedItems=dockedItems;me.addEvents("beforetabchange","tabchange");me.callParent(arguments);activeTab=me.activeTab=me.getComponent(activeTab);if(activeTab){me.tabBar.setActiveTab(activeTab.tab,true)}},setActiveTab:function(card){var me=this,previous;card=me.getComponent(card);if(card){previous=me.getActiveTab();if(previous!==card&&me.fireEvent("beforetabchange",me,card,previous)===false){return false}if(!card.isComponent){Ext.suspendLayouts();card=me.add(card);Ext.resumeLayouts()}me.activeTab=card;Ext.suspendLayouts();me.layout.setActiveItem(card);card=me.activeTab=me.layout.getActiveItem();if(card&&card!==previous){me.tabBar.setActiveTab(card.tab);Ext.resumeLayouts(true);if(previous!==card){me.fireEvent("tabchange",me,card,previous)}}else{Ext.resumeLayouts(true)}return card}},getActiveTab:function(){var me=this,result=me.getComponent(me.activeTab);if(result&&me.items.indexOf(result)!=-1){me.activeTab=result}else{me.activeTab=null}return me.activeTab},getTabBar:function(){return this.tabBar},onAdd:function(item,index){var me=this,cfg=item.tabConfig||{},defaultConfig={xtype:"tab",ui:me.tabBar.ui,card:item,disabled:item.disabled,closable:item.closable,hidden:item.hidden&&!item.hiddenByLayout,tooltip:item.tooltip,tabBar:me.tabBar,position:me.tabPosition,closeText:item.closeText};cfg=Ext.applyIf(cfg,defaultConfig);item.tab=me.tabBar.insert(index,cfg);item.on({scope:me,enable:me.onItemEnable,disable:me.onItemDisable,beforeshow:me.onItemBeforeShow,iconchange:me.onItemIconChange,iconclschange:me.onItemIconClsChange,titlechange:me.onItemTitleChange});if(item.isPanel){if(me.removePanelHeader){if(item.rendered){if(item.header){item.header.hide()}}else{item.header=false}}if(item.isPanel&&me.border){item.setBorder(false)}}},onItemEnable:function(item){item.tab.enable()},onItemDisable:function(item){item.tab.disable()},onItemBeforeShow:function(item){if(item!==this.activeTab){this.setActiveTab(item);return false}},onItemIconChange:function(item,newIcon){item.tab.setIcon(newIcon)},onItemIconClsChange:function(item,newIconCls){item.tab.setIconCls(newIconCls)},onItemTitleChange:function(item,newTitle){item.tab.setText(newTitle)},doRemove:function(item,autoDestroy){var me=this,toActivate;if(me.destroying||me.items.getCount()==1){me.activeTab=null}else if((toActivate=me.tabBar.items.indexOf(me.tabBar.findNextActivatable(item.tab)))!==-1){me.setActiveTab(toActivate)}this.callParent(arguments);delete item.tab.card;delete item.tab},onRemove:function(item,destroying){var me=this;item.un({scope:me,enable:me.onItemEnable,disable:me.onItemDisable,beforeshow:me.onItemBeforeShow});if(!me.destroying&&item.tab.ownerCt===me.tabBar){me.tabBar.remove(item.tab)}}});