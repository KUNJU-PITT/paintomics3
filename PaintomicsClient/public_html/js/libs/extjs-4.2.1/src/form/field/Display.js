Ext.define("Ext.form.field.Display",{extend:"Ext.form.field.Base",alias:"widget.displayfield",requires:["Ext.util.Format","Ext.XTemplate"],alternateClassName:["Ext.form.DisplayField","Ext.form.Display"],fieldSubTpl:['<div id="{id}" role="input" ','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls}">{value}</div>',{compiled:true,disableFormats:true}],readOnly:true,fieldCls:Ext.baseCSSPrefix+"form-display-field",fieldBodyCls:Ext.baseCSSPrefix+"form-display-field-body",htmlEncode:false,noWrap:false,validateOnChange:false,initEvents:Ext.emptyFn,submitValue:false,isDirty:function(){return false},isValid:function(){return true},validate:function(){return true},getRawValue:function(){return this.rawValue},setRawValue:function(value){var me=this;value=Ext.value(value,"");me.rawValue=value;if(me.rendered){me.inputEl.dom.innerHTML=me.getDisplayValue();me.updateLayout()}return value},getDisplayValue:function(){var me=this,value=this.getRawValue(),display;if(me.renderer){display=me.renderer.call(me.scope||me,value,me)}else{display=me.htmlEncode?Ext.util.Format.htmlEncode(value):value}return display},getSubTplData:function(){var ret=this.callParent(arguments);ret.value=this.getDisplayValue();return ret}});