Ext.define("Ext.form.field.Text",{extend:"Ext.form.field.Base",alias:"widget.textfield",requires:["Ext.form.field.VTypes","Ext.layout.component.field.Text"],alternateClassName:["Ext.form.TextField","Ext.form.Text"],size:20,growMin:30,growMax:800,growAppend:"W",allowBlank:true,validateBlank:false,allowOnlyWhitespace:true,minLength:0,maxLength:Number.MAX_VALUE,minLengthText:"The minimum length for this field is {0}",maxLengthText:"The maximum length for this field is {0}",blankText:"This field is required",regexText:"",emptyCls:Ext.baseCSSPrefix+"form-empty-field",requiredCls:Ext.baseCSSPrefix+"form-required-field",componentLayout:"textfield",valueContainsPlaceholder:false,initComponent:function(){var me=this;if(me.allowOnlyWhitespace===false){me.allowBlank=false}me.callParent();me.addEvents("autosize","keydown","keyup","keypress");me.addStateEvents("change");me.setGrowSizePolicy()},setGrowSizePolicy:function(){if(this.grow){this.shrinkWrap|=1}},initEvents:function(){var me=this,el=me.inputEl;me.callParent();if(me.selectOnFocus||me.emptyText){me.mon(el,"mousedown",me.onMouseDown,me)}if(me.maskRe||me.vtype&&me.disableKeyFilter!==true&&(me.maskRe=Ext.form.field.VTypes[me.vtype+"Mask"])){me.mon(el,"keypress",me.filterKeys,me)}if(me.enableKeyEvents){me.mon(el,{scope:me,keyup:me.onKeyUp,keydown:me.onKeyDown,keypress:me.onKeyPress})}},isEqual:function(value1,value2){return this.isEqualAsString(value1,value2)},onChange:function(newVal,oldVal){this.callParent(arguments);this.autoSize()},getSubTplData:function(){var me=this,value=me.getRawValue(),isEmpty=me.emptyText&&value.length<1,maxLength=me.maxLength,placeholder;if(me.enforceMaxLength){if(maxLength===Number.MAX_VALUE){maxLength=undefined}}else{maxLength=undefined}if(isEmpty){if(Ext.supports.Placeholder){placeholder=me.emptyText}else{value=me.emptyText;me.valueContainsPlaceholder=true}}return Ext.apply(me.callParent(),{maxLength:maxLength,readOnly:me.readOnly,placeholder:placeholder,value:value,fieldCls:me.fieldCls+(isEmpty&&(placeholder||value)?" "+me.emptyCls:"")+(me.allowBlank?"":" "+me.requiredCls)})},afterRender:function(){this.autoSize();this.callParent()},onMouseDown:function(e){var me=this;if(!me.hasFocus){me.mon(me.inputEl,"mouseup",Ext.emptyFn,me,{single:true,preventDefault:true})}},processRawValue:function(value){var me=this,stripRe=me.stripCharsRe,newValue;if(stripRe){newValue=value.replace(stripRe,"");if(newValue!==value){me.setRawValue(newValue);value=newValue}}return value},onDisable:function(){this.callParent();if(Ext.isIE){this.inputEl.dom.unselectable="on"}},onEnable:function(){this.callParent();if(Ext.isIE){this.inputEl.dom.unselectable=""}},onKeyDown:function(e){this.fireEvent("keydown",this,e)},onKeyUp:function(e){this.fireEvent("keyup",this,e)},onKeyPress:function(e){this.fireEvent("keypress",this,e)},reset:function(){this.callParent();this.applyEmptyText()},applyEmptyText:function(){var me=this,emptyText=me.emptyText,isEmpty;if(me.rendered&&emptyText){isEmpty=me.getRawValue().length<1&&!me.hasFocus;if(Ext.supports.Placeholder){me.inputEl.dom.placeholder=emptyText}else if(isEmpty){me.setRawValue(emptyText);me.valueContainsPlaceholder=true}if(isEmpty){me.inputEl.addCls(me.emptyCls)}me.autoSize()}},afterFirstLayout:function(){this.callParent();if(Ext.isIE&&this.disabled){var el=this.inputEl;if(el){el.dom.unselectable="on"}}},beforeFocus:function(){var me=this,inputEl=me.inputEl,emptyText=me.emptyText,isEmpty;me.callParent(arguments);if(emptyText&&!Ext.supports.Placeholder&&(inputEl.dom.value===me.emptyText&&me.valueContainsPlaceholder)){me.setRawValue("");isEmpty=true;inputEl.removeCls(me.emptyCls);me.valueContainsPlaceholder=false}else if(Ext.supports.Placeholder){me.inputEl.removeCls(me.emptyCls)}if(me.selectOnFocus||isEmpty){if(Ext.isWebKit){if(!me.inputFocusTask){me.inputFocusTask=new Ext.util.DelayedTask(me.focusInput,me)}me.inputFocusTask.delay(1)}else{inputEl.dom.select()}}},focusInput:function(){var input=this.inputEl;if(input){input=input.dom;if(input){input.select()}}},onFocus:function(){var me=this;me.callParent(arguments);if(me.emptyText){me.autoSize()}},postBlur:function(){this.callParent(arguments);this.applyEmptyText()},filterKeys:function(e){if(e.ctrlKey&&!e.altKey){return}var key=e.getKey(),charCode=String.fromCharCode(e.getCharCode());if((Ext.isGecko||Ext.isOpera)&&(e.isNavKeyPress()||key===e.BACKSPACE||key===e.DELETE&&e.button===-1)){return}if(!Ext.isGecko&&!Ext.isOpera&&e.isSpecialKey()&&!charCode){return}if(!this.maskRe.test(charCode)){e.stopEvent()}},getState:function(){return this.addPropertyToState(this.callParent(),"value")},applyState:function(state){this.callParent(arguments);if(state.hasOwnProperty("value")){this.setValue(state.value)}},getRawValue:function(){var me=this,v=me.callParent();if(v===me.emptyText&&me.valueContainsPlaceholder){v=""}return v},setValue:function(value){var me=this,inputEl=me.inputEl;if(inputEl&&me.emptyText&&!Ext.isEmpty(value)){inputEl.removeCls(me.emptyCls);me.valueContainsPlaceholder=false}me.callParent(arguments);me.applyEmptyText();return me},getErrors:function(value){var me=this,errors=me.callParent(arguments),validator=me.validator,vtype=me.vtype,vtypes=Ext.form.field.VTypes,regex=me.regex,format=Ext.String.format,msg,trimmed,isBlank;value=value||me.processRawValue(me.getRawValue());if(Ext.isFunction(validator)){msg=validator.call(me,value);if(msg!==true){errors.push(msg)}}trimmed=me.allowOnlyWhitespace?value:Ext.String.trim(value);if(trimmed.length<1||value===me.emptyText&&me.valueContainsPlaceholder){if(!me.allowBlank){errors.push(me.blankText)}if(!me.validateBlank){return errors}isBlank=true}if(!isBlank&&value.length<me.minLength){errors.push(format(me.minLengthText,me.minLength))}if(value.length>me.maxLength){errors.push(format(me.maxLengthText,me.maxLength))}if(vtype){if(!vtypes[vtype](value,me)){errors.push(me.vtypeText||vtypes[vtype+"Text"])}}if(regex&&!regex.test(value)){errors.push(me.regexText||me.invalidText)}return errors},selectText:function(start,end){var me=this,v=me.getRawValue(),doFocus=true,el=me.inputEl.dom,undef,range;if(v.length>0){start=start===undef?0:start;end=end===undef?v.length:end;if(el.setSelectionRange){el.setSelectionRange(start,end)}else if(el.createTextRange){range=el.createTextRange();range.moveStart("character",start);range.moveEnd("character",end-v.length);range.select()}doFocus=Ext.isGecko||Ext.isOpera}if(doFocus){me.focus()}},autoSize:function(){var me=this;if(me.grow&&me.rendered){me.autoSizing=true;me.updateLayout()}},afterComponentLayout:function(){var me=this,width;me.callParent(arguments);if(me.autoSizing){width=me.inputEl.getWidth();if(width!==me.lastInputWidth){me.fireEvent("autosize",me,width);me.lastInputWidth=width;delete me.autoSizing}}},onDestroy:function(){var me=this;me.callParent();if(me.inputFocusTask){me.inputFocusTask.cancel();me.inputFocusTask=null}}});