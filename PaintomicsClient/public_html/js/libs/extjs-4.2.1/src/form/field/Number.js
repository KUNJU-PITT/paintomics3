Ext.define("Ext.form.field.Number",{extend:"Ext.form.field.Spinner",alias:"widget.numberfield",alternateClassName:["Ext.form.NumberField","Ext.form.Number"],allowExponential:true,allowDecimals:true,decimalSeparator:".",submitLocaleSeparator:true,decimalPrecision:2,minValue:Number.NEGATIVE_INFINITY,maxValue:Number.MAX_VALUE,step:1,minText:"The minimum value for this field is {0}",maxText:"The maximum value for this field is {0}",nanText:"{0} is not a valid number",negativeText:"The value cannot be negative",baseChars:"0123456789",autoStripChars:false,initComponent:function(){var me=this;me.callParent();me.setMinValue(me.minValue);me.setMaxValue(me.maxValue)},getErrors:function(value){var me=this,errors=me.callParent(arguments),format=Ext.String.format,num;value=Ext.isDefined(value)?value:this.processRawValue(this.getRawValue());if(value.length<1){return errors}value=String(value).replace(me.decimalSeparator,".");if(isNaN(value)){errors.push(format(me.nanText,value))}num=me.parseValue(value);if(me.minValue===0&&num<0){errors.push(this.negativeText)}else if(num<me.minValue){errors.push(format(me.minText,me.minValue))}if(num>me.maxValue){errors.push(format(me.maxText,me.maxValue))}return errors},rawToValue:function(rawValue){var value=this.fixPrecision(this.parseValue(rawValue));if(value===null){value=rawValue||null}return value},valueToRaw:function(value){var me=this,decimalSeparator=me.decimalSeparator;value=me.parseValue(value);value=me.fixPrecision(value);value=Ext.isNumber(value)?value:parseFloat(String(value).replace(decimalSeparator,"."));value=isNaN(value)?"":String(value).replace(".",decimalSeparator);return value},getSubmitValue:function(){var me=this,value=me.callParent();if(!me.submitLocaleSeparator){value=value.replace(me.decimalSeparator,".")}return value},onChange:function(){this.toggleSpinners();this.callParent(arguments)},toggleSpinners:function(){var me=this,value=me.getValue(),valueIsNull=value===null,enabled;if(me.spinUpEnabled||me.spinUpDisabledByToggle){enabled=valueIsNull||value<me.maxValue;me.setSpinUpEnabled(enabled,true)}if(me.spinDownEnabled||me.spinDownDisabledByToggle){enabled=valueIsNull||value>me.minValue;me.setSpinDownEnabled(enabled,true)}},setMinValue:function(value){var me=this,allowed;me.minValue=Ext.Number.from(value,Number.NEGATIVE_INFINITY);me.toggleSpinners();if(me.disableKeyFilter!==true){allowed=me.baseChars+"";if(me.allowExponential){allowed+=me.decimalSeparator+"e+-"}else{if(me.allowDecimals){allowed+=me.decimalSeparator}if(me.minValue<0){allowed+="-"}}allowed=Ext.String.escapeRegex(allowed);me.maskRe=new RegExp("["+allowed+"]");if(me.autoStripChars){me.stripCharsRe=new RegExp("[^"+allowed+"]","gi")}}},setMaxValue:function(value){this.maxValue=Ext.Number.from(value,Number.MAX_VALUE);this.toggleSpinners()},parseValue:function(value){value=parseFloat(String(value).replace(this.decimalSeparator,"."));return isNaN(value)?null:value},fixPrecision:function(value){var me=this,nan=isNaN(value),precision=me.decimalPrecision;if(nan||!value){return nan?"":value}else if(!me.allowDecimals||precision<=0){precision=0}return parseFloat(Ext.Number.toFixed(parseFloat(value),precision))},beforeBlur:function(){var me=this,v=me.parseValue(me.getRawValue());if(!Ext.isEmpty(v)){me.setValue(v)}},setSpinUpEnabled:function(enabled,internal){this.callParent(arguments);if(!internal){delete this.spinUpDisabledByToggle}else{this.spinUpDisabledByToggle=!enabled}},onSpinUp:function(){var me=this;if(!me.readOnly){me.setSpinValue(Ext.Number.constrain(me.getValue()+me.step,me.minValue,me.maxValue))}},setSpinDownEnabled:function(enabled,internal){this.callParent(arguments);if(!internal){delete this.spinDownDisabledByToggle}else{this.spinDownDisabledByToggle=!enabled}},onSpinDown:function(){var me=this;if(!me.readOnly){me.setSpinValue(Ext.Number.constrain(me.getValue()-me.step,me.minValue,me.maxValue))}},setSpinValue:function(value){var me=this,len;if(me.enforceMaxLength){if(me.fixPrecision(value).toString().length>me.maxLength){return}}me.setValue(value)}});