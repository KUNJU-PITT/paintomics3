Ext.define("Ext.tree.Panel",{extend:"Ext.panel.Table",alias:"widget.treepanel",alternateClassName:["Ext.tree.TreePanel","Ext.TreePanel"],requires:["Ext.tree.View","Ext.selection.TreeModel","Ext.tree.Column","Ext.data.TreeStore"],viewType:"treeview",selType:"treemodel",treeCls:Ext.baseCSSPrefix+"tree-panel",deferRowRender:false,rowLines:false,lines:true,useArrows:false,singleExpand:false,ddConfig:{enableDrag:true,enableDrop:true},rootVisible:true,displayField:"text",root:null,normalCfgCopy:["displayField","root","singleExpand","useArrows","lines","rootVisible","scroll"],lockedCfgCopy:["displayField","root","singleExpand","useArrows","lines","rootVisible"],isTree:true,arrowCls:Ext.baseCSSPrefix+"tree-arrows",linesCls:Ext.baseCSSPrefix+"tree-lines",noLinesCls:Ext.baseCSSPrefix+"tree-no-lines",autoWidthCls:Ext.baseCSSPrefix+"autowidth-table",constructor:function(config){config=config||{};if(config.animate===undefined){config.animate=Ext.isBoolean(this.animate)?this.animate:Ext.enableFx}this.enableAnimations=config.animate;delete config.animate;this.callParent([config])},initComponent:function(){var me=this,cls=[me.treeCls],store=me.store,view;if(me.useArrows){cls.push(me.arrowCls);me.lines=false}if(me.lines){cls.push(me.linesCls)}else if(!me.useArrows){cls.push(me.noLinesCls)}if(Ext.isString(store)){store=me.store=Ext.StoreMgr.lookup(store)}else if(!store||Ext.isObject(store)&&!store.isStore){store=me.store=new Ext.data.TreeStore(Ext.apply({root:me.root,fields:me.fields,model:me.model,folderSort:me.folderSort},store))}else if(me.root){store=me.store=Ext.data.StoreManager.lookup(store);store.setRootNode(me.root);if(me.folderSort!==undefined){store.folderSort=me.folderSort;store.sort()}}me.viewConfig=Ext.apply({rootVisible:me.rootVisible,animate:me.enableAnimations,singleExpand:me.singleExpand,node:store.getRootNode(),hideHeaders:me.hideHeaders},me.viewConfig);if(!me.columns){if(me.initialConfig.hideHeaders===undefined){me.hideHeaders=true}me.addCls(me.autoWidthCls);me.columns=[{xtype:"treecolumn",text:"Name",width:Ext.isIE6?"100%":1e4,dataIndex:me.displayField}]}if(me.cls){cls.push(me.cls)}me.cls=cls.join(" ");me.callParent();me.selModel.treeStore=me.store;view=me.getView();me.relayEvents(view,["checkchange","afteritemexpand","afteritemcollapse"]);if(!view.isLockingView){if(!view.rootVisible&&!me.getRootNode()){me.setRootNode({expanded:true})}}},bindStore:function(store,initial){var me=this;me.store=store;me.storeListeners=me.mon(store,{destroyable:true,load:me.onStoreLoad,rootchange:me.onRootChange,clear:me.onClear,scope:me});me.storeRelayers=me.relayEvents(store,["beforeload","load"]);me.storeRelayers1=me.mon(store,{destroyable:true,append:me.createRelayer("itemappend"),remove:me.createRelayer("itemremove"),move:me.createRelayer("itemmove",[0,4]),insert:me.createRelayer("iteminsert"),beforeappend:me.createRelayer("beforeitemappend"),beforeremove:me.createRelayer("beforeitemremove"),beforemove:me.createRelayer("beforeitemmove"),beforeinsert:me.createRelayer("beforeiteminsert"),expand:me.createRelayer("itemexpand",[0,1]),collapse:me.createRelayer("itemcollapse",[0,1]),beforeexpand:me.createRelayer("beforeitemexpand",[0,1]),beforecollapse:me.createRelayer("beforeitemcollapse",[0,1])});store.ownerTree=me;if(!initial){me.view.setRootNode(me.getRootNode())}},unbindStore:function(){var me=this,store=me.store;if(store){Ext.destroy(me.storeListeners,me.storeRelayers,me.storeRelayers1);delete store.ownerTree}},onClear:function(){this.view.onClear()},setRootNode:function(){return this.store.setRootNode.apply(this.store,arguments)},getRootNode:function(){return this.store.getRootNode()},onRootChange:function(root){this.view.setRootNode(root)},getChecked:function(){return this.getView().getChecked()},isItemChecked:function(rec){return rec.get("checked")},expandNode:function(record,deep,callback,scope){return this.getView().expand(record,deep,callback,scope||this)},collapseNode:function(record,deep,callback,scope){return this.getView().collapse(record,deep,callback,scope||this)},expandAll:function(callback,scope){var me=this,root=me.getRootNode(),animate=me.enableAnimations;if(root){if(!animate){Ext.suspendLayouts()}root.expand(true,callback,scope||me);if(!animate){Ext.resumeLayouts(true)}}},collapseAll:function(callback,scope){var me=this,root=me.getRootNode(),animate=me.enableAnimations,view=me.getView();if(root){if(!animate){Ext.suspendLayouts()}scope=scope||me;if(view.rootVisible){root.collapse(true,callback,scope)}else{root.collapseChildren(true,callback,scope)}if(!animate){Ext.resumeLayouts(true)}}},expandPath:function(path,field,separator,callback,scope){var me=this,current=me.getRootNode(),index=1,view=me.getView(),keys,expander;field=field||me.getRootNode().idProperty;separator=separator||"/";if(Ext.isEmpty(path)){Ext.callback(callback,scope||me,[false,null]);return}keys=path.split(separator);if(current.get(field)!=keys[1]){Ext.callback(callback,scope||me,[false,current]);return}expander=function(){if(++index===keys.length){Ext.callback(callback,scope||me,[true,current]);return}var node=current.findChild(field,keys[index]);if(!node){Ext.callback(callback,scope||me,[false,current]);return}current=node;current.expand(false,expander)};current.expand(false,expander)},selectPath:function(path,field,separator,callback,scope){var me=this,root,keys,last;field=field||me.getRootNode().idProperty;separator=separator||"/";keys=path.split(separator);last=keys.pop();if(keys.length>1){me.expandPath(keys.join(separator),field,separator,function(success,node){var lastNode=node;if(success&&node){node=node.findChild(field,last);if(node){me.getSelectionModel().select(node);Ext.callback(callback,scope||me,[true,node]);return}}Ext.callback(callback,scope||me,[false,lastNode])},me)}else{root=me.getRootNode();if(root.getId()===last){me.getSelectionModel().select(root);Ext.callback(callback,scope||me,[true,root])}else{Ext.callback(callback,scope||me,[false,null])}}}});