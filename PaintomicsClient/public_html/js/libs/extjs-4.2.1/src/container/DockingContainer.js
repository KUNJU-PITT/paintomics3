Ext.define("Ext.container.DockingContainer",{requires:["Ext.util.MixedCollection","Ext.Element"],isDockingContainer:true,defaultDockWeights:{top:{render:1,visual:1},left:{render:3,visual:5},right:{render:5,visual:7},bottom:{render:7,visual:3}},dockOrder:{top:-1,left:-1,right:1,bottom:1},horizontalDocks:0,addDocked:function(items,pos){var me=this,i=0,item,length;items=me.prepareItems(items);length=items.length;for(;i<length;i++){item=items[i];item.dock=item.dock||"top";if(item.dock==="left"||item.dock==="right"){me.horizontalDocks++}if(pos!==undefined){i+=pos;me.dockedItems.insert(i,item)}else{me.dockedItems.add(item)}item.onAdded(me,i);if(me.hasListeners.dockedadd){me.fireEvent("dockedadd",me,item,i)}if(me.onDockedAdd!==Ext.emptyFn){me.onDockedAdd(item)}}if(me.rendered&&!me.suspendLayout){me.updateLayout()}return items},destroyDockedItems:function(){var dockedItems=this.dockedItems,c;if(dockedItems){while(c=dockedItems.first()){this.removeDocked(c,true)}}},doRenderDockedItems:function(out,renderData,after){var me=renderData.$comp,layout=me.componentLayout,items,tree;if(layout.getDockedItems&&!renderData.$skipDockedItems){items=layout.getDockedItems("render",!after);tree=items&&layout.getItemsRenderTree(items);if(tree){Ext.DomHelper.generateMarkup(tree,out)}}},getDockedComponent:function(comp){if(Ext.isObject(comp)){comp=comp.getItemId()}return this.dockedItems.get(comp)},getDockedItems:function(selector,beforeBody){var dockedItems=this.getComponentLayout().getDockedItems("render",beforeBody);if(selector&&dockedItems.length){dockedItems=Ext.ComponentQuery.query(selector,dockedItems)}return dockedItems},getDockingRefItems:function(deep,containerItems){var selector=deep&&"*,* *",dockedItems=this.getDockedItems(selector,true),items;dockedItems.push.apply(dockedItems,containerItems);items=this.getDockedItems(selector,false);dockedItems.push.apply(dockedItems,items);return dockedItems},initDockingItems:function(){var me=this,items=me.dockedItems;me.dockedItems=new Ext.util.AbstractMixedCollection(false,me.getComponentId);if(items){me.addDocked(items)}},insertDocked:function(pos,items){this.addDocked(items,pos)},onDockedAdd:Ext.emptyFn,onDockedRemove:Ext.emptyFn,removeDocked:function(item,autoDestroy){var me=this,layout,hasLayout;autoDestroy=autoDestroy===true||autoDestroy!==false&&me.autoDestroy;if(!me.dockedItems.contains(item)){return item}if(item.dock==="left"||item.dock==="right"){me.horizontalDocks--}layout=me.componentLayout;hasLayout=layout&&me.rendered;if(hasLayout){layout.onRemove(item)}me.dockedItems.remove(item);item.onRemoved(item.destroying||autoDestroy);me.onDockedRemove(item);if(autoDestroy){item.destroy()}else if(hasLayout){layout.afterRemove(item)}if(me.hasListeners.dockedremove){me.fireEvent("dockedremove",me,item)}if(!me.destroying&&!me.suspendLayout){me.updateLayout()}return item},setupDockingRenderTpl:function(renderTpl){renderTpl.renderDockedItems=this.doRenderDockedItems}});