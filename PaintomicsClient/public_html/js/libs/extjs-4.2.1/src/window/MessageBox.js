Ext.define("Ext.window.MessageBox",{extend:"Ext.window.Window",requires:["Ext.toolbar.Toolbar","Ext.form.field.Text","Ext.form.field.TextArea","Ext.form.field.Display","Ext.button.Button","Ext.layout.container.Anchor","Ext.layout.container.HBox","Ext.ProgressBar"],alias:"widget.messagebox",OK:1,YES:2,NO:4,CANCEL:8,OKCANCEL:9,YESNO:6,YESNOCANCEL:14,INFO:Ext.baseCSSPrefix+"message-box-info",WARNING:Ext.baseCSSPrefix+"message-box-warning",QUESTION:Ext.baseCSSPrefix+"message-box-question",ERROR:Ext.baseCSSPrefix+"message-box-error",hideMode:"offsets",closeAction:"hide",resizable:false,title:"&#160;",defaultMinWidth:250,defaultMaxWidth:600,defaultMinHeight:110,defaultMaxHeight:500,minWidth:null,maxWidth:null,minHeight:null,maxHeight:null,constrain:true,cls:[Ext.baseCSSPrefix+"message-box",Ext.baseCSSPrefix+"hide-offsets"],layout:{type:"vbox",align:"stretch"},shrinkWrapDock:true,defaultTextHeight:75,minProgressWidth:250,minPromptWidth:250,buttonText:{ok:"OK",yes:"Yes",no:"No",cancel:"Cancel"},buttonIds:["ok","yes","no","cancel"],titleText:{confirm:"Confirm",prompt:"Prompt",wait:"Loading...",alert:"Attention"},iconHeight:35,iconWidth:50,makeButton:function(btnIdx){var btnId=this.buttonIds[btnIdx];return new Ext.button.Button({handler:this.btnCallback,itemId:btnId,scope:this,text:this.buttonText[btnId],minWidth:75})},btnCallback:function(btn){var me=this,value,field;if(me.cfg.prompt||me.cfg.multiline){if(me.cfg.multiline){field=me.textArea}else{field=me.textField}value=field.getValue();field.reset()}me.hide();me.userCallback(btn.itemId,value,me.cfg)},hide:function(){var me=this,cls=me.cfg.cls;me.dd.endDrag();me.progressBar.reset();if(cls){me.removeCls(cls)}me.callParent(arguments)},constructor:function(cfg){var me=this;me.callParent(arguments);me.minWidth=me.defaultMinWidth=me.minWidth||me.defaultMinWidth;me.maxWidth=me.defaultMaxWidth=me.maxWidth||me.defaultMaxWidth;me.minHeight=me.defaultMinHeight=me.minHeight||me.defaultMinHeight;me.maxHeight=me.defaultMaxHeight=me.maxHeight||me.defaultMaxHeight},initComponent:function(cfg){var me=this,baseId=me.id,i,button;me.title="&#160;";me.topContainer=new Ext.container.Container({layout:"hbox",padding:10,style:{overflow:"hidden"},items:[me.iconComponent=new Ext.Component({width:me.iconWidth,height:me.iconHeight}),me.promptContainer=new Ext.container.Container({flex:1,layout:"anchor",items:[me.msg=new Ext.form.field.Display({id:baseId+"-displayfield",cls:me.baseCls+"-text"}),me.textField=new Ext.form.field.Text({id:baseId+"-textfield",anchor:"100%",enableKeyEvents:true,listeners:{keydown:me.onPromptKey,scope:me}}),me.textArea=new Ext.form.field.TextArea({id:baseId+"-textarea",anchor:"100%",height:75})]})]});me.progressBar=new Ext.ProgressBar({id:baseId+"-progressbar",margins:"0 10 10 10"});me.items=[me.topContainer,me.progressBar];me.msgButtons=[];for(i=0;i<4;i++){button=me.makeButton(i);me.msgButtons[button.itemId]=button;me.msgButtons.push(button)}me.bottomTb=new Ext.toolbar.Toolbar({id:baseId+"-toolbar",ui:"footer",dock:"bottom",layout:{pack:"center"},items:[me.msgButtons[0],me.msgButtons[1],me.msgButtons[2],me.msgButtons[3]]});me.dockedItems=[me.bottomTb];me.on("close",me.onClose,me);me.callParent()},onClose:function(){var btn=this.header.child("[type=close]");btn.itemId="cancel";this.btnCallback(btn);delete btn.itemId},onPromptKey:function(textField,e){var me=this;if(e.keyCode===e.RETURN||e.keyCode===10){if(me.msgButtons.ok.isVisible()){me.msgButtons.ok.handler.call(me,me.msgButtons.ok)}else if(me.msgButtons.yes.isVisible()){me.msgButtons.yes.handler.call(me,me.msgButtons.yes)}}},reconfigure:function(cfg){var me=this,buttons=0,hideToolbar=true,oldButtonText=me.buttonText,resizer=me.resizer,resizeTracker,width,height,i,textArea,textField,msg,progressBar,msgButtons;me.updateButtonText();cfg=cfg||{};me.cfg=cfg;if(cfg.width){width=cfg.width}if(cfg.height){height=cfg.height}me.minWidth=cfg.minWidth||me.defaultMinWidth;me.maxWidth=cfg.maxWidth||me.defaultMaxWidth;me.minHeight=cfg.minHeight||me.defaultMinHeight;me.maxHeight=cfg.maxHeight||me.defaultMaxHeight;if(resizer){resizeTracker=resizer.resizeTracker;resizer.minWidth=resizeTracker.minWidth=me.minWidth;resizer.maxWidth=resizeTracker.maxWidth=me.maxWidth;resizer.minHeight=resizeTracker.minHeight=me.minHeight;resizer.maxHeight=resizeTracker.maxHeight=me.maxHeight}delete me.defaultFocus;if(cfg.defaultFocus){me.defaultFocus=cfg.defaultFocus}me.animateTarget=cfg.animateTarget||undefined;me.modal=cfg.modal!==false;me.setTitle(cfg.title||"");me.setIconCls(cfg.iconCls||"");if(Ext.isObject(cfg.buttons)){me.buttonText=cfg.buttons;buttons=0}else{me.buttonText=cfg.buttonText||me.buttonText;buttons=Ext.isNumber(cfg.buttons)?cfg.buttons:0}buttons=buttons|me.updateButtonText();me.buttonText=oldButtonText;Ext.suspendLayouts();delete me.width;delete me.height;if(width||height){if(width){me.setWidth(width)}if(height){me.setHeight(height)}}me.hidden=false;if(!me.rendered){me.render(Ext.getBody())}me.closable=cfg.closable!==false&&!cfg.wait;me.header.child("[type=close]").setVisible(me.closable);if(!cfg.title&&!me.closable&&!cfg.iconCls){me.header.hide()}else{me.header.show()}me.liveDrag=!cfg.proxyDrag;me.userCallback=Ext.Function.bind(cfg.callback||cfg.fn||Ext.emptyFn,cfg.scope||Ext.global);me.setIcon(cfg.icon,cfg.iconWidth,cfg.iconHeight);msg=me.msg;if(cfg.msg){msg.setValue(cfg.msg);msg.show()}else{msg.hide()}textArea=me.textArea;textField=me.textField;if(cfg.prompt||cfg.multiline){me.multiline=cfg.multiline;if(cfg.multiline){textArea.setValue(cfg.value);textArea.setHeight(cfg.defaultTextHeight||me.defaultTextHeight);textArea.show();textField.hide();me.defaultFocus=textArea}else{textField.setValue(cfg.value);textArea.hide();textField.show();me.defaultFocus=textField}}else{textArea.hide();textField.hide()}progressBar=me.progressBar;if(cfg.progress||cfg.wait){progressBar.show();me.updateProgress(0,cfg.progressText);if(cfg.wait===true){progressBar.wait(cfg.waitConfig)}}else{progressBar.hide()}msgButtons=me.msgButtons;for(i=0;i<4;i++){if(buttons&Math.pow(2,i)){if(!me.defaultFocus){me.defaultFocus=msgButtons[i]}msgButtons[i].show();hideToolbar=false}else{msgButtons[i].hide()}}if(hideToolbar){me.bottomTb.hide()}else{me.bottomTb.show()}Ext.resumeLayouts(true)},updateButtonText:function(){var me=this,buttonText=me.buttonText,buttons=0,btnId,btn;for(btnId in buttonText){if(buttonText.hasOwnProperty(btnId)){btn=me.msgButtons[btnId];if(btn){if(me.cfg&&me.cfg.buttonText){buttons=buttons|Math.pow(2,Ext.Array.indexOf(me.buttonIds,btnId))}if(btn.text!=buttonText[btnId]){btn.setText(buttonText[btnId])}}}}return buttons},show:function(cfg){var me=this,visibleFocusables;if(Ext.AbstractComponent.layoutSuspendCount){Ext.on({resumelayouts:function(){me.show(cfg)},single:true});return me}me.reconfigure(cfg);if(cfg.cls){me.addCls(cfg.cls)}visibleFocusables=me.query("textfield:not([hidden]),textarea:not([hidden]),button:not([hidden])");me.preventFocusOnActivate=!visibleFocusables.length;me.hidden=true;me.callParent();return me},onShow:function(){this.callParent(arguments);this.center()},updateText:function(text){this.msg.setValue(text)},setIcon:function(icon,width,height){var me=this,iconCmp=me.iconComponent,cls=me.messageIconCls;if(cls){iconCmp.removeCls(cls)}if(icon){iconCmp.show();iconCmp.setSize(width||me.iconWidth,height||me.iconHeight);iconCmp.addCls(Ext.baseCSSPrefix+"dlg-icon");iconCmp.addCls(me.messageIconCls=icon)}else{iconCmp.removeCls(Ext.baseCSSPrefix+"dlg-icon");iconCmp.hide()}return me},updateProgress:function(value,progressText,msg){this.progressBar.updateProgress(value,progressText);if(msg){this.updateText(msg)}return this},onEsc:function(){if(this.closable!==false){this.callParent(arguments)}},confirm:function(cfg,msg,fn,scope){if(Ext.isString(cfg)){cfg={title:cfg,icon:this.QUESTION,msg:msg,buttons:this.YESNO,callback:fn,scope:scope}}return this.show(cfg)},prompt:function(cfg,msg,fn,scope,multiline,value){if(Ext.isString(cfg)){cfg={prompt:true,title:cfg,minWidth:this.minPromptWidth,msg:msg,buttons:this.OKCANCEL,callback:fn,scope:scope,multiline:multiline,value:value}}return this.show(cfg)},wait:function(cfg,title,config){if(Ext.isString(cfg)){cfg={title:title,msg:cfg,closable:false,wait:true,modal:true,minWidth:this.minProgressWidth,waitConfig:config}}return this.show(cfg)},alert:function(cfg,msg,fn,scope){if(Ext.isString(cfg)){cfg={title:cfg,msg:msg,buttons:this.OK,fn:fn,scope:scope,minWidth:this.minWidth}}return this.show(cfg)},progress:function(cfg,msg,progressText){if(Ext.isString(cfg)){cfg={title:cfg,msg:msg,progress:true,progressText:progressText}}return this.show(cfg)}},function(){Ext.MessageBox=Ext.Msg=new this});