(function(){var app=angular.module("admin.controllers.file-controllers",["ui.bootstrap","ang-dialogs","chart.js","files.files.file-list"]);app.controller("FileListController",function($rootScope,$scope,$http,$dialogs,$state,$interval,$uibModal,APP_EVENTS,FileList){this.retrieveFilesListData=function(force,callback_caller,callback_function){$scope.isLoading=true;if(FileList.getOld()>1||force){$http($rootScope.getHttpRequestConfig("GET","files",{})).then(function successCallback(response){$scope.isLoading=false;$scope.files=FileList.setFiles(response.data.fileList).getFiles();if(callback_function!==undefined){callback_caller[callback_function]()}},function errorCallback(response){$scope.isLoading=false;debugger;var message="Failed while retrieving the files list.";$dialogs.showErrorDialog(message,{logMessage:message+" at FileListController:retrieveFilesListData."});console.error(response.data)})}else{$scope.files=FileList.getFiles();$scope.isLoading=false}};$scope.filterFiles=function(propertyName){$scope.foundFiles=$scope.foundFiles||{};$scope.foundFiles[propertyName]=0;return function(item){var filterAux,item_categories;var valid=$scope.searchFor!==undefined&&$scope.searchFor.length>$scope.minSearchLength&&item[propertyName].toLowerCase().indexOf($scope.searchFor.toLowerCase())!==-1;if(valid){$scope.foundFiles[propertyName]++}return valid}};$scope.formatSize=function(bytes){if(bytes==0)return"0 Bytes";var decimals=1,k=1e3,dm=decimals+1||3,sizes=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+" "+sizes[i]};this.editFileHandler=function(file){$scope.model=file;this.addNewFileHandler()};this.addNewFileHandler=function(){var modalInstance=$uibModal.open({controller:"FileController",controllerAs:"controller",size:"md",scope:$scope,templateUrl:"templates/file-details.tpl.html"});modalInstance.result.then(function(selectedItem){delete $scope.model;me.retrieveFilesListData(true)},function(){delete $scope.model;me.retrieveFilesListData(true)})};this.applySearchHandler=function(){var filters=arrayUnique($scope.filters.concat($scope.searchFor.split(" ")));$scope.filters=WorkflowList.setFilters(filters).getFilters()};this.deleteFileHandler=function(file){var sendRemoveRequest=function(option){if(option==="ok"){$http($rootScope.getHttpRequestConfig("DELETE","files",{extra:file.fileName,data:{fileName:file.fileName}})).then(function successCallback(response){if(response.data.success){me.retrieveFilesListData(true)}},function errorCallback(response){$scope.isLoading=false;debugger;var message="Failed while deleting the file.";$dialogs.showErrorDialog(message,{logMessage:message+" at FileListController:deleteFileHandler."});console.error(response.data)})}};$dialogs.showConfirmationDialog("Are you sure?",{title:"Remove the selected file?",callback:sendRemoveRequest})};var me=this;$scope.files=FileList.getFiles();$scope.minSearchLength=2;$scope.filters=FileList.getFilters();$scope.filteredFiles=$scope.files.length;this.retrieveFilesListData(true)});app.controller("FileController",function($rootScope,$scope,$http,$dialogs,$uibModalInstance,APP_EVENTS,FileList){this.saveFileDetailsHandler=function(){var formData=new FormData;if($scope.hideUpload){formData.append("fileName",$scope.model.fileName)}else{formData.append("files",$scope.file)}formData.append("specie",$scope.model.otherFields.specie);formData.append("version",$scope.model.otherFields.version);formData.append("source",$scope.model.otherFields.source);formData.append("dataType",$scope.model.dataType);formData.append("omicType",$scope.model.omicType);formData.append("description",$scope.model.description);$http.post($rootScope.getRequestPath("files"),formData,{transformRequest:angular.identity,headers:{"Content-Type":undefined}}).then(function successCallback(response){$dialogs.showSuccessDialog("File succesfully saved.");$uibModalInstance.dismiss("cancel")},function errorCallback(response){debugger;var message="Failed while saving the file. "+response.data.message;$dialogs.showErrorDialog(message,{logMessage:message+" at FileController:saveFileDetailsHandler."})})};this.closeFileDetailsHandler=function(){$uibModalInstance.dismiss("cancel")};var me=this;$scope.hideUpload=$scope.model!==undefined;if(!$scope.model){$scope.model={dataType:"Reference file",otherFields:{}}}})})();