Ext.define("Ext.upload.uploader.ExtJsUploader",{extend:"Ext.upload.uploader.AbstractXhrUploader",requires:["Ext.upload.data.Connection"],config:{method:"PUT",connection:null},conn:null,initConnection:function(){var conn,url=this.url;if(this.connection instanceof Ext.data.Connection){conn=this.connection}else{if(this.params){url=Ext.urlAppend(url,Ext.urlEncode(this.params))}conn=Ext.create("Ext.upload.data.Connection",{disableCaching:true,method:this.method,url:url,timeout:this.timeout,defaultHeaders:{"Content-Type":this.contentType,"X-Requested-With":"XMLHttpRequest"}})}return conn},initHeaders:function(item){var headers=this.callParent(arguments);headers["Content-Type"]=item.getType();return headers},uploadItem:function(item){var file=item.getFileApiObject();if(!file){return}item.setUploading();this.conn=this.initConnection();this.conn.request({scope:this,headers:this.initHeaders(item),rawData:file,success:Ext.Function.bind(this.onUploadSuccess,this,[item],true),failure:Ext.Function.bind(this.onUploadFailure,this,[item],true),progress:Ext.Function.bind(this.onUploadProgress,this,[item],true)})},abortUpload:function(){if(this.conn){this.suspendEvents();this.conn.abort();this.resumeEvents()}}});