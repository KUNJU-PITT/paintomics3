Ext.define("Ext.upload.Dialog",{extend:"Ext.window.Window",requires:["Ext.upload.ItemGridPanel","Ext.upload.Manager","Ext.upload.StatusBar","Ext.upload.BrowseButton","Ext.upload.Queue"],width:700,height:500,config:{dialogTitle:"",synchronous:true,uploadUrl:"",uploadParams:{},uploadExtraHeaders:{},uploadTimeout:6e4,textOk:"OK",textClose:"Close",textUpload:"Upload",textBrowse:"Browse",textAbort:"Abort",textRemoveSelected:"Remove selected",textRemoveAll:"Remove all",textFilename:"Filename",textSize:"Size",textType:"Type",textStatus:"Status",textProgress:"%",selectionMessageText:"Selected {0} file(s), {1}",uploadMessageText:"Upload progress {0}% ({1} of {2} souborÅ¯)",buttonText:"Browse..."},queue:null,grid:null,uploadManager:null,statusBar:null,browseButton:null,constructor:function(config){this.initConfig(config);return this.callParent(arguments)},initComponent:function(){this.addEvents({uploadcomplete:true});this.queue=this.initQueue();this.grid=Ext.create("Ext.upload.ItemGridPanel",{queue:this.queue,textFilename:this.textFilename,textSize:this.textSize,textType:this.textType,textStatus:this.textStatus,textProgress:this.textProgress});this.uploadManager=Ext.create("Ext.upload.Manager",{url:this.uploadUrl,synchronous:this.synchronous,params:this.uploadParams,extraHeaders:this.uploadExtraHeaders,uploadTimeout:this.uploadTimeout});this.uploadManager.on("uploadcomplete",this.onUploadComplete,this);this.uploadManager.on("itemuploadsuccess",this.onItemUploadSuccess,this);this.uploadManager.on("itemuploadfailure",this.onItemUploadFailure,this);this.statusBar=Ext.create("Ext.upload.StatusBar",{dock:"bottom",selectionMessageText:this.selectionMessageText,uploadMessageText:this.uploadMessageText});Ext.apply(this,{title:this.dialogTitle,autoScroll:true,layout:"fit",uploading:false,items:[this.grid],dockedItems:[this.getTopToolbarConfig(),{xtype:"toolbar",dock:"bottom",ui:"footer",defaults:{minWidth:this.minButtonWidth},items:["->",{text:this.textClose,cls:"x-btn-text-icon",scope:this,handler:function(){this.close()}}]},this.statusBar]});this.on("afterrender",function(){this.stateInit()},this);this.callParent(arguments)},getTopToolbarConfig:function(){this.browseButton=Ext.create("Ext.upload.BrowseButton",{id:"button_browse",buttonText:this.buttonText});this.browseButton.on("fileselected",this.onFileSelection,this);return{xtype:"toolbar",dock:"top",items:[this.browseButton,"-",{id:"button_upload",text:this.textUpload,iconCls:"ux-mu-icon-action-upload",scope:this,handler:this.onInitUpload},"-",{id:"button_abort",text:this.textAbort,iconCls:"ux-mu-icon-action-abort",scope:this,handler:this.onAbortUpload,disabled:true},"->",{id:"button_remove_selected",text:this.textRemoveSelected,iconCls:"ux-mu-icon-action-remove",scope:this,handler:this.onMultipleRemove},"-",{id:"button_remove_all",text:this.textRemoveAll,iconCls:"ux-mu-icon-action-remove",scope:this,handler:this.onRemoveAll}]}},initQueue:function(){var queue=Ext.create("Ext.upload.Queue");queue.on("queuechange",this.onQueueChange,this);return queue},onInitUpload:function(){if(!this.queue.getCount()){return}this.stateUpload();this.startUpload()},onAbortUpload:function(){this.uploadManager.abortUpload();this.finishUpload();this.switchState()},onUploadComplete:function(manager,queue,errorCount){this.finishUpload();this.stateInit();this.fireEvent("uploadcomplete",this,manager,queue.getUploadedItems(),errorCount)},onFileSelection:function(input,files){this.queue.clearUploadedItems();this.queue.addFiles(files);this.browseButton.reset()},onQueueChange:function(queue){this.updateStatusBar();this.switchState()},onMultipleRemove:function(){var records=this.grid.getSelectedRecords();if(!records.length){return}var keys=[];var i;var num=records.length;for(i=0;i<num;i++){keys.push(records[i].get("filename"))}this.queue.removeItemsByKey(keys)},onRemoveAll:function(){this.queue.clearItems()},onItemUploadSuccess:function(item,info){},onItemUploadFailure:function(item,info){},startUpload:function(){this.uploading=true;this.uploadManager.uploadQueue(this.queue)},finishUpload:function(){this.uploading=false},isUploadActive:function(){return this.uploading},updateStatusBar:function(){if(!this.statusBar){return}var numFiles=this.queue.getCount();this.statusBar.setSelectionMessage(this.queue.getCount(),this.queue.getTotalBytes())},getButton:function(id){return Ext.ComponentMgr.get(id)},switchButtons:function(info){var id;for(id in info){this.switchButton(id,info[id])}},switchButton:function(id,on){var button=this.getButton(id);if(button){if(on){button.enable()}else{button.disable()}}},switchState:function(){if(this.uploading){this.stateUpload()}else if(this.queue.getCount()){this.stateQueue()}else{this.stateInit()}},stateInit:function(){this.switchButtons({button_browse:1,button_upload:0,button_abort:0,button_remove_all:1,button_remove_selected:1})},stateQueue:function(){this.switchButtons({button_browse:1,button_upload:1,button_abort:0,button_remove_all:1,button_remove_selected:1})},stateUpload:function(){this.switchButtons({button_browse:0,button_upload:0,button_abort:1,button_remove_all:1,button_remove_selected:1})}});