function JobInstance(jobID){this.jobID=jobID;this.stepNumber=1;this.organism=null;this.pathways=[];this.summary=null;this.mappingSummary=null;this.geneBasedInputOmics=null;this.compoundBasedInputOmics=null;this.omicsValues=null;this.foundCompounds=[];this.selectedPathway=null;this.setJobID=function(jobID){this.jobID=jobID};this.getJobID=function(){return this.jobID};this.setStepNumber=function(stepNumber){this.stepNumber=stepNumber};this.getStepNumber=function(){return this.stepNumber};this.setOrganism=function(organism){this.organism=organism};this.getOrganism=function(){return this.organism};this.setPathways=function(pathways){this.pathways=pathways};this.getPathways=function(){return this.pathways};this.getPathway=function(pathwayID){for(var i in this.pathways){if(pathwayID==this.pathways[i].getID()){return this.pathways[i]}}return null};this.addPathway=function(pathway){this.pathways.push(pathway)};this.setSummary=function(summary){this.summary=summary};this.getSummary=function(){return this.summary};this.setMappingSummary=function(mappingSummary){this.mappingSummary=mappingSummary};this.getMappingSummary=function(){return this.mappingSummary};this.setGeneBasedInputOmics=function(geneBasedInputOmics){this.geneBasedInputOmics=geneBasedInputOmics};this.getGeneBasedInputOmics=function(){return this.geneBasedInputOmics};this.setCompoundBasedInputOmics=function(compoundBasedInputOmics){this.compoundBasedInputOmics=compoundBasedInputOmics};this.getCompoundBasedInputOmics=function(){return this.compoundBasedInputOmics};this.setFoundCompounds=function(foundCompounds){this.foundCompounds=foundCompounds};this.getFoundCompounds=function(){return this.foundCompounds};this.addFoundCompound=function(compoundSet){this.foundCompounds.push(compoundSet)};this.updatePathway=function(pathway){for(var i in this.pathways){if(pathway.getID()==this.pathways[i].getID()){this.pathways.splice(i,1);break}}this.pathways.push(pathway)};this.setSelectedPathway=function(pathwayID){this.selectedPathway=pathwayID};this.getSelectedPathway=function(){return this.selectedPathway};this.setOmicsValues=function(omicsValues){this.omicsValues=omicsValues};this.getOmicsValues=function(){if(this.omicsValues===null){this.omicsValues={}}return this.omicsValues};this.addOmicValue=function(omicsValue){this.getOmicsValues()[omicsValue.getID()]=omicsValue};this.getDataDistributionSummaries=function(omicName){if(this.dataDistributionSummaries===undefined){this.dataDistributionSummaries={};var omicsAux=this.getGeneBasedInputOmics();for(var i in omicsAux){if(omicsAux[i].omicSummary===undefined){showWarningMessage("No information about min/max available.",{message:"The current job instance do not include information about min/max values for each omic type.</br>"+"A possible explanation for this issue could be that the data was generated using an older version of Paintomics.</br>"+"Instead of using the percentiles 10 and 90 for each omics as reference to obtain the colors for the heatmap, Paintomics "+"will calculate locally the min / max for each omics for each selected pathway.",showButton:true,height:260});return null}this.dataDistributionSummaries[omicsAux[i].omicName]=omicsAux[i].omicSummary}omicsAux=this.getCompoundBasedInputOmics();for(var i in omicsAux){if(omicsAux[i].omicSummary===undefined){showWarningMessage("No information about min/max available.",{message:"The current job instance do not include information about min/max values for each omic type.</br>"+"A possible explanataion for this issue could be that the data was generated using an older version of Paintomics.</br>"+"Instead of using the percentiles 10 and 90 for each omics as reference to obtain the colors for the heatmap, Paintomics"+" will calculate locally the min / max for each omics for each selected pathway."});return null}this.dataDistributionSummaries[omicsAux[i].omicName]=omicsAux[i].omicSummary}}return omicName?this.dataDistributionSummaries[omicName]:this.dataDistributionSummaries};this.loadFromJSON=function(jsonObject){for(var i in jsonObject){if(i==="geneBasedInputOmics"){this.geneBasedInputOmics=jsonObject.geneBasedInputOmics;this.geneBasedInputOmics.sort(function(a,b){return a.omicName>b.omicName?1:b.omicName>a.omicName?-1:0})}else if(i==="compoundBasedInputOmics"){this.compoundBasedInputOmics=jsonObject.compoundBasedInputOmics;this.compoundBasedInputOmics.sort(function(a,b){return a.omicName>b.omicName?1:b.omicName>a.omicName?-1:0})}else if(i==="foundCompounds"){this.foundCompounds=[];for(var i in jsonObject.foundCompounds){this.addFoundCompound(new CompoundSet("").loadFromJSON(jsonObject.foundCompounds[i]))}}else if(i==="pathways"){this.pathways=[];for(var i in jsonObject.pathways){this.addPathway(new Pathway("").loadFromJSON(jsonObject.pathways[i]))}}else if(i==="omicsValues"){this.omicsValues={};for(var i in jsonObject.omicsValues){this.addOmicValue(new Feature(i).loadFromJSON(jsonObject.omicsValues[i]))}}else{this[i]=jsonObject[i]}}}}JobInstance.prototype=new Model;